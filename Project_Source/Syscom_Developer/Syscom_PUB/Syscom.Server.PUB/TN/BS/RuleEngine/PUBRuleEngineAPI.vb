Imports System.Text
Imports System.Data.SqlClient
Imports System.IO
Imports Syscom.Server.SQL
Imports Syscom.Server.CMM
Imports Syscom.Comm.EXP
Imports Syscom.Server.BO

Imports Syscom.Comm.TableFactory
Imports Syscom.Comm.Utility


Public Class PUBRuleEngineAPI
    Implements IDisposable

    Private disposedValue As Boolean = False        ''偵測多餘的呼叫

    ' IDisposable
    Protected Overridable Sub Dispose(ByVal disposing As Boolean)
        If Not Me.disposedValue Then
            If disposing Then
                ' TODO: 釋放其他狀態 (Managed 物件)。
            End If

            ' TODO: 釋放您自己的狀態 (Unmanaged 物件)
            ' TODO: 將大型欄位設定為 null。
        End If
        Me.disposedValue = True
    End Sub

#Region " IDisposable Support "
    ' 由 Visual Basic 新增此程式碼以正確實作可處置的模式。
    Public Sub Dispose() Implements IDisposable.Dispose
        ' 請勿變更此程式碼。在以上的 Dispose 置入清除程式碼 (ByVal 視為布林值處置)。
        Dispose(True)
        GC.SuppressFinalize(Me)
    End Sub
#End Region

#Region "### 建構子 ###"

    '''' <summary>
    '''' 建構子
    '''' </summary>
    '''' <param name="reapi"></param>
    '''' <remarks></remarks>
    'Public Sub New(ByVal reapi As DataSet)

    '    If DataSetUtil.IsContainsData(reapi) Then
    '        pubreapi = reapi

    '        If reapi.Tables.Contains("PUB_Rule") Then
    '            RuleCheckDT = reapi.Tables("PUB_Rule").Copy
    '        End If

    '        'TODO Sort 會出現的資料   ex:PUB_Rule.ValueData

    '    End If

    'End Sub

    Public Sub New()
        '創建Folder
        System.IO.Directory.CreateDirectory("c:\result")

        CreateTXTLog("Constructor", True)
    End Sub

#End Region

#Region "### 宣告變數 ###"

    Public Shared Operator_In As String = "(In)"
    Public Shared Operator_Not_In As String = "(Not In)"

    Public Shared Operator_Contain As String = "(Contain)"
    Public Shared Operator_Not_Contain As String = "(Not Contain)"

    Public Shared Operator_Exist As String = "(Exist)"
    Public Shared Operator_Not_Exist As String = "(Not Exist)"

    Private log As Syscom.Server.CMM.LOGDelegate = Syscom.Server.CMM.LOGDelegate.getInstance
    Private SystemDate As Date = DateUtil.getSystemDate
    'Private DBPubSyscode As PUBSysCodeBO_E1 = PUBSysCodeBO_E1.getInstance
    Private CommandStr As StringBuilder = New StringBuilder
    Private pubreapi As DataSet = Nothing

    ''InputDataset 中的內容中，除將USER 提供的 dataset 內容外，必須將規則檢查項目中的一些基本資料再 InputDataset 中新增一個 
    ''DataTable [PUB_Rule] 內存放有關規則及檢查項目的相關參數：
    ''OperatorCode：規則運算子代碼。
    ''ValueData：規則運算元值域(range)。{3,4,8-19}
    ''ValueX：檢查項目中參數 X 的值(如果不存在X為null)。
    ''ValueY：檢查項目中參數 Y 的值(如果不存在Y為null)。
    ''ValueZ：檢查項目中參數 Z 的值(如果不存在Z為null)。
    ''rule check Dt ; {"OperatorCode", "ValueData", "X", "Y", "Z"}
    'Private RuleCheckDT As DataTable = Nothing

    Private returnDatacolumn() As String = {"Result"}
    Private returnDatacolumnType() As Integer = {DataSetUtil.TypeBoolean}

    Private rtnDSName As String = "rtnDataTable"
    Private rtnDSColumn() As String = {"rtvValue", "rtnValueCode"}
    Private rtnDSColumnType() As Integer = {DataSetUtil.TypeString, DataSetUtil.TypeString}

    '執行完的結果值。
    Private rtnDataValue As Object
    '結果值的單位代碼。
    Private rtnDataUnitValue As Object
    '除結果值外，若是另外有需要其他回傳值，均透過這一個property。
    Private rtnDataSet As DataSet
    '回傳值的單位代碼。
    'Private rtnDataUnit1Value As Object

    Private Shared m_instance As PUBRuleEngineAPI = Nothing
    Public Shared Function getInstance() As PUBRuleEngineAPI
        If m_instance Is Nothing Then
            m_instance = New PUBRuleEngineAPI
        End If
        Return m_instance
    End Function


#End Region

#Region "### 設定規則 ###"

    '    ''' <summary>
    '    ''' 設定規則值
    '    ''' </summary>
    '    ''' <param name="RuleProperty"></param>
    '    ''' <returns></returns>
    '    ''' <remarks></remarks>
    '    Public Function setProperty(ByVal RuleProperty As DataTable)
    '        RuleCheckDT = RuleProperty.Copy
    '    End Function

    '    ''' <summary>
    '    ''' 取得結果值
    '    ''' </summary>
    '    ''' <param name="PropertyName"></param>
    '    ''' <returns></returns>
    '    ''' <remarks></remarks>
    '    Public Function getProperty(ByRef PropertyName As String) As DataSet

    '        '取值
    '        '2.	所有屬性的變數型態皆為String且預設值為 Nothing，如Public x As String = Nothing
    '        '3.	若是屬性欲放置的為字串，則須以單引號夾起，數字及布林值則不必，譬如︰”’我是範例’”、”35.35”、”false”，布林值無大小寫之分
    '        '4.	須要有一屬性為returnValue，其變數值須能被布林解析，譬如︰”True”、”False”，沒有大小寫之分
    '        '5.	類別中每個檢核的method 均只回傳 true/false 表示該檢核方法是否正確執行完成，正常結束時，各 method 會將結果值及回傳值指定在本類別中特定的 property 中：
    '        'rtnData：執行完的結果值。
    '        'rtnDataUnit：結果值的單位代碼。
    '        'rtnData1：除結果值外，若是另外有需要其他回傳值，均透過這一個property。
    '        'rtnDataUnit1：回傳值的單位代碼。

    '    End Function

#End Region

#Region "### RuleEngineAPI 2009/08/19 Add By Jen 處理輸入與輸出變數 ###"

    ''''### 裡面有統計到的 "次數"  都要加上本身尚未commit的這次 ###
    'Table:  Order_Record,  Medical_Record

#Region " #### Prpperties 資料 ####"

    ''' <summary>
    ''' api內function使用的參數
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property PUBREAPIData()
        Get
            Return pubreapi
        End Get
        Set(ByVal value)
            pubreapi = value
        End Set
    End Property

    ''' <summary>
    ''' 設定/讀取檢核結果值
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property rtnData() As Object
        Get
            Return rtnDataValue
        End Get
        Set(ByVal value)
            rtnDataValue = value
        End Set
    End Property

    ''' <summary>
    ''' 設定檢核結果值單位
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property rtnDataUnit() As Object
        Get
            Return rtnDataUnitValue
        End Get
        Set(ByVal value)
            rtnDataUnitValue = value
        End Set
    End Property

    ''' <summary>
    ''' 設定/讀取其他回傳值
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property rtnDS() As DataSet
        Get
            Return rtnDataSet
        End Get
        Set(ByVal value As DataSet)
            rtnDataSet = value
        End Set
    End Property

    '''' <summary>
    '''' 設定/讀取其他回傳值
    '''' </summary>
    '''' <value></value>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Property rtnDataUnit1() As Object
    '    Get
    '        Return rtnDataUnit1Value
    '    End Get
    '    Set(ByVal value)
    '        rtnDataUnit1Value = value
    '    End Set
    'End Property

#End Region


    ''' <summary>
    ''' 1.1.初始函數
    ''' </summary>
    ''' <returns>0：無任何錯誤，其它則為初始錯誤</returns>
    ''' <remarks></remarks>
    Friend Function Initialize() As Integer
        Try
            Return 0
        Catch ex As Exception
            log.dbErrorMsg(ex.ToString, ex)
            Return -1
            Throw ex
        End Try
    End Function

    ''' <summary>
    ''' 1.2.終止函數
    ''' </summary>
    ''' <returns>0：無任何錯誤，其它則為初始錯誤</returns>
    ''' <remarks></remarks>
    Friend Function Terminate() As Integer
        Try
            Return 0
        Catch ex As Exception
            log.dbErrorMsg(ex.ToString, ex)
            Return -1
            Throw ex
        End Try
    End Function

    ''' <summary>
    ''' 1.3.擷取錯誤訊息函數
    ''' </summary>
    ''' <param name="nErrorCode">為函數回傳值的錯誤代碼</param>
    ''' <returns>錯誤代碼代表的錯誤訊息</returns>
    ''' <remarks>掛號用</remarks>
    Friend Function GetErrorMsg(ByVal nErrorCode As Integer) As String
        Try
            Return ""
        Catch ex As Exception
            log.dbErrorMsg(ex.ToString, ex)
            Return ""
            Throw ex
        End Try
    End Function

    '############# API本體內容 ##############
    '回傳true, false  彈性可回傳資料Data

    ''' <summary>
    ''' 1.7限門診
    ''' "Medical_Record","Medical_Sn"
    ''' </summary>
    ''' <returns>第一碼為'O'</returns>
    ''' <remarks></remarks>
    Public Function A01ChkCaseNoO() As Boolean

        cleanReturnInfo()

        Dim DataTableName() As String = Nothing
        If isContainsDataTable(DataTableName) Then
            Dim Medical_Sn As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn"), String).Trim

            If (Medical_Sn IsNot Nothing) AndAlso (Not Medical_Sn.Equals("")) AndAlso Medical_Sn.Length > 0 Then
                '非空
                If Medical_Sn.Substring(0, 1).Equals("O") Then
                    rtnData = True

                    CreateTXTLog("A01ChkCaseO", True)

                    Return True
                Else
                End If
            Else
            End If
        Else
            'Medical_Sn Error
        End If

        rtnData = False

        CreateTXTLog("A01ChkCaseO", False)

        Return False

    End Function

    ''' <summary>
    ''' 1.8限急診
    ''' "Medical_Record","Medical_Sn"
    ''' </summary>
    ''' <returns>第一碼為'E'</returns>
    ''' <remarks></remarks>
    Public Function A02ChkCaseNoE() As Boolean

        cleanReturnInfo()

        Dim DataTableName() As String = Nothing
        If isContainsDataTable(DataTableName) Then
            Dim Medical_Sn As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn"), String).Trim

            If (Medical_Sn IsNot Nothing) AndAlso (Not Medical_Sn.Equals("")) AndAlso Medical_Sn.Length > 0 Then
                '非空
                If Medical_Sn.Substring(0, 1).Equals("E") Then
                    rtnData = True

                    CreateTXTLog("A02ChkCaseE", True)

                    Return True
                Else
                End If
            Else

            End If
        Else
            'Medical_Sn Error
        End If

        rtnData = False

        CreateTXTLog("A02ChkCaseE", False)

        Return False

    End Function

    ''' <summary>
    ''' 1.9限住院
    ''' "Medical_Record","Medical_Sn"
    ''' </summary>
    ''' <returns>第一碼為'I'</returns>
    ''' <remarks></remarks>
    Public Function A03ChkCaseNoI() As Boolean

        cleanReturnInfo()

        Dim DataTableName() As String = Nothing
        If isContainsDataTable(DataTableName) Then
            Dim Medical_Sn As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn"), String).Trim

            If (Medical_Sn IsNot Nothing) AndAlso (Not Medical_Sn.Equals("")) AndAlso Medical_Sn.Length > 0 Then
                '非空
                If Medical_Sn.Substring(0, 1).Equals("I") Then
                    rtnData = True

                    CreateTXTLog("A03ChkCaseI", True)

                    Return True
                Else

                End If
            Else
            End If
        Else
            'Medical_Sn Error
        End If

        rtnData = False

        CreateTXTLog("A03ChkCaseI", False)

        Return False

    End Function

    ''' <summary>
    ''' 1.10單一成大碼檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Order_Record", "Order_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function A04ChkOrderCode() As Boolean
        '-----------------------------------------------------------------------
        ''參數說明(Order.Order_Code(單一醫令的醫令碼))
        ''        PUB_Rule.OperatorCode(規則運算子)
        ''        PUB_Rule.ValueData(規則設定值)
        ''處理邏輯	
        ''1.	運算子實作 “(In)”, “(Not In)” 的狀況
        ''2.	運算子左右兩端為Order_Code 及 ValueData
        ''3.	當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then
                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim Order_Code As String = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Order_Code"), String).Trim
                Dim ValueData(pubreapi.Tables("PUB_Rule").Rows.Count - 1) As String

                For i As Integer = 0 To (pubreapi.Tables("PUB_Rule").Rows.Count - 1)
                    ValueData(i) = CType(pubreapi.Tables("PUB_Rule").Rows(i).Item("ValueData"), String).Trim
                Next

                'CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData"), String())

                If OperatorCode.Equals(Operator_In) Then
                    If compareIn(Order_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("A04ChkOrderCode", True)

                        Return True
                    Else
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_In) Then
                    If Not compareIn(Order_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("A04ChkOrderCode", True)

                        Return True
                    Else
                    End If
                End If

            Else
            End If
        End If

        rtnData = False

        CreateTXTLog("A04ChkOrderCode", False)

        Return False

    End Function

    ''' <summary>
    ''' 1.11成大碼的集合檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Order_Record", "Order_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function A05ChkOrderCodeSet() As Boolean
        '-----------------------------------------------------------------------
        '參數說明(Order.Order_CodeSet(醫令集合中的醫令碼))
        '        PUB_Rule.OperatorCode(規則運算子)
        '        PUB_Rule.ValueData(規則設定值)
        '處理邏輯	
        '1.	運算子實作 “併存”, “不併存” 的狀況
        '2.	運算子左右兩端為Order_CodeSet 及 ValueData
        '3.	當符合條件檢核(左邊Order_CodeSet中併存有右邊定義中任一個成大碼)時，rtnData = ‘true’，其他rtnData=’false’。
        'ValueData 中為一個 User-Defined format string: Ex: 123,345,[555-234]
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then
                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim

                Dim Order_CodeSet(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
                For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                    Order_CodeSet(i) = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Order_Code"), String).Trim
                Next

                Dim ValueData(pubreapi.Tables("PUB_Rule").Rows.Count - 1) As String
                For i As Integer = 0 To (pubreapi.Tables("PUB_Rule").Rows.Count - 1)
                    ValueData(i) = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData"), String).Trim
                Next

                If OperatorCode.Equals(Operator_Contain) Then
                    Dim contain As Boolean = compareContain(Order_CodeSet, ValueData)
                    If contain Then
                        rtnData = True

                        CreateTXTLog("A05ChkOrderCodeSet", True)

                        Return True
                    Else
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_Contain) Then
                    Dim contain As Boolean = compareContain(Order_CodeSet, ValueData)
                    If Not contain Then
                        rtnData = True

                        CreateTXTLog("A05ChkOrderCodeSet", True)

                        Return True
                    Else
                    End If
                End If

            Else

            End If
        End If

        rtnData = False

        CreateTXTLog("A05ChkOrderCodeSet", False)

        Return False

    End Function

    ''' <summary>
    ''' 1.12單一健保碼檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Claim", "Nhi_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function A06ChkNhiCode() As Boolean
        '-----------------------------------------------------------------------
        '參數說明(Claim.Nhi_Code(單一醫令的醫令碼))
        '        PUB_Rule.OperatorCode(規則運算子)
        '        PUB_Rule.ValueData(規則設定值)
        '處理邏輯	
        '1.	運算子實作 “(In)”, “(Not In)” 的狀況
        '2.	運算子左右兩端為Nhi_Code 及 ValueData
        '3.	當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Claim", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Claim", "Nhi_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then
                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim Nhi_Code As String = CType(pubreapi.Tables("Claim").Rows(0).Item("Nhi_Code"), String).Trim
                Dim ValueData As String() = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData"), String())

                If OperatorCode.Equals(Operator_In) Then
                    If compareIn(Nhi_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("A06ChkNhiCode", True)

                        Return True
                    Else
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_In) Then
                    If Not compareIn(Nhi_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("A06ChkNhiCode", True)

                        Return True
                    Else
                    End If
                End If

            Else
            End If
        End If

        rtnData = False

        CreateTXTLog("A06ChkNhiCode", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.13健保碼的集合檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Claim", "Nhi_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function A07ChkNhiCodeSet() As Boolean
        '-----------------------------------------------------------------------
        '參數說明(Claim.Nhi_CodeSet(醫令集合中的建保碼))
        '        PUB_Rule.OperatorCode(規則運算子)
        '        PUB_Rule.ValueData(規則設定值)
        '處理邏輯	
        '1.	運算子實作 “併存”, “不併存” 的狀況
        '2.	算子左右兩端為Nhi_CodeSet 及 ValueData
        '3.	當符合條件檢核(左邊Nhi_CodeSet中併存有右邊定義中任一個成大碼)時，rtnData = ‘true’，其他rtnData=’false’。
        'ValueData 中為一個 User-Defined format string: Ex: 123,345,[555-234]
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Claim", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Claim", "Nhi_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then

                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim

                Dim Nhi_CodeSet(pubreapi.Tables("Claim").Rows.Count - 1) As String
                For i As Integer = 0 To (pubreapi.Tables("Claim").Rows.Count - 1)
                    Nhi_CodeSet(i) = CType(pubreapi.Tables("Claim").Rows(0).Item("Nhi_Code"), String).Trim
                Next

                Dim ValueData(pubreapi.Tables("PUB_Rule").Rows.Count - 1) As String
                For i As Integer = 0 To (pubreapi.Tables("PUB_Rule").Rows.Count - 1)
                    ValueData(i) = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData"), String).Trim
                Next

                If OperatorCode.Equals(Operator_Contain) Then
                    Dim contain As Boolean = compareContain(Nhi_CodeSet, ValueData)
                    If contain Then
                        rtnData = True

                        CreateTXTLog("A07ChkNhiCodeSet", True)

                        Return True
                    Else
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_Contain) Then
                    Dim contain As Boolean = compareContain(Nhi_CodeSet, ValueData)
                    If Not contain Then
                        rtnData = True

                        CreateTXTLog("A07ChkNhiCodeSet", True)

                        Return True
                    Else
                    End If
                End If

            Else

            End If
        End If

        rtnData = False

        CreateTXTLog("A07ChkNhiCodeSet", False)

        Return False

    End Function

    ''' <summary>
    ''' 1.14單一Icd9碼檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Diagnosis", "Icd_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function A08ChkIcd9Code() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Diagnosis.Icd_Code (單一Ic d9的醫令碼)
        '        PUB_Rule.OperatorCode(規則運算子)
        '        PUB_Rule.ValueData(規則設定值)
        '處理邏輯	
        '1.	運算子實作 “(In)”, “(Not In)” 的狀況
        '2.	運算子左右兩端為Icd_Code 及 ValueData
        '3.	當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
        '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Diagnosis", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then

                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim Icd_Code As String = CType(pubreapi.Tables("Diagnosis").Rows(0).Item("Icd_Code"), String).Trim
                Dim ValueData As String() = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData"), String())

                If OperatorCode.Equals(Operator_In) Then
                    If compareIn(Icd_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("A08ChkIcd9Code", True)

                        Return True
                    Else
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_In) Then
                    If Not compareIn(Icd_Code, ValueData) Then
                        rtnData = False

                        CreateTXTLog("A08ChkIcd9Code", True)

                        Return True
                    Else
                    End If
                End If

            Else
            End If
        End If

        rtnData = False

        CreateTXTLog("A08ChkIcd9Code", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.15前X的診斷(Icd9碼檢核)
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueX"  
    ''' "Diagnosis", "Icd_Code" 
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function A09ChkSpecificIcd9Code() As Boolean
        '-----------------------------------------------------------------------      
        '參數說明(PUB_Rule.ValueX)
        '        Diagnosis.Icd_CodeSet(Icd9的醫令碼集合)
        '        Diagnosis.Icd_Sort_Value
        '        PUB_Rule.OperatorCode(規則運算子)
        '        PUB_Rule.ValueData(規則值域設定值)
        '處理邏輯	
        '運算子實作 “(In)”, “(Not In)” 的狀況
        '尋找 Icd_CodeSet中第 X  診斷Icd_Code
        '運算子左右兩端為Icd_Code 及 ValueData
        '當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
        '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Diagnosis", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
            AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Sort_Value")

            If checkAllContainColumnIn(CheckTable) Then
                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim

                Dim tmpValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

                Dim ValueX As Integer = 0

                Try
                    ValueX = Integer.Parse(tmpValueX)
                    Dim Icd_CodeSet(pubreapi.Tables("Diagnosis").Rows.Count - 1) As String

                    Dim DiagnosisDRs() As DataRow = pubreapi.Tables("Diagnosis").Select(" order by Icd_Sort_Value asc ")

                    If DiagnosisDRs IsNot Nothing AndAlso DiagnosisDRs.Length > 0 Then

                        For i As Integer = 0 To (DiagnosisDRs.Count - 1)
                            Icd_CodeSet(i) = CType(DiagnosisDRs(i).Item("Icd_Code"), String).Trim
                        Next

                        Dim ValueData(pubreapi.Tables("PUB_Rule").Rows.Count - 1) As String
                        For i As Integer = 0 To (pubreapi.Tables("PUB_Rule").Rows.Count - 1)
                            ValueData(i) = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData"), String).Trim
                        Next

                        If Icd_CodeSet IsNot Nothing AndAlso Icd_CodeSet.Length > ValueX Then

                            If OperatorCode.Equals(Operator_In) Then


                                For i As Integer = 0 To (ValueX - 1)
                                    If compareIn(Icd_CodeSet(i), ValueData) Then
                                        rtnData = True

                                        CreateTXTLog("A09ChkSpecificIcd9Code", True)

                                        Return True
                                    Else

                                    End If
                                Next



                            ElseIf OperatorCode.Equals(Operator_Not_In) Then

                                For i As Integer = 0 To (ValueX - 1)
                                    If compareIn(Icd_CodeSet(i), ValueData) Then
                                        rtnData = False

                                        CreateTXTLog("A09ChkSpecificIcd9Code", True)

                                        Return True
                                    Else

                                    End If
                                Next


                            Else

                            End If

                        End If
                    End If
                Catch ex As Exception

                End Try

            End If
        End If

        rtnData = False

        CreateTXTLog("A09ChkSpecificIcd9Code", False)

        Return False

    End Function

#Region "#########   先不做(暫時關閉)   #########"

    ''' <summary>
    ''' 1.16與前X次療程起日間隔
    ''' XX
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function B01ChkPreviousCureTimeInterval() As Boolean
        '-----------------------------------------------------------------------
        'PUB_Rule.ValueX
        'Fornt-end： (前台診間)
        '        MedicalRecord.ChartNo
        '        Order.OrderCode(醫令碼)
        '        Order.OrderEffectDate(醫令開立時間)
        'Front-end：
        '1.	從 PUB_Order以 Order_Code 找 Cure_Type_Id
        '2.	從OMO_Treatment_Course_Order 中以 {Chart_No}, {Cure_Type_Id} 找(Finish_Date <>  null and 小於等於 {OrderEffectDate}) 之前最近X次(不同的Cure_Card_Sn) 紀錄中的Finish_Date 與 .Order_Effect_Date的間隔計算出結果天數。
        '
        'Back-end： (後台申報日結檔)
        '        MedicalRecord.ChartNo()
        '        Order.OrderCode(醫令碼)
        '        Order.OrderEffectDate(醫令開立時間)
        'Back-end：
        '1.	從 PUB_Order以 Order_Code 找 Cure_Type_Id
        '2.	從OHD_Medical_Record 中以 Chart_No, Cure_Type_Id找之前最近X次(不同的Cure_Card_Sn) 紀錄中的Opd_Visit_End_Date 觸發input記錄中的Opd_Visit_Date的間隔計算出結果天數。
        'rtnData = 計算出的時間間隔。
        'rtnDataUnit =計算出的時間單位代碼(天)。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Date")

            '1.	從 PUB_Order以 Order_Code 找 Cure_Type_Id
            '2.	從OHD_Medical_Record 中以 Chart_No, Cure_Type_Id找之前最近X次(不同的Cure_Card_Sn) 紀錄中的Opd_Visit_End_Date 
            '觸發input記錄中的Opd_Visit_Date的間隔計算出結果天數。


            If checkAllContainColumnIn(CheckTable) Then
                Dim tmpValuX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

                Try

                    Dim ValueX As Integer = Integer.Parse(tmpValuX)
                    Dim Order_Code As String = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Order_Code"), String).Trim
                    Dim Order_Date As Date = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Order_Date"), Date)
                    Dim Chart_No As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No"), String).Trim

                    If ValueX > 0 AndAlso Order_Code IsNot Nothing AndAlso Order_Code.Length > 0 Then

                        'process邏輯

                        clearCommandString()
                        CommandStr.Append("select top ").Append(ValueX).Append(" Opd_Visit_End_Date, Finish_Date ")
                        CommandStr.Append("from OHD_Medical_Record ")
                        CommandStr.Append("where Chart_No = '").Append(Chart_No).Append("' ")
                        CommandStr.Append("and Cure_Type_Id = (")
                        CommandStr.Append("select Cure_Type_Id from PUB_Order where Order_Code = '").Append(Order_Code).Append("' and Effect_Date >= '").Append(Order_Date.ToString("yyyy/M/d")).Append("' ")
                        CommandStr.Append(") ")
                        CommandStr.Append("and Finish_Date is not null order by Finish_Date dsc ")

                        Dim ResultDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                        If DataSetUtil.IsContainsData(ResultDS) Then

                            If ResultDS.Tables(0).Rows.Count = ValueX Then
                                Dim Record As Date = CType(ResultDS.Tables(0).Rows(ValueX - 1).Item("Opd_Visit_End_Date"), Date)
                                Dim Duration As TimeSpan = Order_Date.Subtract(Record)

                                rtnData = Duration.TotalDays
                                rtnDataUnit = "日"
                            Else

                                rtnData = -1
                                rtnDataUnit = "日"

                                Return True
                            End If

                        Else
                            'rtnData = 計算出的時間間隔；rtnDataUnit =計算出的時間單位代碼。
                        End If

                        Return True

                    End If

                Catch ex As Exception

                End Try

            End If

        End If

        Return False

    End Function

    ''' <summary>
    ''' 1.17當次療程時間(後端用)
    ''' XX
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function B02ChkCureTimePeriod() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Order.OrderCode (醫令碼)
        '          MedicalRecord.OrderDate(醫令開立時間)
        '處理邏輯	Back end: (OHD_Medical_Record)
        '1.	計算Opd_Visit_Date 與 Opd_Visit_End_Date 的間隔天數。 

        '當計算出結果時，rtnData = 計算出的時間間隔；rtnDataUnit =(天)計算出的時間單位代碼。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Medical_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Opd_Visit_Date")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Opd_Visit_End_Date")

            If checkAllContainColumnIn(CheckTable) Then
                Dim OpdVisitDate As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Opd_Visit_Date"), Date)
                Dim OpdVisitEndDate As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Opd_Visit_End_Date"), Date)

                Dim Duration As TimeSpan = OpdVisitEndDate.Subtract(OpdVisitDate)

                rtnData = Duration.TotalDays
                rtnDataUnit = "日"

                Return True


            End If

        End If

        Return False

    End Function

    ''' <summary>
    ''' 1.18距目前療程起日前X天中的歷史療程次數檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function B03ChkCureTimes() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	PUB_Rule.ValueX
        '           Order.OrderCode(醫令碼)
        '           MedicalRecord.OrderDate(醫令開立時間)
        '處理邏輯	
        'Front end: 
        '依OMO_Treatment_Course_Order 中 Finish_Date<>null and  Finish_Date>以傳入MedicalRecord.Effect_Date+{X}天的日期中，共找到幾次的療程(相同的療程 Cure_Type_Id) 。
        'back end: 
        '依OHD_Medical_Record 中 Opd_Visit_End_Date >以傳入Opd_Visit_Date前{X}天的日期中，共找到幾次的療程(相同的療程 Cure_Type_Id) 
        '當計算出結果時，rtnData = 計算出的次數。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Date")

            '依OHD_Medical_Record 中 Opd_Visit_End_Date >以傳入Opd_Visit_Date前{X}天的日期中，共找到幾次的療程(相同的療程 Cure_Type_Id) 

            If checkAllContainColumnIn(CheckTable) Then
                Dim tmpValuX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

                Try

                    Dim ValueX As Integer = Integer.Parse(tmpValuX)
                    Dim Order_Code As String = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Order_Code"), String).Trim
                    Dim Order_Date As Date = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Order_Date"), Date)
                    Dim Chart_No As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No"), String).Trim

                    If ValueX > 0 AndAlso Order_Code IsNot Nothing AndAlso Order_Code.Length > 0 Then

                        'process邏輯

                        Order_Date = Order_Date.AddDays(ValueX)

                        clearCommandString()
                        CommandStr.Append("select count(*) ")
                        CommandStr.Append("from OHD_Medical_Record ")
                        CommandStr.Append("where Chart_No = '").Append(Chart_No).Append("' ")
                        CommandStr.Append("and Cure_Type_Id = (")
                        CommandStr.Append("select Cure_Type_Id from PUB_Order where Order_Code = '").Append(Order_Code).Append("' and Effect_Date >= '").Append(Order_Date.ToString("yyyy/M/d")).Append("' ")
                        CommandStr.Append(") ")
                        CommandStr.Append("and Opd_Visit_End_Date is not null and Opd_Visit_End_Date > '").Append(Order_Date.ToString("yyyy/M/d")).Append("' ")

                        Dim ResultDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                        If DataSetUtil.IsContainsData(ResultDS) Then

                            Dim Count As Integer = ResultDS.Tables(0).Rows.Count + 1

                            rtnData = Count
                            rtnDataUnit = "次"

                            Return True

                        Else
                            'rtnData = 計算出的時間間隔；rtnDataUnit =計算出的時間單位代碼。
                        End If

                        Return True

                    End If

                Catch ex As Exception

                End Try

            End If

        End If

        Return False

    End Function

#End Region

    '=====================================

    ''' <summary>
    ''' 1.6將成大碼集合轉換以健保碼為主的集合
    ''' </summary>
    ''' <param name="Ds1">傳入的 dataset</param>
    ''' <param name="sourcedatatable">指定需要轉換的 datatable 名稱</param>
    ''' <param name="ordercodefield">指定成大碼欄位名稱</param>
    ''' <param name="insucodefield">指定健保碼欄位名稱</param>
    ''' <param name="insugroupcodefield">指定健保備註代碼欄位名稱</param>
    ''' <param name="orderdatefield">Ds1 中有此欄位時指定醫令日期欄位名稱；當沒有欄位時指定 [yyyy-mm-dd] 的字串</param>
    ''' <returns>回傳跟Ds1結構一樣的 Recordset Ds2，其中Ds2 (“[sourcedatatable]”) 中存在展開健保碼的資料</returns>
    ''' <remarks></remarks>
    Public Function Ext_OrderCode_To_InsuCode(ByVal Ds1 As DataSet, ByVal sourcedatatable As String, ByVal ordercodefield As String, ByVal insucodefield As String, ByVal insugroupcodefield As String, ByVal orderdatefield As String, ByVal ordernamefield As String, Optional ByVal autofillzero As Boolean = True) As DataSet
        Try
            cleanReturnInfo()
            Dim h1 As New Hashtable
            For i = 0 To Ds1.Tables(sourcedatatable).Rows.Count - 1
                If Not h1.Contains(Ds1.Tables(sourcedatatable).Rows(i).Item("Order_Code").ToString.Trim) Then
                    h1.Add(Ds1.Tables(sourcedatatable).Rows(i).Item("Order_Code").ToString.Trim, CDec(Ds1.Tables(sourcedatatable).Rows(i).Item("Tqty").ToString))
                End If
            Next



            If Ds1.Tables.Contains(sourcedatatable) Then

                '清除 DataTable 中的空白列
                For i As Integer = Ds1.Tables(sourcedatatable).Rows.Count - 1 To 0 Step -1
                    If Ds1.Tables(sourcedatatable).Rows(i).Item(0).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(1).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(2).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(3).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(4).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(5).ToString.Trim = "" Then
                        Ds1.Tables(sourcedatatable).Rows.RemoveAt(i)
                    End If
                Next

                '準備所有的 Order_Code
                Dim Order_Code As String = ""
                For Each row As DataRow In Ds1.Tables(sourcedatatable).Rows
                    If row.Item(ordercodefield).ToString.Trim <> "" Then
                        If Order_Code = "" Then
                            Order_Code = "'" & row.Item(ordercodefield).ToString.Trim & "'"
                        Else
                            Order_Code &= ",'" & row.Item(ordercodefield).ToString.Trim & "'"
                        End If
                    End If
                Next

                If Order_Code = "" Then
                    CreateTXTLog("Ext_OrderCode_To_InsuCode", True)
                    '20101027 add by Rich, 大中要求若回傳原DataSet則在sourcedatatable中加上Insu_Code和Insu_Group_Code欄位
                    '20101027 add by Rich, 大中要求若回傳原DataSet則在sourcedatatable中加上Insu_Code和Insu_Group_Code欄位
                    If Not Ds1.Tables(sourcedatatable).Columns.Contains("Insu_Group_Code") Then
                        Ds1.Tables(sourcedatatable).Columns.Add("Insu_Group_Code")
                    End If
                    If Not Ds1.Tables(sourcedatatable).Columns.Contains("Insu_Code") Then
                        Ds1.Tables(sourcedatatable).Columns.Add("Insu_Code")
                    End If
                    If Not Ds1.Tables(sourcedatatable).Columns.Contains("Care_Cardseq") Then
                        Ds1.Tables(sourcedatatable).Columns.Add("Care_Cardseq")
                    End If
                    Return Ds1
                End If

                'clearCommandString()
                'CommandStr.Append(" Select A.Insu_Code, A.Insu_Group_Code, A.Order_Code, A.Effect_Date as A_Effect_Date, A.End_Date as A_End_Date, case when len(B.Order_En_Name) > 30 then LEFT(ltrim(B.Order_En_Name),30) + '...' else ltrim(B.Order_En_Name) end as Order_Name, B.Effect_Date as B_Effect_Date, B.End_Date as B_End_Date,'     ' as Tqty ")
                'CommandStr.Append(" From PUB_Order_Price as A ")
                'CommandStr.Append("     inner join PUB_Order as B on A.Order_Code = B.Order_Code ")
                'CommandStr.Append(" Where A.Main_Identity_Id ='2' and A.dc <> 'Y' and A.Order_Code in (").Append(Order_Code).Append(") ")
                clearCommandString()
                CommandStr.Append(" Select A.Insu_Code, A.Insu_Group_Code, B.Order_Code, B.Effect_Date as A_Effect_Date, B.End_Date as A_End_Date, case when len(B.Order_En_Name) > 30 then LEFT(ltrim(B.Order_En_Name),30) + '...' else ltrim(B.Order_En_Name) end as Order_Name, B.Effect_Date as B_Effect_Date, B.End_Date as B_End_Date, 1 as Tqty ")
                CommandStr.Append("        ,PPC.Care_Cardseq ")
                CommandStr.Append(" From PUB_Order as B ")
                CommandStr.Append("   left outer join PUB_Order_Price as A  on A.Order_Code = B.Order_Code and  A.Main_Identity_Id ='2' and  A.dc <> 'Y' ")
                CommandStr.Append("   left join PUB_Preventive_Care PPC on A.Insu_Code=PPC.Care_Order_Code")
                CommandStr.Append(" Where  B.Order_Code in (").Append(Order_Code).Append(") ")


                Dim tempDS As DataSet = dynamicQuery(CommandStr.ToString)

                Dim ResultDS1 As DataSet = tempDS.Clone
                ResultDS1.Tables(0).PrimaryKey = Nothing
                If DataSetUtil.IsContainsData(tempDS) Then
                    '過濾符合日期的條件
                    If Ds1.Tables(sourcedatatable).Columns.Contains(orderdatefield) Then
                        For Each outrow As DataRow In Ds1.Tables(sourcedatatable).Rows
                            For Each inrow As DataRow In tempDS.Tables(0).Rows

                                If outrow.Item(ordercodefield).ToString.Trim = inrow.Item("Order_Code").ToString.Trim Then
                                    If outrow.Item(orderdatefield).ToString.Trim <> "" AndAlso inrow.Item("A_Effect_Date").ToString.Trim <> "" AndAlso inrow.Item("A_End_Date").ToString.Trim <> "" AndAlso inrow.Item("B_Effect_Date").ToString.Trim <> "" AndAlso inrow.Item("B_End_Date").ToString.Trim <> "" Then
                                        If CDate(outrow.Item(orderdatefield)) >= CDate(inrow.Item("A_Effect_Date")) AndAlso CDate(outrow.Item(orderdatefield)) <= CDate(inrow.Item("A_End_Date")) AndAlso CDate(outrow.Item(orderdatefield)) >= CDate(inrow.Item("B_Effect_Date")) AndAlso CDate(outrow.Item(orderdatefield)) <= CDate(inrow.Item("B_End_Date")) Then
                                            ResultDS1.Tables(0).ImportRow(inrow)
                                        End If
                                    Else
                                        ResultDS1.Tables(0).ImportRow(inrow)
                                    End If
                                End If

                            Next
                        Next
                    Else
                        Dim Order_Date As Date = Nothing
                        If Not Date.TryParse(orderdatefield, Order_Date) Then
                            Order_Date = Now.ToString("yyyy-MM-dd")
                        End If

                        For Each outrow As DataRow In Ds1.Tables(sourcedatatable).Rows
                            For Each inrow As DataRow In tempDS.Tables(0).Rows

                                If outrow.Item(ordercodefield).ToString.Trim = inrow.Item("Order_Code").ToString.Trim Then
                                    If inrow.Item("A_Effect_Date").ToString.Trim <> "" AndAlso inrow.Item("A_End_Date").ToString.Trim <> "" AndAlso inrow.Item("B_Effect_Date").ToString.Trim <> "" AndAlso inrow.Item("B_End_Date").ToString.Trim <> "" Then
                                        If Order_Date >= CDate(inrow.Item("A_Effect_Date")) AndAlso Order_Date <= CDate(inrow.Item("A_End_Date")) AndAlso Order_Date >= CDate(inrow.Item("B_Effect_Date")) AndAlso Order_Date <= CDate(inrow.Item("B_End_Date")) Then
                                            ResultDS1.Tables(0).ImportRow(inrow)
                                        End If
                                    Else
                                        ResultDS1.Tables(0).ImportRow(inrow)
                                    End If
                                End If

                            Next
                        Next
                    End If
                Else
                    CreateTXTLog("Ext_OrderCode_To_InsuCode", False)
                    '20101027 add by Rich, 大中要求若回傳原DataSet則在sourcedatatable中加上Insu_Code和Insu_Group_Code欄位
                    If Not Ds1.Tables(sourcedatatable).Columns.Contains("Insu_Group_Code") Then
                        Ds1.Tables(sourcedatatable).Columns.Add("Insu_Group_Code")
                    End If
                    If Not Ds1.Tables(sourcedatatable).Columns.Contains("Insu_Code") Then
                        Ds1.Tables(sourcedatatable).Columns.Add("Insu_Code")
                    End If
                    If Not Ds1.Tables(sourcedatatable).Columns.Contains("Care_Cardseq") Then
                        Ds1.Tables(sourcedatatable).Columns.Add("Care_Cardseq")
                    End If
                    Return Ds1
                End If

                ' James 修改 20100812 
                Dim fsa As String() = {"Insu_Code", "Insu_Group_Code", "Order_Code", "A_Effect_Date", "A_End_Date", "Order_Name", "B_Effect_Date", "B_End_Date", "Tqty", "Care_Cardseq"}
                ResultDS1.Tables.Add(ResultDS1.Tables(0).DefaultView.ToTable("newtbl", True, fsa).Copy)
                'mark 修改  20101028
                '增加 將order_record 的tqty-> newtbl 的tqty
                If Not ResultDS1.Tables("newtbl").Columns.Contains("Tqty") Then
                    ResultDS1.Tables("newtbl").Columns.Add("Tqty")
                    For Each tempdsRow As DataRow In ResultDS1.Tables("newtbl").Rows
                        Dim order_code1 As String = tempdsRow.Item("Order_Code").ToString.Trim
                        If h1.Contains(order_code1) Then
                            tempdsRow.Item("Tqty") = h1.Item(order_code1)
                        Else

                            tempdsRow.Item("Tqty") = 0
                        End If

                    Next

                End If

                If ResultDS1.Tables.Count >= 2 Then
                    ResultDS1.Tables.RemoveAt(0)
                End If
                'James 修改 20100812 

                clearCommandString()
                CommandStr.Append(" Select Insu_Code, Order_Code, Tqty, Insu_Name") '20110713 add Insu_Name by Bella
                CommandStr.Append(" From PUB_Insu_Code ")
                CommandStr.Append(" Where dc <> 'Y' and Order_Code in (").Append(Order_Code).Append(") ")

                Dim ResultDS2 As DataSet = dynamicQuery(CommandStr.ToString)
                If Not DataSetUtil.IsContainsData(ResultDS2) Then
                    CreateTXTLog("Ext_OrderCode_To_InsuCode", False)
                End If

                Dim ResultDt As DataTable = Ds1.Tables(sourcedatatable).Clone

                '加判斷欄位insucodefield
                If Not ResultDt.Columns.Contains(insucodefield) Then
                    ResultDt.Columns.Add(insucodefield)
                End If
                '加判斷欄位insugropucodefield
                If Not ResultDt.Columns.Contains(insugroupcodefield) Then
                    ResultDt.Columns.Add(insugroupcodefield)
                End If
                '加判斷欄位ordernamefield
                If Not ResultDt.Columns.Contains(ordernamefield) Then
                    ResultDt.Columns.Add(ordernamefield)
                End If
                '加判斷欄位 Care_Cardseq IC卡上傳檔用 Will Lin
                If Not ResultDt.Columns.Contains("Care_Cardseq") Then
                    ResultDt.Columns.Add("Care_Cardseq")
                End If
                '清除PK
                ResultDt.PrimaryKey = Nothing

                Dim theSame As New ArrayList
                For Each outrow As DataRow In Ds1.Tables(sourcedatatable).Rows
                    For Each in1row As DataRow In ResultDS1.Tables(0).Rows
                        If outrow.Item(ordercodefield).ToString.Trim = in1row.Item("Order_Code").ToString.Trim Then
                            If in1row.Item("Insu_Code").ToString.Trim <> "ZZZZZZ" Then
                                If Not theSame.Contains(in1row.Item("Order_Code").ToString.Trim & outrow.Item("Order_Record_No").ToString.Trim) Then
                                    theSame.Add(in1row.Item("Order_Code").ToString.Trim & outrow.Item("Order_Record_No").ToString.Trim)
                                    ResultDt.ImportRow(outrow)
                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insucodefield) = in1row.Item("Insu_Code").ToString.Trim
                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item("Care_Cardseq") = in1row.Item("Care_Cardseq").ToString.Trim

                                Else
                                    If autofillzero = True Then
                                        ResultDt.ImportRow(outrow)

                                        For Each col As DataColumn In ResultDt.Columns
                                            If ResultDt.Columns(col.ColumnName).DataType Is GetType(System.Decimal) Then
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(col.ColumnName) = 0
                                            End If
                                        Next

                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insucodefield) = in1row.Item("Insu_Code").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item("Care_Cardseq") = in1row.Item("Care_Cardseq").ToString.Trim

                                    Else
                                        ResultDt.ImportRow(outrow)
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insucodefield) = in1row.Item("Insu_Code").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item("Care_Cardseq") = in1row.Item("Care_Cardseq").ToString.Trim

                                    End If
                                End If
                            Else
                                For Each in2row As DataRow In ResultDS2.Tables(0).Rows
                                    If outrow.Item(ordercodefield).ToString.Trim = in2row.Item("Order_Code").ToString.Trim Then
                                        If Not theSame.Contains(in2row.Item("Order_Code").ToString.Trim & outrow.Item("Order_Record_No").ToString.Trim) Then
                                            theSame.Add(in2row.Item("Order_Code").ToString.Trim & outrow.Item("Order_Record_No").ToString.Trim)
                                            ResultDt.ImportRow(outrow)
                                            ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insucodefield) = in2row.Item("Insu_Code").ToString.Trim
                                            ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                            '20110713 modify by bella 帶回的Order_Name改為健保碼的Insu_Name(若為空,則帶回原本的Order_Name)
                                            If in2row.Item("Insu_Name").ToString.Length > 0 Then
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in2row.Item("Insu_Name").ToString.Trim
                                            Else
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                            End If



                                            '20101008 add by Rich, 大中要求修改數量
                                            If Ds1.Tables(sourcedatatable).Columns.Contains("Tqty") Then
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item("Tqty") = CDec(in1row.Item("Tqty").ToString.Trim) * CDec(in2row.Item("Tqty").ToString.Trim)
                                            End If
                                        Else
                                            If autofillzero = True Then
                                                ResultDt.ImportRow(outrow)

                                                For Each col As DataColumn In ResultDt.Columns
                                                    If ResultDt.Columns(col.ColumnName).DataType Is GetType(System.Decimal) Then
                                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(col.ColumnName) = 0
                                                    End If
                                                Next

                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insucodefield) = in2row.Item("Insu_Code").ToString.Trim
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                                '20110713 modify by bella 帶回的Order_Name改為健保碼的Insu_Name(若為空,則帶回原本的Order_Name)
                                                If in2row.Item("Insu_Name").ToString.Length > 0 Then
                                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in2row.Item("Insu_Name").ToString.Trim
                                                Else
                                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                                End If
                                            Else
                                                ResultDt.ImportRow(outrow)
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insucodefield) = in2row.Item("Insu_Code").ToString.Trim
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                                '20110713 modify by bella 帶回的Order_Name改為健保碼的Insu_Name(若為空,則帶回原本的Order_Name)
                                                If in2row.Item("Insu_Name").ToString.Length > 0 Then
                                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in2row.Item("Insu_Name").ToString.Trim
                                                Else
                                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                                End If

                                                '20110526 add by 谷官, 大中要求修改數量
                                                If Ds1.Tables(sourcedatatable).Columns.Contains("Tqty") Then
                                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item("Tqty") = CDec(in1row.Item("Tqty").ToString.Trim) * CDec(in2row.Item("Tqty").ToString.Trim)
                                                End If
                                            End If
                                        End If
                                    End If
                                Next
                            End If
                        End If
                    Next
                Next

                Dim ResultDs As DataSet = Ds1.Copy
                ResultDt.TableName = sourcedatatable
                ResultDs.Tables.Remove(sourcedatatable)
                ResultDs.Tables.Add(ResultDt)
                CreateTXTLog("Ext_OrderCode_To_InsuCode", True)
                Return ResultDs
            Else
                Return Ds1
            End If
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            CreateTXTLog("Ext_OrderCode_To_InsuCode", False)
            Return Ds1
        End Try
    End Function

    ''' <summary>
    ''' 1.X將健保碼集合轉換以成大碼為主的集合
    ''' </summary>
    ''' <param name="Ds1">傳入的 dataset</param>
    ''' <param name="sourcedatatable">指定需要轉換的 datatable 名稱</param>
    ''' <param name="ordercodefield">指定成大碼欄位名稱</param>
    ''' <param name="insucodefield">指定健保碼欄位名稱</param>
    ''' <param name="insugroupcodefield">指定健保備註代碼欄位名稱</param>
    ''' <param name="orderdatefield">Ds1 中有此欄位時指定醫令日期欄位名稱；當沒有欄位時指定 [yyyy-mm-dd] 的字串</param>
    ''' <returns>回傳跟Ds1結構一樣的 Recordset Ds2，其中Ds2 (“[sourcedatatable]”) 中存在展開成大碼的資料</returns>
    ''' <remarks></remarks>
    Public Function Ext_InsuCode_To_OrderCode(ByVal Ds1 As DataSet, ByVal sourcedatatable As String, ByVal ordercodefield As String, ByVal insucodefield As String, ByVal insugroupcodefield As String, ByVal orderdatefield As String, ByVal ordernamefield As String, Optional ByVal autofillzero As Boolean = True) As DataSet
        Try
            cleanReturnInfo()

            If Ds1.Tables.Contains(sourcedatatable) Then

                '清除 DataTable 中的空白列
                For i As Integer = Ds1.Tables(sourcedatatable).Rows.Count - 1 To 0 Step -1
                    If Ds1.Tables(sourcedatatable).Rows(i).Item(0).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(1).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(2).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(3).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(4).ToString.Trim = "" AndAlso Ds1.Tables(sourcedatatable).Rows(i).Item(5).ToString.Trim = "" Then
                        Ds1.Tables(sourcedatatable).Rows.RemoveAt(i)
                    End If
                Next

                '準備所有的 Insu_Code
                Dim Insu_Code As String = ""
                For Each row As DataRow In Ds1.Tables(sourcedatatable).Rows
                    If row.Item(insucodefield).ToString.Trim <> "" Then
                        If Insu_Code = "" Then
                            Insu_Code = "'" & row.Item(insucodefield).ToString.Trim & "'"
                        Else
                            Insu_Code &= ",'" & row.Item(insucodefield).ToString.Trim & "'"
                        End If
                    End If
                Next

                If Insu_Code = "" Then
                    CreateTXTLog("Ext_InsuCode_To_OrderCode", True)
                    Return Ds1
                End If

                clearCommandString()
                CommandStr.Append(" Select A.Insu_Code, A.Insu_Group_Code, A.Order_Code, A.Effect_Date as A_Effect_Date, A.End_Date as A_End_Date, case when len(B.Order_En_Name) > 30 then LEFT(ltrim(B.Order_En_Name),30) + '...' else ltrim(B.Order_En_Name) end as Order_Name, B.Effect_Date as B_Effect_Date, B.End_Date as B_End_Date ")
                CommandStr.Append(" From PUB_Order_Price as A ")
                CommandStr.Append("     inner join PUB_Order as B on A.Order_Code = B.Order_Code ")
                CommandStr.Append(" Where A.Main_Identity_Id ='2' and A.dc <> 'Y' and A.Insu_Code in (").Append(Insu_Code).Append(") ")
                Dim tempDS As DataSet = dynamicQuery(CommandStr.ToString)

                Dim ResultDS1 As DataSet = tempDS.Clone
                If DataSetUtil.IsContainsData(tempDS) Then
                    '過濾符合日期的條件
                    If Ds1.Tables(sourcedatatable).Columns.Contains(orderdatefield) Then
                        For Each outrow As DataRow In Ds1.Tables(sourcedatatable).Rows
                            For Each inrow As DataRow In tempDS.Tables(0).Rows

                                If outrow.Item(insucodefield).ToString.Trim = inrow.Item("Insu_Code").ToString.Trim Then
                                    If outrow.Item(orderdatefield).ToString.Trim <> "" AndAlso inrow.Item("A_Effect_Date").ToString.Trim <> "" AndAlso inrow.Item("A_End_Date").ToString.Trim <> "" AndAlso inrow.Item("B_Effect_Date").ToString.Trim <> "" AndAlso inrow.Item("B_End_Date").ToString.Trim <> "" Then
                                        If CDate(outrow.Item(orderdatefield)) >= CDate(inrow.Item("A_Effect_Date")) AndAlso CDate(outrow.Item(orderdatefield)) <= CDate(inrow.Item("A_End_Date")) AndAlso CDate(outrow.Item(orderdatefield)) >= CDate(inrow.Item("B_Effect_Date")) AndAlso CDate(outrow.Item(orderdatefield)) <= CDate(inrow.Item("B_End_Date")) Then
                                            ResultDS1.Tables(0).ImportRow(inrow)
                                        End If
                                    Else
                                        ResultDS1.Tables(0).ImportRow(inrow)
                                    End If
                                End If

                            Next
                        Next
                    Else
                        Dim Order_Date As Date = Nothing
                        If Not Date.TryParse(orderdatefield, Order_Date) Then
                            Order_Date = Now.ToString("yyyy-MM-dd")
                        End If

                        For Each outrow As DataRow In Ds1.Tables(sourcedatatable).Rows
                            For Each inrow As DataRow In tempDS.Tables(0).Rows

                                If outrow.Item(insucodefield).ToString.Trim = inrow.Item("Insu_Code").ToString.Trim Then
                                    If inrow.Item("A_Effect_Date").ToString.Trim <> "" AndAlso inrow.Item("A_End_Date").ToString.Trim <> "" AndAlso inrow.Item("B_Effect_Date").ToString.Trim <> "" AndAlso inrow.Item("B_End_Date").ToString.Trim <> "" Then
                                        If Order_Date >= CDate(inrow.Item("A_Effect_Date")) AndAlso Order_Date <= CDate(inrow.Item("A_End_Date")) AndAlso Order_Date >= CDate(inrow.Item("B_Effect_Date")) AndAlso Order_Date <= CDate(inrow.Item("B_End_Date")) Then
                                            ResultDS1.Tables(0).ImportRow(inrow)
                                        End If
                                    Else
                                        ResultDS1.Tables(0).ImportRow(inrow)
                                    End If
                                End If

                            Next
                        Next
                    End If
                Else
                    CreateTXTLog("Ext_InsuCode_To_OrderCode", False)
                    Return Ds1
                End If

                clearCommandString()
                CommandStr.Append(" Select Insu_Code, Order_Code ")
                CommandStr.Append(" From PUB_Insu_Code ")
                CommandStr.Append(" Where dc <> 'Y' and Insu_Code in (").Append(Insu_Code).Append(") ")

                Dim ResultDS2 As DataSet = dynamicQuery(CommandStr.ToString)
                If Not DataSetUtil.IsContainsData(ResultDS2) Then
                    CreateTXTLog("Ext_InsuCode_To_OrderCode", False)
                End If

                Dim ResultDt As DataTable = Ds1.Tables(sourcedatatable).Clone

                '加判斷欄位ordercodefield
                If Not ResultDt.Columns.Contains(ordercodefield) Then
                    ResultDt.Columns.Add(ordercodefield)
                End If
                '加判斷欄位insugropucodefield
                If Not ResultDt.Columns.Contains(insugroupcodefield) Then
                    ResultDt.Columns.Add(insugroupcodefield)
                End If
                '加判斷欄位ordernamefield
                If Not ResultDt.Columns.Contains(ordernamefield) Then
                    ResultDt.Columns.Add(ordernamefield)
                End If

                '清除PK
                ResultDt.PrimaryKey = Nothing

                Dim theSame As New ArrayList
                For Each outrow As DataRow In Ds1.Tables(sourcedatatable).Rows
                    For Each in1row As DataRow In ResultDS1.Tables(0).Rows
                        If outrow.Item(insucodefield).ToString.Trim = in1row.Item("Insu_Code").ToString.Trim Then
                            If in1row.Item("Insu_Code").ToString.Trim <> "ZZZZZZ" Then
                                If Not theSame.Contains(in1row.Item("Insu_Code").ToString.Trim) Then
                                    theSame.Add(in1row.Item("Insu_Code").ToString.Trim)
                                    ResultDt.ImportRow(outrow)
                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordercodefield) = in1row.Item("Order_Code").ToString.Trim
                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                    ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                Else
                                    If autofillzero = True Then
                                        ResultDt.ImportRow(outrow)

                                        For Each col As DataColumn In ResultDt.Columns
                                            If IsNumeric(ResultDt.Rows(ResultDt.Rows.Count - 1).Item(col.ColumnName)) Then
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(col.ColumnName) = 0
                                            End If
                                        Next

                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordercodefield) = in1row.Item("Order_Code").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                    Else
                                        ResultDt.ImportRow(outrow)
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordercodefield) = in1row.Item("Order_Code").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                    End If
                                End If
                            Else
                                For Each in2row As DataRow In ResultDS2.Tables(0).Rows
                                    If outrow.Item(insucodefield).ToString.Trim = in2row.Item("Insu_Code").ToString.Trim Then
                                        If Not theSame.Contains(in2row.Item("Insu_Code").ToString.Trim) Then
                                            theSame.Add(in2row.Item("Insu_Code").ToString.Trim)
                                            ResultDt.ImportRow(outrow)
                                            ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordercodefield) = in2row.Item("Order_Code").ToString.Trim
                                            ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                            ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                        Else
                                            If autofillzero = True Then
                                                ResultDt.ImportRow(outrow)

                                                For Each col As DataColumn In ResultDt.Columns
                                                    If IsNumeric(ResultDt.Rows(ResultDt.Rows.Count - 1).Item(col.ColumnName)) Then
                                                        ResultDt.Rows(ResultDt.Rows.Count - 1).Item(col.ColumnName) = 0
                                                    End If
                                                Next

                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordercodefield) = in2row.Item("Order_Code").ToString.Trim
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                            Else
                                                ResultDt.ImportRow(outrow)
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordercodefield) = in2row.Item("Order_Code").ToString.Trim
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(insugroupcodefield) = in1row.Item("Insu_Group_Code").ToString.Trim
                                                ResultDt.Rows(ResultDt.Rows.Count - 1).Item(ordernamefield) = in1row.Item("Order_Name").ToString.Trim
                                            End If
                                        End If
                                    End If
                                Next
                            End If
                        End If
                    Next
                Next

                Dim ResultDs As DataSet = Ds1.Copy
                ResultDt.TableName = sourcedatatable
                ResultDs.Tables.Remove(sourcedatatable)
                ResultDs.Tables.Add(ResultDt)
                CreateTXTLog("Ext_InsuCode_To_OrderCode", True)
                Return ResultDs
            Else
                Return Ds1
            End If
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            CreateTXTLog("Ext_InsuCode_To_OrderCode", False)
            Return Ds1
        End Try
    End Function

    ''' <summary>
    ''' 1.10 當次看診成大碼並存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A05_ChkOrderCodeSetByClinic_OLD() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '===== 取得 Order_Effect_Date =====
                    Dim _ordeEffectDate As Date = Nothing
                    _ordeEffectDate = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData AndAlso (_triggerSno.Length = 0 OrElse r("Order_Sno").ToString.Trim = _triggerSno)).Select(Function(r) CDate(r("Order_Effect_Date"))).Min
                    '==================================

                    '20130909 modified by Ken
                    _dtOrderRecordE = _dtOrderRecordE.Where(Function(r) (r("Order_Effect_Date").ToString.Trim = String.Empty OrElse CDate(r("Order_Effect_Date")) = _ordeEffectDate) AndAlso r("Order_Sno").ToString.Trim <> _triggerSno)

                    'trigger order code 之檢體
                    Dim _specimenId As String = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) r("Specimen_Id").ToString.TrimEnd).FirstOrDefault

                    Dim bodySiteHash As New Hashtable
                    Dim Order_Code As New ArrayList

                    If _triggerItemCode = "A00004" AndAlso _specimenId IsNot Nothing AndAlso _specimenId <> String.Empty Then
                        '若為 A00004 觸發，則拿出正觸發order code相同之specimen id, 或specimen id為空白的orders

                        If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                            '20130909 modified by Ken.
                            Dim _orderCodeWithSpecimen = _dtOrderRecordE.Where(Function(r) (r("Is_Force").ToString.Trim = "N" AndAlso (Not r.Table.Columns.Contains("Is_Preadmission") OrElse r("Is_Preadmission").ToString.Trim = "N")) AndAlso (r("Specimen_Id").ToString.TrimEnd = _specimenId OrElse r("Specimen_Id").ToString.TrimEnd = String.Empty) AndAlso r("Order_Sno") <> _triggerSno).Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct
                            Order_Code.AddRange(_orderCodeWithSpecimen.ToArray)
                            bodySiteHash.Add("01", Order_Code)
                        Else
                            '20120530 add by Rich, 大中要求加入同部位判斷
                            '20130909 modified by Ken.
                            Dim row() As DataRow = _dtOrderRecord.Select("Is_Force = 'N' AND Is_Preadmission = 'N' AND (Specimen_Id = '" & _specimenId & "' OR Specimen_Id = '') AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND Order_Sno <> '" & _triggerSno & "'")
                            For Each singleRow As DataRow In row
                                If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                    CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Order_Code").ToString.Trim)
                                Else
                                    Dim _orderCode As New ArrayList
                                    _orderCode.Add(singleRow.Item("Order_Code").ToString.Trim)
                                    bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                                End If
                            Next
                        End If
                    Else
                        If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                            For Each _dr As DataRow In _dtOrderRecordE
                                If Not Order_Code.Contains(_dr("Order_Code").ToString.Trim) AndAlso (_dr("Is_Force").ToString.Trim = "N" AndAlso (Not _dtOrderRecord.Columns.Contains("Is_Preadmission") OrElse _dr("Is_Preadmission").ToString.Trim = "N")) Then
                                    Order_Code.Add(_dr("Order_Code").ToString.Trim)
                                End If
                            Next
                            bodySiteHash.Add("01", Order_Code)
                        Else
                            '20120530 add by Rich, 大中要求加入同部位判斷
                            '20130909 modified by Ken.
                            Dim row() As DataRow = _dtOrderRecord.Select("Is_Force = 'N' AND Is_Preadmission = 'N' AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND Order_Sno <> '" & _triggerSno & "'")
                            For Each singleRow As DataRow In row
                                If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                    CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Order_Code").ToString.Trim)
                                Else
                                    Dim _orderCode As New ArrayList
                                    _orderCode.Add(singleRow.Item("Order_Code").ToString.Trim)
                                    bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                                End If
                            Next
                        End If
                    End If

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A05_ChkOrderCodeSetByClinic", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    '2013-06-25
                    If bodySiteHash.Keys.Count = 0 Then
                        Dim _orderCodeAL As New ArrayList
                        _orderCodeAL.Add(_triggerValueData)
                        bodySiteHash.Add(String.Empty, _orderCodeAL)
                    End If

                    For Each bodySiteCode As String In bodySiteHash.Keys
                        If bodySiteHash(bodySiteCode).Contains(_triggerValueData) Then
                            Dim result As String = compareExist(OperatorCode, ValueUnit, bodySiteHash(bodySiteCode), ValueData, "A05_ChkOrderCodeSetByClinic")
                            If result <> "" Then
                                If rtnDS Is Nothing Then
                                    rtnDS = New DataSet
                                End If
                                If Not rtnDS.Tables.Contains("rtnTable") Then
                                    rtnDS.Tables.Add("rtnTable")
                                End If
                                If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                    rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                                End If
                                rtnDS.Tables("rtnTable").Rows.Add()
                                rtnDS.Tables("rtnTable").Rows(0).Item("rtnValueData") = result
                            End If

                            If rtnData = False Then
                                Exit For
                            End If
                        End If
                    Next

                    CreateTXTLog("A05_ChkOrderCodeSetByClinic", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A05_ChkOrderCodeSetByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A05_ChkOrderCodeSetByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.10 當次看診成大碼並存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    ''' <author>Ken</author>
    Public Function A05_ChkOrderCodeSetByClinic() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '-------------------------------------------------------------------------
                    Dim _isContainColSpecimenId As Boolean = _dtOrderRecord.Columns.Contains("Specimen_Id")
                    Dim _isContainColBodySiteCode As Boolean = _dtOrderRecord.Columns.Contains("Body_Site_Code")
                    Dim _isContainColIsPreadmission As Boolean = _dtOrderRecord.Columns.Contains("Is_Preadmission")
                    Dim _dicKeyList As New List(Of String)
                    Dim _dicGroup As New Dictionary(Of String, List(Of String))
                    For Each _dr As DataRow In _dtOrderRecord.Rows

                        Dim _orderCode As String = _dr("Order_Code").ToString.Trim

                        If _orderCode <> _triggerValueData Then Continue For

                        Dim _key As String = Me.AssembleKeyForA05A15A07A17(_dr)

                        If Not _dicKeyList.Contains(_key) Then
                            _dicKeyList.Add(_key)
                        End If
                    Next

                    For Each _dicKeyTmp As String In _dicKeyList
                        Dim _dicKey = _dicKeyTmp
                        Dim _orderCodeWithDateSpecimenBodySiteCode = _dtOrderRecordE _
                                                     .Where(Function(r) r("Is_Force").ToString.Trim = "N" AndAlso (If(_isContainColIsPreadmission, r("Is_Preadmission").ToString.Trim, "N") = "N") AndAlso Me.AssembleKeyForA05A15A07A17(r) = _dicKey AndAlso r("Order_Sno") <> _triggerSno) _
                                                     .Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct

                        If _dicGroup.ContainsKey(_dicKey) Then
                            _dicGroup(_dicKey).AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                        Else
                            Dim _list As New List(Of String)
                            _list.AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                            _dicGroup.Add(_dicKey, _list)
                        End If

                    Next
                    '-------------------------------------------------------------------------

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A05_ChkOrderCodeSetByClinic", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    For Each _dicItem In _dicGroup

                        Dim result As String = compareExist(OperatorCode, ValueUnit, New ArrayList(_dicItem.Value), ValueData, "A05_ChkOrderCodeSetByClinic")
                        If result <> "" Then
                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If

                            Dim _rtnRow As DataRow = rtnDS.Tables("rtnTable").NewRow
                            _rtnRow("rtnValueData") = result
                            rtnDS.Tables("rtnTable").Rows.Add(_rtnRow)
                        End If
                    Next

                    If _dicGroup.Count = 0 Then
                        rtnData = True
                    End If

                    CreateTXTLog("A05_ChkOrderCodeSetByClinic", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A05_ChkOrderCodeSetByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A05_ChkOrderCodeSetByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.11 當日看診成大碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A15_ChkOrderCodeSetByDay_OLD() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '===== 取得 Order_Effect_Date =====
                    Dim _ordeEffectDate As Date = Nothing
                    _ordeEffectDate = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData AndAlso (_triggerSno.Length = 0 OrElse r("Order_Sno").ToString.Trim = _triggerSno)).Select(Function(r) CDate(r("Order_Effect_Date"))).Min
                    '==================================

                    '20130909 modified by Ken
                    _dtOrderRecordE = _dtOrderRecordE.Where(Function(r) (r("Order_Effect_Date").ToString.Trim = String.Empty OrElse CDate(r("Order_Effect_Date")) = _ordeEffectDate) AndAlso r("Order_Sno").ToString.Trim <> _triggerSno)

                    'trigger order code 之檢體
                    Dim _specimenId As String = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) r("Specimen_Id").ToString.TrimEnd).FirstOrDefault

                    Dim myckid As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("CheckIdentity").ToString.Trim

                    clearCommandString()
                    CommandStr.Append("SELECT DISTINCT Rtrim(RR.Order_Code)  AS Order_Code, " & vbCrLf)
                    CommandStr.Append("                Rtrim(RR.Specimen_Id) AS Specimen_Id, " & vbCrLf)
                    CommandStr.Append("                RR.Is_Force, " & vbCrLf)
                    CommandStr.Append("                RR.Is_Preadmission, " & vbCrLf)
                    CommandStr.Append("                RR.Body_Site_Code, " & vbCrLf)
                    CommandStr.Append("                RR.Order_Effect_Date " & vbCrLf)
                    CommandStr.Append("FROM   OMO_Order_Record AS RR " & vbCrLf)
                    CommandStr.Append("       INNER JOIN OMO_Medical_Record AS MM " & vbCrLf)
                    CommandStr.Append("         ON RR.Outpatient_Sn = MM.Outpatient_Sn " & vbCrLf)
                    CommandStr.Append(" 		    AND MM.Chart_No = '").Append(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim).Append("' " & vbCrLf)
                    CommandStr.Append(" 		    AND MM.Opd_Visit_Date = '").Append(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date").ToString.Trim).Append("' " & vbCrLf)
                    If myckid <> "0" Then
                        CommandStr.Append(" 	    AND MM.Main_Identity_Id = '").Append(myckid).Append("' " & vbCrLf)
                    End If
                    CommandStr.Append("WHERE  RR.Cancel='N' ")

                    Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    Dim _tempDtE As EnumerableRowCollection(Of DataRow) = tempDS.Tables(0).AsEnumerable

                    Dim bodySiteHash As New Hashtable
                    Dim Order_Code As New ArrayList

                    If _triggerItemCode = "A00004" AndAlso _specimenId IsNot Nothing AndAlso _specimenId <> String.Empty Then
                        '若為 A00004 觸發，則拿出正觸發order code相同之specimen id, 或specimen id為空白的orders

                        If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                            Dim _orderCodeWithSpecimen = _dtOrderRecordE.Where(Function(r) (r("Is_Force").ToString.Trim = "N" AndAlso (Not r.Table.Columns.Contains("Is_Preadmission") OrElse r("Is_Preadmission").ToString.Trim = "N")) AndAlso (r("Specimen_Id").ToString.TrimEnd = _specimenId OrElse r("Specimen_Id").ToString.TrimEnd = String.Empty)).Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct
                            Order_Code.AddRange(_orderCodeWithSpecimen.ToArray)
                            '加入當日搜尋的結果
                            Dim _orderCodeWithSpecimenToday = _tempDtE.Where(Function(r) (r("Is_Force").ToString.Trim = "N" AndAlso (Not r.Table.Columns.Contains("Is_Preadmission") OrElse r("Is_Preadmission").ToString.Trim = "N")) AndAlso (r("Specimen_Id").ToString.TrimEnd = _specimenId)).Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct
                            Order_Code.AddRange(_orderCodeWithSpecimenToday.ToArray)
                            bodySiteHash.Add("01", Order_Code)
                        Else
                            '20120530 add by Rich, 大中要求加入同部位判斷
                            '20130909 modified by Ken.
                            Dim row() As DataRow = _dtOrderRecord.Select("Is_Force = 'N' AND Is_Preadmission = 'N' AND (Specimen_Id = '" & _specimenId & "' OR Specimen_Id = '') AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND Order_Sno <> '" & _triggerSno & "'")
                            For Each singleRow As DataRow In row
                                If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                    CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Order_Code").ToString.Trim)
                                Else
                                    Dim _orderCode As New ArrayList
                                    _orderCode.Add(singleRow.Item("Order_Code").ToString.Trim)
                                    bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                                End If
                            Next

                            '20130909 modified by Ken.
                            '20130911 modified by Ken.
                            Dim _row() As DataRow = tempDS.Tables(0).Select("Is_Force = 'N' AND Is_Preadmission = 'N' AND Specimen_Id = '" & _specimenId & "' AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "'")
                            For Each singleRow As DataRow In _row
                                If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                    CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Order_Code").ToString.Trim)
                                Else
                                    Dim _orderCode As New ArrayList
                                    _orderCode.Add(singleRow.Item("Order_Code").ToString.Trim)
                                    bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                                End If
                            Next
                        End If
                    Else
                        If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                            For Each _dr As DataRow In _dtOrderRecordE
                                If Not Order_Code.Contains(_dr("Order_Code").ToString.Trim) AndAlso (_dr("Is_Force").ToString.Trim = "N" AndAlso (Not _dtOrderRecord.Columns.Contains("Is_Preadmission") OrElse _dr("Is_Preadmission").ToString.Trim = "N")) Then
                                    Order_Code.Add(_dr("Order_Code").ToString.Trim)
                                End If
                            Next

                            '將當日搜尋的結果加入當次中
                            For Each row As DataRow In tempDS.Tables(0).Rows
                                If Not Order_Code.Contains(row.Item("Order_Code").ToString.Trim) AndAlso (row.Item("Is_Force").ToString.Trim = "N" AndAlso (Not row.Table.Columns.Contains("Is_Preadmission") OrElse row.Item("Is_Preadmission").ToString.Trim = "N")) Then
                                    Order_Code.Add(row.Item("Order_Code").ToString.Trim)
                                End If
                            Next

                            bodySiteHash.Add("01", Order_Code)
                        Else
                            '20120530 add by Rich, 大中要求加入同部位判斷
                            '20130909 modified by Ken.
                            Dim row() As DataRow = _dtOrderRecord.Select("Is_Force = 'N' AND Is_Preadmission = 'N' AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND Order_Sno <> '" & _triggerSno & "'")
                            For Each singleRow As DataRow In row
                                If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                    CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Order_Code").ToString.Trim)
                                Else
                                    Dim _orderCode As New ArrayList
                                    _orderCode.Add(singleRow.Item("Order_Code").ToString.Trim)
                                    bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                                End If
                            Next

                            '20130909 modified by Ken.
                            '20130911 modified by Ken.
                            Dim _row() As DataRow = tempDS.Tables(0).Select("Is_Force = 'N' AND Is_Preadmission = 'N' AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "'")
                            For Each singleRow As DataRow In _row
                                If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                    CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Order_Code").ToString.Trim)
                                Else
                                    Dim _orderCode As New ArrayList
                                    _orderCode.Add(singleRow.Item("Order_Code").ToString.Trim)
                                    bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                                End If
                            Next
                        End If
                    End If

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A15_ChkOrderCodeSetByDay", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    '2013-06-25
                    If bodySiteHash.Keys.Count = 0 Then
                        Dim _orderCodeAL As New ArrayList
                        _orderCodeAL.Add(_triggerValueData)
                        bodySiteHash.Add(String.Empty, _orderCodeAL)
                    End If

                    For Each bodySiteCode As String In bodySiteHash.Keys
                        If bodySiteHash(bodySiteCode).Contains(_triggerValueData) Then
                            Dim result As String = compareExist(OperatorCode, ValueUnit, bodySiteHash(bodySiteCode), ValueData, "A15_ChkOrderCodeSetByDay")
                            If result <> "" Then
                                If rtnDS Is Nothing Then
                                    rtnDS = New DataSet
                                End If
                                If Not rtnDS.Tables.Contains("rtnTable") Then
                                    rtnDS.Tables.Add("rtnTable")
                                End If
                                If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                    rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                                End If
                                rtnDS.Tables("rtnTable").Rows.Add()
                                rtnDS.Tables("rtnTable").Rows(0).Item("rtnValueData") = result
                            End If

                            If rtnData = False Then
                                Exit For
                            End If
                        End If
                    Next

                    CreateTXTLog("A15_ChkOrderCodeSetByDay", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A15_ChkOrderCodeSetByDay", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A15_ChkOrderCodeSetByDay", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.11 當日看診成大碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    ''' <author>Ken</author>
    Public Function A15_ChkOrderCodeSetByDay() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    'Dim _orderDate As Date = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).Date

                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable
                    Dim myckid As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("CheckIdentity").ToString.Trim

                    Dim _orderEffectDateE = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.Trim = _triggerValueData AndAlso Not IsDBNull(r("Order_Effect_Date"))).Select(Function(r) CDate(r("Order_Effect_Date"))).Distinct()
                    Dim _orderEffectDateStr = String.Join(",", _orderEffectDateE.Select(Function(r) String.Format("'{0}'", r.ToString("yyyy/MM/dd"))).ToArray)

                    clearCommandString()
                    Dim var1 As New System.Text.StringBuilder
                    CommandStr.AppendFormat("SELECT DISTINCT RTRIM(RR.Order_Code)                   AS Order_Code, " & vbCrLf)
                    CommandStr.AppendFormat("                RTRIM(RR.Specimen_Id)                  AS Specimen_Id, " & vbCrLf)
                    CommandStr.AppendFormat("                ISNULL(RTRIM(RR.Is_Force), 'N')        AS Is_Force, " & vbCrLf)
                    CommandStr.AppendFormat("                ISNULL(RTRIM(RR.Is_Preadmission), 'N') AS Is_Preadmission, " & vbCrLf)
                    CommandStr.AppendFormat("                ISNULL(RTRIM(RR.Body_Site_Code), '')   AS Body_Site_Code, " & vbCrLf)
                    CommandStr.AppendFormat("                RR.Order_Effect_Date                   AS Order_Effect_Date " & vbCrLf)
                    CommandStr.AppendFormat("FROM   OMO_Medical_Record AS MM " & vbCrLf)
                    CommandStr.AppendFormat("       INNER JOIN OMO_Order_Record AS RR " & vbCrLf)
                    CommandStr.AppendFormat("         ON RR.Outpatient_Sn = MM.Outpatient_Sn " & vbCrLf)
                    CommandStr.AppendFormat("            AND ISNULL(RTRIM(RR.Cancel), 'N') != 'Y' " & vbCrLf)
                    CommandStr.AppendFormat("            AND ISNULL(RTRIM(RR.Is_Preadmission), 'N') != 'Y' " & vbCrLf)
                    CommandStr.AppendFormat("WHERE  MM.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    CommandStr.AppendFormat("       AND MM.Opd_Visit_Date IN ( {0} ) " & vbCrLf, _orderEffectDateStr)
                    If myckid <> "0" Then
                        CommandStr.AppendFormat("       AND MM.Main_Identity_Id = '{0}' " & vbCrLf, myckid)
                    End If

                    Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    Dim _tempDt As DataTable = tempDS.Tables(0)
                    Dim _tempDtE As EnumerableRowCollection(Of DataRow) = _tempDt.AsEnumerable

                    '-------------------------------------------------------------------------
                    Dim _isContainColSpecimenId As Boolean = _dtOrderRecord.Columns.Contains("Specimen_Id")
                    Dim _isContainColBodySiteCode As Boolean = _dtOrderRecord.Columns.Contains("Body_Site_Code")
                    Dim _isContainColIsPreadmission As Boolean = _dtOrderRecord.Columns.Contains("Is_Preadmission")
                    Dim _dicKeyList As New List(Of String)
                    Dim _dicGroup As New Dictionary(Of String, List(Of String))
                    For Each _dr As DataRow In _dtOrderRecord.Rows

                        Dim _orderCode As String = _dr("Order_Code").ToString.Trim

                        If _orderCode <> _triggerValueData Then Continue For

                        Dim _key As String = Me.AssembleKeyForA05A15A07A17(_dr)

                        If Not _dicKeyList.Contains(_key) Then
                            _dicKeyList.Add(_key)
                        End If
                    Next

                    For Each _dr As DataRow In _tempDt.Rows

                        Dim _orderCode As String = _dr("Order_Code").ToString.Trim

                        If _orderCode <> _triggerValueData Then Continue For

                        Dim _key As String = Me.AssembleKeyForA05A15A07A17(_dr)

                        If Not _dicKeyList.Contains(_key) Then
                            _dicKeyList.Add(_key)
                        End If
                    Next

                    For Each _dicKeyTmp As String In _dicKeyList
                        Dim _dicKey = _dicKeyTmp
                        Dim _orderCodeWithDateSpecimenBodySiteCode = _dtOrderRecordE _
                                                     .Where(Function(r) r("Is_Force").ToString.Trim = "N" AndAlso (If(_isContainColIsPreadmission, r("Is_Preadmission").ToString.Trim, "N") = "N") AndAlso Me.AssembleKeyForA05A15A07A17(r) = _dicKey AndAlso r("Order_Sno") <> _triggerSno) _
                                                     .Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct

                        Dim _orderCodeWithDateSpecimenBodySiteCodeToday = _tempDtE _
                                                     .Where(Function(r) r("Is_Force").ToString.Trim = "N" AndAlso (If(_isContainColIsPreadmission, r("Is_Preadmission").ToString.Trim, "N") = "N") AndAlso Me.AssembleKeyForA05A15A07A17(r) = _dicKey) _
                                                     .Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct

                        If _dicGroup.ContainsKey(_dicKey) Then
                            _dicGroup(_dicKey).AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                            _dicGroup(_dicKey).AddRange(_orderCodeWithDateSpecimenBodySiteCodeToday)
                        Else
                            Dim _list As New List(Of String)
                            _list.AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                            _list.AddRange(_orderCodeWithDateSpecimenBodySiteCodeToday)
                            _dicGroup.Add(_dicKey, _list)
                        End If

                    Next
                    '-------------------------------------------------------------------------

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A15_ChkOrderCodeSetByDay", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    For Each _dicItem In _dicGroup

                        Dim result As String = compareExist(OperatorCode, ValueUnit, New ArrayList(_dicItem.Value), ValueData, "A15_ChkOrderCodeSetByDay")
                        If result <> "" Then
                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If

                            Dim _rtnRow As DataRow = rtnDS.Tables("rtnTable").NewRow
                            _rtnRow("rtnValueData") = result
                            rtnDS.Tables("rtnTable").Rows.Add(_rtnRow)
                        End If
                    Next

                    If _dicGroup.Count = 0 Then
                        rtnData = True
                    End If

                    CreateTXTLog("A15_ChkOrderCodeSetByDay", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A15_ChkOrderCodeSetByDay", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A15_ChkOrderCodeSetByDay", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.12 當次看診健保碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A07_ChkNhiCodeSetByClinic_OLD() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '===== 取得 Order_Effect_Date =====
                    Dim _ordeEffectDate As Date = Nothing
                    _ordeEffectDate = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.TrimEnd = _triggerValueData AndAlso (_triggerSno.Length = 0 OrElse r("Order_Sno").ToString.Trim = _triggerSno)).Select(Function(r) CDate(r("Order_Effect_Date"))).Min
                    '==================================

                    '_dtOrderRecordE = _dtOrderRecordE.Where(Function(r) r("Order_Effect_Date").ToString.Trim = String.Empty OrElse CDate(r("Order_Effect_Date")) = _ordeEffectDate)

                    Dim bodySiteHash As New Hashtable

                    If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                        Dim Insu_Code As New ArrayList
                        For i As Integer = 0 To (_dtOrderRecord.Rows.Count - 1)
                            '20130909 modified by Ken.
                            If Not Insu_Code.Contains(_dtOrderRecord.Rows(i).Item("Insu_Code").ToString.Trim) AndAlso (Not _dtOrderRecord.Columns.Contains("Is_Preadmission") OrElse _dtOrderRecord.Rows(i).Item("Is_Preadmission").ToString.Trim = "N") AndAlso (_dtOrderRecord.Rows(i).Item("Order_Effect_Date").ToString.TrimEnd = String.Empty OrElse CDate(_dtOrderRecord.Rows(i).Item("Order_Effect_Date")) = _ordeEffectDate AndAlso _dtOrderRecord.Rows(i).Item("Order_Sno") <> _triggerSno) Then
                                Insu_Code.Add(pubreapi.Tables("Order_Record").Rows(i).Item("Insu_Code").ToString.Trim)
                            End If
                        Next
                        bodySiteHash.Add("01", Insu_Code)
                    Else
                        '20120530 add by Rich, 大中要求加入同部位判斷
                        '20130909 modified by Ken.
                        Dim row() As DataRow = _dtOrderRecord.Select("Is_Preadmission = 'N' AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND Order_Sno <> '" & _triggerSno & "'")
                        For Each singleRow As DataRow In row
                            If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Insu_Code").ToString.Trim)
                            Else
                                Dim _insuCode As New ArrayList
                                _insuCode.Add(singleRow.Item("Insu_Code").ToString.Trim)
                                bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _insuCode)
                            End If
                        Next
                    End If

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A07_ChkNhiCodeSetByClinic", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    '2013-06-25
                    If bodySiteHash.Keys.Count = 0 Then
                        Dim _orderCodeAL As New ArrayList
                        _orderCodeAL.Add(_triggerValueData)
                        bodySiteHash.Add(String.Empty, _orderCodeAL)
                    End If

                    For Each bodySiteCode As String In bodySiteHash.Keys
                        If bodySiteHash(bodySiteCode).Contains(_triggerValueData) Then
                            Dim result As String = compareExist(OperatorCode, ValueUnit, bodySiteHash(bodySiteCode), ValueData, "A07_ChkNhiCodeSetByClinic")
                            If result <> "" Then
                                If rtnDS Is Nothing Then
                                    rtnDS = New DataSet
                                End If
                                If Not rtnDS.Tables.Contains("rtnTable") Then
                                    rtnDS.Tables.Add("rtnTable")
                                End If
                                If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                    rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                                End If
                                rtnDS.Tables("rtnTable").Rows.Add()
                                rtnDS.Tables("rtnTable").Rows(0).Item("rtnValueData") = result
                            End If

                            If rtnData = False Then
                                Exit For
                            End If
                        End If
                    Next

                    CreateTXTLog("A07_ChkNhiCodeSetByClinic", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A07_ChkNhiCodeSetByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A07_ChkNhiCodeSetByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.12 當次看診健保碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    ''' <author>Ken</author>
    Public Function A07_ChkNhiCodeSetByClinic() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record").Copy
                    If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                        _dtOrderRecord.Columns.Add("Body_Site_Code", GetType(String))
                    End If
                    If Not _dtOrderRecord.Columns.Contains("Specimen_Id") Then
                        _dtOrderRecord.Columns.Add("Specimen_Id", GetType(String))
                    End If
                    For Each _dr As DataRow In _dtOrderRecord.Rows
                        Dim _orderCode As String = _dr("Order_Code").ToString.Trim
                        Dim _nhiBodySiteCode As String = Me.GetNhiBodySiteCodeByOrderCode(_orderCode)
                        If _nhiBodySiteCode.Length <> 0 Then
                            _dr("Body_Site_Code") = _nhiBodySiteCode
                        End If
                    Next
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '-------------------------------------------------------------------------
                    Dim _isContainColSpecimenId As Boolean = _dtOrderRecord.Columns.Contains("Specimen_Id")
                    Dim _isContainColBodySiteCode As Boolean = _dtOrderRecord.Columns.Contains("Body_Site_Code")
                    Dim _isContainColIsPreadmission As Boolean = _dtOrderRecord.Columns.Contains("Is_Preadmission")
                    Dim _dicKeyList As New List(Of String)
                    Dim _dicGroup As New Dictionary(Of String, List(Of String))
                    For Each _dr As DataRow In _dtOrderRecord.Rows

                        Dim _insuCode As String = _dr("Insu_Code").ToString.Trim

                        If _insuCode <> _triggerValueData Then Continue For

                        Dim _key As String = Me.AssembleKeyForA05A15A07A17(_dr)

                        If Not _dicKeyList.Contains(_key) Then
                            _dicKeyList.Add(_key)
                        End If
                    Next

                    For Each _dicKeyTmp As String In _dicKeyList
                        Dim _dicKey = _dicKeyTmp
                        Dim _orderCodeWithDateSpecimenBodySiteCode = _dtOrderRecordE _
                                                     .Where(Function(r) r("Is_Force").ToString.Trim = "N" AndAlso (If(_isContainColIsPreadmission, r("Is_Preadmission").ToString.Trim, "N") = "N") AndAlso Me.AssembleKeyForA05A15A07A17(r) = _dicKey AndAlso r("Order_Sno") <> _triggerSno) _
                                                     .Select(Function(r) r("Insu_Code").ToString.TrimEnd).Distinct

                        If _dicGroup.ContainsKey(_dicKey) Then
                            _dicGroup(_dicKey).AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                        Else
                            Dim _list As New List(Of String)
                            _list.AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                            _dicGroup.Add(_dicKey, _list)
                        End If

                    Next
                    '-------------------------------------------------------------------------

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A07_ChkNhiCodeSetByClinic", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    For Each _dicItem In _dicGroup

                        Dim result As String = compareExist(OperatorCode, ValueUnit, New ArrayList(_dicItem.Value), ValueData, "A07_ChkNhiCodeSetByClinic")
                        If result <> "" Then
                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If

                            Dim _rtnRow As DataRow = rtnDS.Tables("rtnTable").NewRow
                            _rtnRow("rtnValueData") = result
                            rtnDS.Tables("rtnTable").Rows.Add(_rtnRow)
                        End If
                    Next

                    If _dicGroup.Count = 0 Then
                        rtnData = True
                    End If

                    CreateTXTLog("A07_ChkNhiCodeSetByClinic", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A07_ChkNhiCodeSetByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A07_ChkNhiCodeSetByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.12 當日看診健保碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A17_ChkNhiCodeSetByDay_OLD() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '===== 取得 Order_Effect_Date =====
                    Dim _ordeEffectDate As Date = Nothing
                    _ordeEffectDate = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.TrimEnd = _triggerValueData AndAlso (_triggerSno.Length = 0 OrElse r("Order_Sno").ToString.Trim = _triggerSno)).Select(Function(r) CDate(r("Order_Effect_Date"))).Min
                    '==================================

                    '_dtOrderRecordE = _dtOrderRecordE.Where(Function(r) r("Order_Effect_Date").ToString.Trim = String.Empty OrElse CDate(r("Order_Effect_Date")) = _ordeEffectDate)

                    clearCommandString()
                    CommandStr.Append(" Select DISTINCT RR.Insu_Code, RR.Body_Site_Code, Is_Preadmission ")
                    CommandStr.Append(" From OHD_Order_Record as RR ")
                    CommandStr.Append(" 	inner join OHD_Medical_Record as MM on RR.Medical_Sn = MM.Medical_Sn ")
                    CommandStr.Append(" 		and MM.Chart_No = '").Append(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim).Append("' ")
                    CommandStr.Append(" 		and MM.Opd_Visit_Date = '").Append(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date").ToString.Trim).Append("' ")
                    CommandStr.Append(" 	    and RR.Cancel='N' ")
                    CommandStr.Append(" 	    and RR.Is_Preadmission='N' ")

                    Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                    Dim bodySiteHash As New Hashtable

                    If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                        Dim Insu_Code As New ArrayList
                        For i As Integer = 0 To (_dtOrderRecord.Rows.Count - 1)
                            '20130909 modified by Ken.
                            If Not Insu_Code.Contains(_dtOrderRecord.Rows(i).Item("Insu_Code").ToString.Trim) AndAlso (_dtOrderRecord.Rows(i).Item("Order_Effect_Date").ToString.TrimEnd = String.Empty OrElse CDate(_dtOrderRecord.Rows(i).Item("Order_Effect_Date")) = _ordeEffectDate AndAlso _dtOrderRecord.Rows(i).Item("Order_Sno") <> _triggerSno) Then
                                Insu_Code.Add(_dtOrderRecord.Rows(i).Item("Insu_Code").ToString.Trim)
                            End If
                        Next
                        '將當日搜尋的結果加入當次中
                        For Each row As DataRow In tempDS.Tables(0).Rows
                            If Not Insu_Code.Contains(row.Item("Insu_Code").ToString.Trim) AndAlso (Not row.Table.Columns.Contains("Is_Preadmission") OrElse row.Item("Is_Preadmission").ToString.Trim = "N") Then
                                Insu_Code.Add(row.Item("Insu_Code").ToString.Trim)
                            End If
                        Next
                        bodySiteHash.Add("01", Insu_Code)
                    Else
                        '20120530 add by Rich, 大中要求加入同部位判斷
                        '20130909 modified by Ken.
                        Dim row() As DataRow = _dtOrderRecord.Select("Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND Order_Sno <> '" & _triggerSno & "'")
                        For Each singleRow As DataRow In row
                            If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Insu_Code").ToString.Trim)
                            Else
                                Dim _orderCode As New ArrayList
                                _orderCode.Add(singleRow.Item("Insu_Code").ToString.Trim)
                                bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                            End If
                        Next

                        Dim _row() As DataRow = tempDS.Tables(0).Select("Is_Preadmission = 'N' ")
                        For Each singleRow As DataRow In _row
                            If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Insu_Code").ToString.Trim)
                            Else
                                Dim _orderCode As New ArrayList
                                _orderCode.Add(singleRow.Item("Insu_Code").ToString.Trim)
                                bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                            End If
                        Next
                    End If

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A17_ChkNhiCodeSetByDay", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    '2013-06-25
                    If bodySiteHash.Keys.Count = 0 Then
                        Dim _orderCodeAL As New ArrayList
                        _orderCodeAL.Add(_triggerValueData)
                        bodySiteHash.Add(String.Empty, _orderCodeAL)
                    End If

                    For Each bodySiteCode As String In bodySiteHash.Keys
                        If bodySiteHash(bodySiteCode).Contains(_triggerValueData) Then
                            Dim result As String = compareExist(OperatorCode, ValueUnit, bodySiteHash(bodySiteCode), ValueData, "A17_ChkNhiCodeSetByDay")
                            If result <> "" Then
                                If rtnDS Is Nothing Then
                                    rtnDS = New DataSet
                                End If
                                If Not rtnDS.Tables.Contains("rtnTable") Then
                                    rtnDS.Tables.Add("rtnTable")
                                End If
                                If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                    rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                                End If
                                rtnDS.Tables("rtnTable").Rows.Add()
                                rtnDS.Tables("rtnTable").Rows(0).Item("rtnValueData") = result
                            End If

                            If rtnData = False Then
                                Exit For
                            End If
                        End If
                    Next

                    CreateTXTLog("A17_ChkNhiCodeSetByDay", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A17_ChkNhiCodeSetByDay", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A17_ChkNhiCodeSetByDay", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.12 當日看診健保碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    ''' <author>Ken</author>
    Public Function A17_ChkNhiCodeSetByDay() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    'Dim _orderDate As Date = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).Date

                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record").Copy
                    If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                        _dtOrderRecord.Columns.Add("Body_Site_Code", GetType(String))
                    End If
                    If Not _dtOrderRecord.Columns.Contains("Specimen_Id") Then
                        _dtOrderRecord.Columns.Add("Specimen_Id", GetType(String))
                    End If
                    For Each _dr As DataRow In _dtOrderRecord.Rows
                        Dim _orderCode As String = _dr("Order_Code").ToString.Trim
                        Dim _nhiBodySiteCode As String = Me.GetNhiBodySiteCodeByOrderCode(_orderCode)
                        If _nhiBodySiteCode.Length <> 0 Then
                            _dr("Body_Site_Code") = _nhiBodySiteCode

                            '因A17不判斷Specimen_Id,故把Specimen_Id清空
                            _dr("Specimen_Id") = String.Empty
                        End If
                    Next
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    Dim _orderEffectDateE = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.Trim = _triggerValueData AndAlso Not IsDBNull(r("Order_Effect_Date"))).Select(Function(r) CDate(r("Order_Effect_Date"))).Distinct()
                    Dim _orderEffectDateStr As String = String.Join(",", _orderEffectDateE.Select(Function(r) String.Format("'{0}'", r.ToString("yyyy/MM/dd"))).ToArray)
                    Dim _NhiYmStr As String = String.Join(",", _orderEffectDateE.Select(Function(r) String.Format("'{0}'", r.ToString("yyyyMM"))).Distinct.ToArray)

                    clearCommandString()
                    Dim var1 As New System.Text.StringBuilder
                    CommandStr.AppendFormat("SELECT DISTINCT ISNULL(RTRIM(RR.Insu_Code), '')     AS Insu_Code, " & vbCrLf)
                    CommandStr.AppendFormat("                CASE " & vbCrLf)
                    CommandStr.AppendFormat("                  WHEN ISNULL(RTRIM(OE.Nhi_Body_Site_Code), '') = '' THEN RTRIM(RR.Body_Site_Code) " & vbCrLf)
                    CommandStr.AppendFormat("                  ELSE RTRIM(OE.Nhi_Body_Site_Code) " & vbCrLf)
                    CommandStr.AppendFormat("                END                                 AS Body_Site_Code, " & vbCrLf)
                    CommandStr.AppendFormat("                ISNULL(RTRIM(Is_Preadmission), 'N') AS Is_Preadmission, " & vbCrLf)
                    CommandStr.AppendFormat("                ''                                  AS Specimen_Id, " & vbCrLf)
                    CommandStr.AppendFormat("                RR.Opd_Charge_Date                  AS Order_Effect_Date " & vbCrLf)
                    CommandStr.AppendFormat("FROM   OHD_Medical_Record AS MM " & vbCrLf)
                    CommandStr.AppendFormat("       INNER JOIN OHD_Order_Record AS RR " & vbCrLf)
                    CommandStr.AppendFormat("         ON MM.Nhi_Ym = RR.Nhi_Ym  " & vbCrLf)
                    CommandStr.AppendFormat("            AND RR.Medical_Sn = MM.Medical_Sn " & vbCrLf)
                    CommandStr.AppendFormat("            AND ISNULL(RTRIM(RR.Cancel), 'N') != 'Y' " & vbCrLf)
                    CommandStr.AppendFormat("            AND ISNULL(RTRIM(RR.Is_Preadmission), 'N') != 'Y' " & vbCrLf)
                    CommandStr.AppendFormat("       LEFT OUTER JOIN PUB_Order_Examination OE " & vbCrLf)
                    CommandStr.AppendFormat("         ON RR.Order_Code = OE.Order_Code " & vbCrLf)
                    CommandStr.AppendFormat("WHERE  MM.Nhi_Ym IN ( {0} )  " & vbCrLf, _NhiYmStr)
                    CommandStr.AppendFormat("       AND MM.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    CommandStr.AppendFormat("       AND MM.Opd_Visit_Date IN ( {0} ) " & vbCrLf, _orderEffectDateStr)

                    Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    Dim _tempDt As DataTable = tempDS.Tables(0)
                    Dim _tempDtE As EnumerableRowCollection(Of DataRow) = _tempDt.AsEnumerable

                    '-------------------------------------------------------------------------
                    Dim _isContainColSpecimenId As Boolean = _dtOrderRecord.Columns.Contains("Specimen_Id")
                    Dim _isContainColBodySiteCode As Boolean = _dtOrderRecord.Columns.Contains("Body_Site_Code")
                    Dim _isContainColIsPreadmission As Boolean = _dtOrderRecord.Columns.Contains("Is_Preadmission")
                    Dim _dicKeyList As New List(Of String)
                    Dim _dicGroup As New Dictionary(Of String, List(Of String))
                    For Each _dr As DataRow In _dtOrderRecord.Rows

                        Dim _insuCode As String = _dr("Insu_Code").ToString.Trim

                        If _insuCode <> _triggerValueData Then Continue For

                        Dim _key As String = Me.AssembleKeyForA05A15A07A17(_dr)

                        If Not _dicKeyList.Contains(_key) Then
                            _dicKeyList.Add(_key)
                        End If
                    Next

                    For Each _dr As DataRow In _tempDt.Rows

                        Dim _insuCode As String = _dr("Insu_Code").ToString.Trim

                        If _insuCode <> _triggerValueData Then Continue For

                        Dim _key As String = Me.AssembleKeyForA05A15A07A17(_dr)

                        If Not _dicKeyList.Contains(_key) Then
                            _dicKeyList.Add(_key)
                        End If
                    Next

                    For Each _dicKeyTmp As String In _dicKeyList
                        Dim _dicKey = _dicKeyTmp
                        Dim _orderCodeWithDateSpecimenBodySiteCode = _dtOrderRecordE _
                                                     .Where(Function(r) (If(_isContainColIsPreadmission, r("Is_Preadmission").ToString.Trim, "N") = "N") AndAlso Me.AssembleKeyForA05A15A07A17(r) = _dicKey AndAlso r("Order_Sno") <> _triggerSno) _
                                                     .Select(Function(r) r("Insu_Code").ToString.TrimEnd).Distinct

                        Dim _orderCodeWithDateSpecimenBodySiteCodeToday = _tempDtE _
                                                     .Where(Function(r) Me.AssembleKeyForA05A15A07A17(r) = _dicKey) _
                                                     .Select(Function(r) r("Insu_Code").ToString.TrimEnd).Distinct

                        If _dicGroup.ContainsKey(_dicKey) Then
                            _dicGroup(_dicKey).AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                            _dicGroup(_dicKey).AddRange(_orderCodeWithDateSpecimenBodySiteCodeToday)
                        Else
                            Dim _list As New List(Of String)
                            _list.AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                            _list.AddRange(_orderCodeWithDateSpecimenBodySiteCodeToday)
                            _dicGroup.Add(_dicKey, _list)
                        End If

                    Next
                    '-------------------------------------------------------------------------

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A17_ChkNhiCodeSetByDay", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    For Each _dicItem In _dicGroup

                        Dim result As String = compareExist(OperatorCode, ValueUnit, New ArrayList(_dicItem.Value), ValueData, "A17_ChkNhiCodeSetByDay")
                        If result <> "" Then
                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If

                            Dim _rtnRow As DataRow = rtnDS.Tables("rtnTable").NewRow
                            _rtnRow("rtnValueData") = result
                            rtnDS.Tables("rtnTable").Rows.Add(_rtnRow)
                        End If
                    Next

                    If _dicGroup.Count = 0 Then
                        rtnData = True
                    End If

                    CreateTXTLog("A17_ChkNhiCodeSetByDay", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A17_ChkNhiCodeSetByDay", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A17_ChkNhiCodeSetByDay", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.14 單一Icd9碼檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A08_ChkIcd9Code() As Boolean
        Try
            '-----------------------------------------------------------------------      
            '參數說明
            '        Diagnosis.Icd_CodeSet(Icd9的醫令碼集合)
            '        Diagnosis.Icd_Sort_Value
            '        PUB_Rule.OperatorCode(規則運算子)
            '        PUB_Rule.ValueData(規則值域設定值)
            '處理邏輯	
            '運算子實作 “(In)”, “(Not In)” 的狀況
            '尋找 Icd_CodeSet
            '運算子左右兩端為Icd_Code 及 ValueData
            '當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
            '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
            '-----------------------------------------------------------------------

            cleanReturnInfo()

            Dim DataTableName() As String = {"Diagnosis", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Sort_Value")

                If checkAllContainColumnIn(CheckTable) Then
                    Try
                        Dim Icd_CodeSet(pubreapi.Tables("Diagnosis").Rows.Count - 1) As String
                        Dim DiagnosisDRs() As DataRow = pubreapi.Tables("Diagnosis").Select("", "Icd_Sort_Value asc ")
                        If DiagnosisDRs IsNot Nothing AndAlso DiagnosisDRs.Length > 0 Then

                            For i As Integer = 0 To (DiagnosisDRs.Count - 1)

                                'Change By Sean 加入判斷，不是空字串才執行
                                If Not StringUtil.nvl(DiagnosisDRs(i).Item("Icd_Code")) = "" Then

                                    Icd_CodeSet(i) = CType(DiagnosisDRs(i).Item("Icd_Code"), String).Trim

                                End If

                            Next

                            Dim ValueData() As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim.Split(",")
                            Dim temp As New ArrayList
                            If Icd_CodeSet IsNot Nothing AndAlso Icd_CodeSet.Length > 0 Then
                                For i As Integer = 0 To Icd_CodeSet.Length - 1
                                    temp.Add(Icd_CodeSet(i))
                                Next

                                compareICD9Exist("10", "R011", temp, ValueData, "A08_ChkIcd9Code")
                                CreateTXTLog("A08_ChkIcd9Code", True)

                                'James Mark 2011/5/23
                                'Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                                'If OperatorCode.Trim.Equals("06") Or OperatorCode.Trim.Equals("!=") Then
                                '    If rtnData = True Then
                                '        rtnData = False
                                '    Else
                                '        rtnData = True
                                '    End If

                                'End If



                                Return True
                            End If
                        End If
                    Catch ex As Exception
                        Throw ex
                    End Try
                End If
            End If

            rtnData = False
            CreateTXTLog("A08_ChkIcd9Code", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A08_ChkIcd9Code", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.14 單一Icd10碼檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A18_ChkIcd10Code() As Boolean
        Try
            '-----------------------------------------------------------------------      
            '參數說明
            '        Diagnosis.Icd_CodeSet(Icd10的醫令碼集合)
            '        Diagnosis.Icd_Sort_Value
            '        PUB_Rule.OperatorCode(規則運算子)
            '        PUB_Rule.ValueData(規則值域設定值)
            '處理邏輯	
            '運算子實作 “(In)”, “(Not In)” 的狀況
            '尋找 Icd_CodeSet
            '運算子左右兩端為Icd_Code 及 ValueData
            '當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
            '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
            '-----------------------------------------------------------------------

            cleanReturnInfo()

            Dim DataTableName() As String = {"Diagnosis10", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "Diagnosis10", "Icd_Code")
                AddTableAndColumnInto(CheckTable, "Diagnosis10", "Icd_Sort_Value")

                If checkAllContainColumnIn(CheckTable) Then
                    Try
                        Dim Icd_CodeSet(pubreapi.Tables("Diagnosis10").Rows.Count - 1) As String
                        Dim DiagnosisDRs() As DataRow = pubreapi.Tables("Diagnosis10").Select("", "Icd_Sort_Value asc ")
                        If DiagnosisDRs IsNot Nothing AndAlso DiagnosisDRs.Length > 0 Then

                            For i As Integer = 0 To (DiagnosisDRs.Count - 1)

                                'Change By Sean 加入判斷，不是空字串才執行
                                If Not StringUtil.nvl(DiagnosisDRs(i).Item("Icd_Code")) = "" Then

                                    Icd_CodeSet(i) = CType(DiagnosisDRs(i).Item("Icd_Code"), String).Trim

                                End If

                            Next

                            Dim ValueData() As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim.Split(",")
                            Dim temp As New ArrayList
                            If Icd_CodeSet IsNot Nothing AndAlso Icd_CodeSet.Length > 0 Then
                                For i As Integer = 0 To Icd_CodeSet.Length - 1
                                    temp.Add(Icd_CodeSet(i))
                                Next

                                compareICD9Exist("10", "R011", temp, ValueData, "A18_ChkIcd10Code")
                                CreateTXTLog("A18_ChkIcd10Code", True)

                                'James Mark 2011/5/23
                                'Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                                'If OperatorCode.Trim.Equals("06") Or OperatorCode.Trim.Equals("!=") Then
                                '    If rtnData = True Then
                                '        rtnData = False
                                '    Else
                                '        rtnData = True
                                '    End If

                                'End If



                                Return True
                            End If
                        End If
                    Catch ex As Exception
                        Throw ex
                    End Try
                End If
            End If

            rtnData = False
            CreateTXTLog("A18_ChkIcd10Code", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A18_ChkIcd10Code", False)
            Return False
        End Try
    End Function


    ''' <summary>
    ''' 1.15 前X的診斷(Icd9碼檢核)
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A09_ChkSpecificIcd9Code() As Boolean
        Try
            '-----------------------------------------------------------------------      
            '參數說明(PUB_Rule.ValueX)
            '        Diagnosis.Icd_CodeSet(Icd9的醫令碼集合)
            '        Diagnosis.Icd_Sort_Value
            '        PUB_Rule.OperatorCode(規則運算子)
            '        PUB_Rule.ValueData(規則值域設定值)
            '處理邏輯	
            '運算子實作 “(In)”, “(Not In)” 的狀況
            '尋找 Icd_CodeSet中第 X  診斷Icd_Code
            '運算子左右兩端為Icd_Code 及 ValueData
            '當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
            '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
            '-----------------------------------------------------------------------

            cleanReturnInfo()

            Dim DataTableName() As String = {"Diagnosis", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Sort_Value")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim tmpValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim
                    Dim ValueX As Integer = 0

                    Try
                        'ValueX = Integer.Parse(tmpValueX)
                        If Not Integer.TryParse(tmpValueX, ValueX) Then
                            ValueX = 3
                        End If

                        Dim Icd_CodeSet(pubreapi.Tables("Diagnosis").Rows.Count - 1) As String
                        Dim DiagnosisDRs() As DataRow = pubreapi.Tables("Diagnosis").Select("", "Icd_Sort_Value asc ")
                        If DiagnosisDRs IsNot Nothing AndAlso DiagnosisDRs.Length > 0 Then

                            For i As Integer = 0 To (DiagnosisDRs.Count - 1)

                                'Change By Sean 加入判斷，不是空字串才執行
                                If Not StringUtil.nvl(DiagnosisDRs(i).Item("Icd_Code")) = "" Then

                                    Icd_CodeSet(i) = CType(DiagnosisDRs(i).Item("Icd_Code"), String).Trim

                                End If

                            Next

                            Dim ValueData() As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim.Split(",")
                            Dim temp As New ArrayList
                            If Icd_CodeSet IsNot Nothing AndAlso Icd_CodeSet.Length > 0 Then
                                For i As Integer = 0 To (Math.Min(ValueX, Icd_CodeSet.Length) - 1)
                                    temp.Add(Icd_CodeSet(i))
                                Next

                                compareICD9Exist("10", "R011", temp, ValueData, "A09_ChkSpecificIcd9Code")
                                CreateTXTLog("A09_ChkSpecificIcd9Code", True)
                                Return True
                            End If
                        End If
                    Catch ex As Exception
                        Throw ex
                    End Try
                End If
            End If

            rtnData = False
            CreateTXTLog("A09_ChkSpecificIcd9Code", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A09_ChkSpecificIcd9Code", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.15 前X的診斷(Icd9碼檢核)
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A19_ChkSpecificIcd10Code() As Boolean
        Try
            '-----------------------------------------------------------------------      
            '參數說明(PUB_Rule.ValueX)
            '        Diagnosis.Icd_CodeSet(Icd10的醫令碼集合)
            '        Diagnosis.Icd_Sort_Value
            '        PUB_Rule.OperatorCode(規則運算子)
            '        PUB_Rule.ValueData(規則值域設定值)
            '處理邏輯	
            '運算子實作 “(In)”, “(Not In)” 的狀況
            '尋找 Icd_CodeSet中第 X  診斷Icd_Code
            '運算子左右兩端為Icd_Code 及 ValueData
            '當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
            '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
            '-----------------------------------------------------------------------

            cleanReturnInfo()

            Dim DataTableName() As String = {"Diagnosis10", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "Diagnosis10", "Icd_Code")
                AddTableAndColumnInto(CheckTable, "Diagnosis10", "Icd_Sort_Value")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim tmpValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim
                    Dim ValueX As Integer = 0

                    Try
                        'ValueX = Integer.Parse(tmpValueX)
                        If Not Integer.TryParse(tmpValueX, ValueX) Then
                            ValueX = 3
                        End If

                        Dim Icd_CodeSet(pubreapi.Tables("Diagnosis10").Rows.Count - 1) As String
                        Dim DiagnosisDRs() As DataRow = pubreapi.Tables("Diagnosis10").Select("", "Icd_Sort_Value asc ")
                        If DiagnosisDRs IsNot Nothing AndAlso DiagnosisDRs.Length > 0 Then

                            For i As Integer = 0 To (DiagnosisDRs.Count - 1)

                                'Change By Sean 加入判斷，不是空字串才執行
                                If Not StringUtil.nvl(DiagnosisDRs(i).Item("Icd_Code")) = "" Then

                                    Icd_CodeSet(i) = CType(DiagnosisDRs(i).Item("Icd_Code"), String).Trim

                                End If

                            Next

                            Dim ValueData() As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim.Split(",")
                            Dim temp As New ArrayList
                            If Icd_CodeSet IsNot Nothing AndAlso Icd_CodeSet.Length > 0 Then
                                For i As Integer = 0 To (Math.Min(ValueX, Icd_CodeSet.Length) - 1)
                                    temp.Add(Icd_CodeSet(i))
                                Next

                                compareICD9Exist("10", "R011", temp, ValueData, "A19_ChkSpecificIcd10Code")
                                CreateTXTLog("A19_ChkSpecificIcd10Code", True)
                                Return True
                            End If
                        End If
                    Catch ex As Exception
                        Throw ex
                    End Try
                End If
            End If

            rtnData = False
            CreateTXTLog("A19_ChkSpecificIcd10Code", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A19_ChkSpecificIcd10Code", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.16 與前X次療程迄日間隔
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function B01_ChkPreviousCureTimeInterval() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim ValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim

                    clearCommandString()

                    If TriggerItemCode = "A00004" Then
                        CommandStr.Append(" Select TOP 1 Cure_Type_Id ")
                        CommandStr.Append(" From PUB_Order ")
                        CommandStr.Append(" Where Order_Code = '").Append(TriggerValueData).Append("' ")
                        CommandStr.Append("     and ('").Append(Order_Effect_Date).Append("' between Effect_Date and End_Date) ")
                    ElseIf TriggerItemCode = "A00006" Then
                        CommandStr.Append(" Select  TOP 1 dd.Cure_Type_Id ")
                        CommandStr.Append(" From PUB_Order_Price pp ")
                        CommandStr.Append("     inner join PUB_Order dd on (pp.Order_Code = dd.Order_Code and ('").Append(Order_Effect_Date).Append("' between dd.Effect_Date and dd.End_Date) and dd.Cure_Type_Id <> '') ")
                        CommandStr.Append(" Where pp.Insu_Code = '").Append(Insu_Code).Append("' and pp.Main_Identity_Id = '2' ")
                    Else
                        rtnData = False
                        CreateTXTLog("B01_ChkPreviousCureTimeInterval", True)
                        Return True
                    End If

                    Dim tempDS As DataSet = dynamicQuery(CommandStr.ToString)

                    If DataSetUtil.IsContainsData(tempDS) Then
                        '若有找到前次療程時(1或多筆資料)，依照療程結束時間降冪排序(最近結束的會排在前面)，前X筆為取結果的最後一筆記錄

                        If Cure_Type_Id = "" Then
                            Cure_Type_Id = tempDS.Tables(0).Rows(0).Item("Cure_Type_Id").ToString.Trim
                        End If

                        clearCommandString()

                        If Location = "C" OrElse Location = "P" Then
                            CommandStr.Append(" Select TOP 1 * ")
                            CommandStr.Append(" From ( ")
                            CommandStr.Append(" 	Select TOP ").Append(ValueX).Append(" datediff(dd, hh.Finish_Date, '").Append(Order_Effect_Date).Append("') as LastXCourseTimeInterval ")
                            CommandStr.Append(" 		,Finish_Date, Outpatient_Sn, Cure_Type_Id ")
                            CommandStr.Append(" 	From ")
                            CommandStr.Append(" 		(Select distinct tc.Finish_Date, tc.Outpatient_Sn, po.Cure_Type_Id ")
                            CommandStr.Append(" 		 From OMO_Order_Record rr ")
                            CommandStr.Append(" 			inner join OMO_Medical_Record mm ")
                            CommandStr.Append(" 				on (mm.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 					rr.Outpatient_Sn = mm.Outpatient_Sn) ")
                            CommandStr.Append(" 			inner join PUB_Order po ")
                            CommandStr.Append(" 				on (rr.Order_Code = po.Order_Code and ")
                            CommandStr.Append(" 					(rr.Order_Effect_Date between po.Effect_Date and po.End_Date) and ")
                            CommandStr.Append(" 					po.Cure_Type_Id = '").Append(Cure_Type_Id).Append("') ")
                            CommandStr.Append(" 			inner join OMO_Treatment_Course_Order tc ")
                            CommandStr.Append(" 				on (rr.Outpatient_Sn = tc.Outpatient_Sn and ")
                            CommandStr.Append(" 					rr.Prescription_Sn = tc.Cure_Card_Sn and ")
                            CommandStr.Append(" 					(tc.Finish_Date is not null and ")
                            CommandStr.Append(" 					tc.Finish_Date<='").Append(Order_Effect_Date).Append("')) ")
                            CommandStr.Append(" 		) hh ")
                            CommandStr.Append(" 	Order by hh.Finish_Date desc ")
                            CommandStr.Append(" ) Result ")
                            CommandStr.Append(" Order By Finish_date ")
                        Else
                            CommandStr.Append(" Select TOP 1 * ")
                            CommandStr.Append(" From ( ")
                            CommandStr.Append(" 	Select top 2 datediff(dd, hh.Opd_Visit_End_Date, '").Append(Order_Effect_Date).Append("') as LastXCourseTimeInterval ")
                            CommandStr.Append(" 		,Opd_Visit_End_Date, Medical_Sn, Cure_Type_Id ")
                            CommandStr.Append(" 	From ")
                            CommandStr.Append(" 		(Select distinct mm.Opd_Visit_End_Date, mm.Medical_Sn, po.Cure_Type_Id ")
                            CommandStr.Append(" 		 From OHD_Order_Record rr ")
                            CommandStr.Append(" 			inner join OHD_Medical_Record mm ")
                            CommandStr.Append(" 				on (mm.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 					mm.Opd_Visit_End_Date<='").Append(Order_Effect_Date).Append("' and ")
                            CommandStr.Append(" 					rr.Medical_Sn = mm.Medical_Sn and ")
                            CommandStr.Append(" 					rr.Is_Cure = 'Y') ")
                            CommandStr.Append(" 			inner join PUB_Order po ")
                            CommandStr.Append(" 				on (rr.Order_Code = po.Order_Code and ")
                            CommandStr.Append(" 					(rr.Opd_Charge_Date between po.Effect_Date and po.End_Date)and ")
                            CommandStr.Append(" 					po.Cure_Type_Id = '").Append(Cure_Type_Id).Append("') ")
                            CommandStr.Append(" 	) hh ")
                            CommandStr.Append(" 	Order by hh.Opd_Visit_End_Date desc ")
                            CommandStr.Append(" ) Result ")
                            CommandStr.Append(" Order By Opd_Visit_End_Date ")
                        End If

                        Dim resultDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                        If DataSetUtil.IsContainsData(resultDS) Then
                            Dim LastXCourseTimeInterval As String = resultDS.Tables(0).Rows(0).Item("LastXCourseTimeInterval").ToString.Trim

                            Select Case OperatorCode
                                Case "01"
                                    If CInt(LastXCourseTimeInterval) > CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "04"
                                    If CInt(LastXCourseTimeInterval) >= CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "03"
                                    If CInt(LastXCourseTimeInterval) < CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "05"
                                    If CInt(LastXCourseTimeInterval) <= CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "02"
                                    If CInt(LastXCourseTimeInterval) = CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "06"
                                    If CInt(LastXCourseTimeInterval) <> CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case Else
                                    rtnData = False
                                    CreateTXTLog("B01_ChkPreviousCureTimeInterval", True)
                                    Return True
                            End Select

                            rtnDataValue = CInt(LastXCourseTimeInterval)
                            rtnDataUnitValue = "R001"
                            CreateTXTLog("B01_ChkPreviousCureTimeInterval", True)
                            Return True
                        Else
                            rtnData = True
                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueUnitCode") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueUnitCode")
                            End If
                            rtnDS.Tables("rtnTable").Rows.Add()
                            rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueData") = -99
                            rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueUnitCode") = ""
                            CreateTXTLog("B01_ChkPreviousCureTimeInterval", True)
                            Return True
                        End If
                    Else
                        '當沒有記錄時，表示沒有一年內沒有執行完成過相同的療程(因為線上療程紀錄最少會保留12個月)，直接rtnData = True。(因為沒有找到前次療程)
                        rtnData = True
                        If rtnDS Is Nothing Then
                            rtnDS = New DataSet
                        End If
                        If Not rtnDS.Tables.Contains("rtnTable") Then
                            rtnDS.Tables.Add("rtnTable")
                        End If
                        If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                            rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                        End If
                        If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueUnitCode") Then
                            rtnDS.Tables("rtnTable").Columns.Add("rtnValueUnitCode")
                        End If
                        rtnDS.Tables("rtnTable").Rows.Add()
                        rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueData") = -77
                        rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueUnitCode") = ""
                        CreateTXTLog("B01_ChkPreviousCureTimeInterval", True)
                        Return True
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("B01_ChkPreviousCureTimeInterval", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("B01_ChkPreviousCureTimeInterval", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.17 當次療程時間(後端用)
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function B02_ChkCureTimePeriod() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Visit_End_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode ")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                'AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Order_Date As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date").ToString.Trim
                    Dim Visit_End_Date As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Visit_End_Date").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim TimeInterval As Integer = CDate(Order_Date).Subtract(CDate(Visit_End_Date)).TotalDays

                    If Location = "S" Then

                        Select Case OperatorCode
                            Case "01"
                                If TimeInterval > CInt(ValueData) Then
                                    rtnData = True
                                Else
                                    rtnData = False
                                End If
                            Case "04"
                                If TimeInterval >= CInt(ValueData) Then
                                    rtnData = True
                                Else
                                    rtnData = False
                                End If
                            Case "03"
                                If TimeInterval < CInt(ValueData) Then
                                    rtnData = True
                                Else
                                    rtnData = False
                                End If
                            Case "05"
                                If TimeInterval <= CInt(ValueData) Then
                                    rtnData = True
                                Else
                                    rtnData = False
                                End If
                            Case "02"
                                If TimeInterval = CInt(ValueData) Then
                                    rtnData = True
                                Else
                                    rtnData = False
                                End If
                            Case "06"
                                If TimeInterval <> CInt(ValueData) Then
                                    rtnData = True
                                Else
                                    rtnData = False
                                End If
                            Case Else
                                rtnData = False
                                CreateTXTLog("B02_ChkCureTimePeriod", True)
                                Return True
                        End Select

                        If rtnDS Is Nothing Then
                            rtnDS = New DataSet
                        End If
                        If Not rtnDS.Tables.Contains("rtnTable") Then
                            rtnDS.Tables.Add("rtnTable")
                        End If
                        If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                            rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                        End If
                        If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueUnitCode") Then
                            rtnDS.Tables("rtnTable").Columns.Add("rtnValueUnitCode")
                        End If
                        rtnDS.Tables("rtnTable").Rows.Add()
                        rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueData") = TimeInterval
                        rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueUnitCode") = "R001"

                        rtnDataUnit = ""
                        CreateTXTLog("B02_ChkCureTimePeriod", True)
                        Return True
                    Else
                        rtnData = True
                        If rtnDS Is Nothing Then
                            rtnDS = New DataSet
                        End If
                        If Not rtnDS.Tables.Contains("rtnTable") Then
                            rtnDS.Tables.Add("rtnTable")
                        End If
                        If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                            rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                        End If
                        If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueUnitCode") Then
                            rtnDS.Tables("rtnTable").Columns.Add("rtnValueUnitCode")
                        End If
                        rtnDS.Tables("rtnTable").Rows.Add()
                        rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueData") = -88
                        rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueUnitCode") = ""
                        CreateTXTLog("B02_ChkCureTimePeriod", True)
                        Return True
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("B02_ChkCureTimePeriod", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("B02_ChkCureTimePeriod", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.18 距目前療程起日前X天中的歷史療程次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function B03_ChkCureTimes() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode ")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                'AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim ValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim

                    clearCommandString()

                    If TriggerItemCode = "A00004" Then
                        CommandStr.Append(" Select TOP 1 Cure_Type_Id ")
                        CommandStr.Append(" From PUB_Order ")
                        CommandStr.Append(" Where Order_Code = '").Append(TriggerValueData).Append("' ")
                        CommandStr.Append("     and ('").Append(Order_Effect_Date).Append("' between Effect_Date and End_Date) ")
                    ElseIf TriggerItemCode = "A00006" Then
                        CommandStr.Append(" Select  TOP 1 dd.Cure_Type_Id ")
                        CommandStr.Append(" From PUB_Order_Price pp ")
                        CommandStr.Append("     inner join PUB_Order dd on (pp.Order_Code = dd.Order_Code and ('").Append(Order_Effect_Date).Append("' between dd.Effect_Date and dd.End_Date) and dd.Cure_Type_Id <> '') ")
                        CommandStr.Append(" Where pp.Insu_Code = '").Append(Insu_Code).Append("' and pp.Main_Identity_Id = '2' ")
                    Else
                        rtnData = False
                        CreateTXTLog("B03_ChkCureTimes", True)
                        Return True
                    End If

                    Dim tempDS As DataSet = dynamicQuery(CommandStr.ToString)

                    If DataSetUtil.IsContainsData(tempDS) Then

                        If Cure_Type_Id = "" Then
                            Cure_Type_Id = tempDS.Tables(0).Rows(0).Item("Cure_Type_Id").ToString.Trim
                        End If

                        clearCommandString()

                        If Location = "C" OrElse Location = "P" Then
                            CommandStr.Append(" SELECT COUNT(DISTINCT Outpatient_Sn) AS CourseTimes ")
                            CommandStr.Append(" FROM   OMO_Treatment_Course_Order ")
                            CommandStr.Append(" WHERE  Chart_No = '").Append(Chart_No).Append("' ")
                            CommandStr.Append("        AND Cure_Type_Id = '").Append(Cure_Type_Id).Append("' ")
                        Else
                            CommandStr.Append(" SELECT COUNT(DISTINCT mr.Medical_Sn) AS CourseTimes ")
                            CommandStr.Append(" FROM   OHD_Order_Record dr ")
                            CommandStr.Append("        INNER JOIN OHD_Medical_Record mr ")
                            CommandStr.Append("            ON (dr.Nhi_Ym = mr.Nhi_Ym ")
                            CommandStr.Append("                AND dr.Nhi_Type_Id = mr.Nhi_Type_Id ")
                            CommandStr.Append(" 			   AND dr.Medical_Sn = mr.Medical_Sn ")
                            CommandStr.Append(" 			   AND mr.Chart_No = '").Append(Chart_No).Append("' ")
                            CommandStr.Append(" 			   AND dr.Is_Cure ='Y') ")
                            CommandStr.Append("        INNER JOIN PUB_Order po ")
                            CommandStr.Append("            ON (dr.Order_Code = po.Order_Code ")
                            CommandStr.Append("   		       AND (dr.Opd_Charge_Date between po.Effect_Date and po.End_Date) ")
                            CommandStr.Append(" 			   AND po.Cure_Type_Id = '").Append(Cure_Type_Id).Append("') ")
                        End If

                        Dim resultDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                        If DataSetUtil.IsContainsData(resultDS) Then
                            Dim CourseTimes As Integer = CInt(resultDS.Tables(0).Rows(0).Item("CourseTimes"))

                            Select Case OperatorCode
                                Case "01"
                                    If CourseTimes > CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "04"
                                    If CourseTimes >= CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "03"
                                    If CourseTimes < CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "05"
                                    If CourseTimes <= CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "02"
                                    If CourseTimes = CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "06"
                                    If CourseTimes <> CInt(ValueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case Else
                                    rtnData = False
                                    CreateTXTLog("B03_ChkCureTimes", True)
                                    Return True
                            End Select

                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueUnitCode") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueUnitCode")
                            End If
                            rtnDS.Tables("rtnTable").Rows.Add()
                            rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueData") = CourseTimes
                            rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueUnitCode") = ""

                            rtnDataUnit = ""
                            CreateTXTLog("B03_ChkCureTimes", True)
                            Return True
                        Else
                            rtnData = True
                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueUnitCode") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueUnitCode")
                            End If
                            rtnDS.Tables("rtnTable").Rows.Add()
                            rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueData") = -99
                            rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueUnitCode") = ""
                            CreateTXTLog("B03_ChkCureTimes", True)
                            Return True
                        End If
                    Else
                        rtnData = True
                        If rtnDS Is Nothing Then
                            rtnDS = New DataSet
                        End If
                        If Not rtnDS.Tables.Contains("rtnTable") Then
                            rtnDS.Tables.Add("rtnTable")
                        End If
                        If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                            rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                        End If
                        If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueUnitCode") Then
                            rtnDS.Tables("rtnTable").Columns.Add("rtnValueUnitCode")
                        End If
                        rtnDS.Tables("rtnTable").Rows.Add()
                        rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueData") = -77
                        rtnDS.Tables("rtnTable").Rows(rtnDS.Tables("rtnTable").Rows.Count - 1).Item("rtnValueUnitCode") = ""
                        CreateTXTLog("B03_ChkCureTimes", True)
                        Return True
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("B03_ChkCureTimes", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("B03_ChkCureTimes", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.19 每X日執行次數檢核
    ''' 2010/07/20 時間區隔更改dateadd(dd,0-@PUB_Rule#ValueX#-> dateadd(dd,1-@PUB_Rule#ValueX#, 
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C01_ChkTimesByDay() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage_Unit")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Frequency_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As Decimal = CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"))
                    ValueX = IIf(ValueX = 0, 1, ValueX)
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim Outpatient_sn As String = ""
                    Dim _sourceType As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Source_Type").ToString.Trim.ToUpper

                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    ElseIf TriggerItemCode = "A00031" Then
                        OrderInsuCode = "Pharmacy_12_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = If(IsDBNull(OrderRecordRow.Item("Order_Effect_Date")), String.Empty, CDate(OrderRecordRow.Item("Order_Effect_Date")).ToString("yyyy/MM/dd"))
                    Dim Order_Code As String = OrderRecordRow.Item("Order_Code").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim

                    Dim Dosage As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage") Then
                        Dosage = OrderRecordRow.Item("Dosage").ToString.Trim
                    End If
                    Dim Dosage_Unit As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage_Unit") Then
                        Dosage_Unit = OrderRecordRow.Item("Dosage_Unit").ToString.TrimEnd
                    End If
                    Dim Frequency_Code As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Frequency_Code") Then
                        Frequency_Code = OrderRecordRow.Item("Frequency_Code").ToString.Trim
                    End If
                    Dim Cure_Type_Id As String = ""
                    If pubreapi.Tables("Order_Record").Columns.Contains("Cure_Type_Id") Then
                        Cure_Type_Id = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    End If

                    Dim Days As Decimal = CDec(OrderRecordRow.Item("Days"))
                    Dim Tqty As Decimal = CDec(OrderRecordRow.Item("Tqty"))
                    Dim Tqty_Unit As String = OrderRecordRow.Item("Tqty_Unit").ToString.Trim
                    Dim Tqty_Now As Decimal = 0.0
                    Dim Tqty_Before As Decimal = 0.0

                    If ValueUnit.Length = 0 Then
                        ValueUnit = Tqty_Unit
                    End If

                    Dim _records As EnumerableRowCollection(Of DataRow) = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.Trim = Order_Code AndAlso r("Is_Force").ToString.Trim.ToUpper <> "Y" AndAlso (Order_Effect_Date.Length = 0 OrElse (Not IsDBNull(r("Order_Effect_Date")) AndAlso (DateAdd(DateInterval.Day, 1 - ValueX, CDate(Order_Effect_Date).Date) <= CDate(r("Order_Effect_Date")).Date AndAlso CDate(r("Order_Effect_Date")).Date <= CDate(Order_Effect_Date).Date))))

                    '20100628 add by Rich, 呼叫OmoServiceManager中計算總量 method 重新計算 ValueX 天的量

                    Dim _totalTqty As Decimal = 0

                    For Each _record In _records
                        Dim _orderCode As String = _record("Order_Code").ToString.Trim
                        Dim _dosage As String = String.Empty
                        If _record.Table.Columns.Contains("Dosage") Then
                            _dosage = _record("Dosage").ToString
                        End If
                        Dim _dosageUnit As String = String.Empty
                        If _record.Table.Columns.Contains("Dosage_Unit") Then
                            _dosageUnit = _record("Dosage_Unit").ToString.Trim
                        End If
                        Dim _frequencyCode As String = String.Empty
                        If _record.Table.Columns.Contains("Frequency_Code") Then
                            _frequencyCode = _record("Frequency_Code").ToString.Trim
                        End If
                        Dim _days As Decimal = _record("Days")
                        Dim _tqty As Decimal = _record("Tqty")
                        Dim _tqtyUnit As String = _record("Tqty_Unit").ToString.Trim

                        If _days > ValueX AndAlso (Not _frequencyCode.Equals("AS ORDER")) AndAlso (Not _frequencyCode.Equals("PRN")) Then

                            If _dosage <> String.Empty AndAlso _dosageUnit <> String.Empty AndAlso _frequencyCode <> String.Empty Then
                                Dim caculateResult As DataSet = CalculateTqty(_orderCode, _dosage, _dosageUnit, _frequencyCode, ValueX)

                                Dim Correct As Boolean = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                Dim ErrorMessage As String = ""
                                If DataSetUtil.IsContainsData(caculateResult) Then
                                    Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                    ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                    If Correct = True Then

                                        _totalTqty += CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))

                                    Else
                                        _totalTqty += Math.Ceiling(_tqty / _days * ValueX)
                                    End If
                                Else
                                    _totalTqty += Math.Ceiling(_tqty / _days * ValueX)
                                End If
                            Else

                                _totalTqty += Math.Ceiling(_tqty / _days * ValueX)
                            End If

                        Else
                            '若開立天數大於檢核天數，則算出平均每天用量---20120202 高秀玲
                            If _days > ValueX Then
                                _totalTqty += Math.Ceiling(_tqty / _days * ValueX)
                            Else
                                _totalTqty += _tqty
                            End If

                        End If

                    Next

                    Tqty_Now = Tqty_UnitTransform(Order_Code, Tqty_Unit, _totalTqty, ValueUnit)

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(Dosage, 0) AS [Dosage], ISNULL(RTRIM(Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(Frequency_Code), '') AS [Frequency_Code]")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Dim _days As Int32 = row("Days")
                                    Dim _dosage As Decimal = row("Dosage")
                                    Dim _dosageUnit As String = row("Dosage_Unit").ToString.TrimEnd
                                    Dim _frequencyCode As String = row("Frequency_Code").ToString.TrimEnd

                                    If _days > ValueX AndAlso (Not _frequencyCode.Equals("AS ORDER")) AndAlso (Not _frequencyCode.Equals("PRN")) Then
                                        '==============================================
                                        Dim _tqtyTmp As Decimal = 0
                                        Dim _tqtyUnitTmp As String = String.Empty
                                        'Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, _days)'2015/11/23 Eddie,Lu
                                        Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, ValueX)
                                        Dim Correct As Boolean = True
                                        Dim ErrorMessage As String = ""
                                        If DataSetUtil.IsContainsData(caculateResult) Then
                                            Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                            ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                            If Correct = True Then
                                                _tqtyTmp = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                                _tqtyUnitTmp = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                            Else
                                                log.dbErrorMsg(ErrorMessage, New Exception(ErrorMessage))
                                            End If
                                        End If
                                        Tqty_Before += Tqty_UnitTransform(Order_Code, _tqtyUnitTmp, _tqtyTmp, ValueUnit)
                                        '==============================================
                                    Else
                                        '若開立天數大於檢核天數，則算出平均每天用量---20120202 高秀玲
                                        Dim decTqty As Decimal = CDec(row.Item("Tqty"))

                                        If _days > ValueX Then
                                            decTqty = Math.Ceiling(CDec(row.Item("Tqty") / _days * ValueX))
                                        End If

                                        Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, decTqty, ValueUnit)

                                    End If

                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C01_ChkTimesByDay", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            'CommandStr.Append(" Select isnull(Tqty,0) as Tqty_Before, imp.Tqty_Unit ")
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(Dosage, 0) AS [Dosage], ISNULL(RTRIM(Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(Frequency_Code), '') AS [Frequency_Code]")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("                         and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, Math.Ceiling(CDec(row.Item("Tqty") / row.Item("Days") * ValueX)), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C01_ChkTimesByDay", True)
                            Return True
                        ElseIf TriggerItemCode = "A00031" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(imp.Dosage, 0) AS [Dosage], ISNULL(RTRIM(imp.Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(imp.Frequency_Code), '') AS [Frequency_Code]")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" inner join OPH_Pharmacy_Base as OPB on OPB.order_code=imp.Order_Code and  OPB.DC='N' ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			OPB.pharmacy_12_code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Dim _days As Int32 = row("Days")
                                    Dim _dosage As Decimal = row("Dosage")
                                    Dim _dosageUnit As String = row("Dosage_Unit").ToString.TrimEnd
                                    Dim _frequencyCode As String = row("Frequency_Code").ToString.TrimEnd

                                    If _days > ValueX AndAlso (Not _frequencyCode.Equals("AS ORDER")) AndAlso (Not _frequencyCode.Equals("PRN")) Then
                                        '==============================================
                                        Dim _tqtyTmp As Decimal = 0
                                        Dim _tqtyUnitTmp As String = String.Empty
                                        Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, _days)
                                        Dim Correct As Boolean = True
                                        Dim ErrorMessage As String = ""
                                        If DataSetUtil.IsContainsData(caculateResult) Then
                                            Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                            ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                            If Correct = True Then
                                                _tqtyTmp = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                                _tqtyUnitTmp = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                            Else
                                                log.dbErrorMsg(ErrorMessage, New Exception(ErrorMessage))
                                            End If
                                        End If
                                        Tqty_Before += Tqty_UnitTransform(Order_Code, _tqtyUnitTmp, _tqtyTmp, ValueUnit)
                                        '==============================================
                                    Else
                                        Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, Math.Ceiling(CDec(row.Item("Tqty") / _days * ValueX)), ValueUnit)
                                    End If

                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C01_ChkTimesByDay", True)
                            Return True



                        Else
                            rtnData = False
                            CreateTXTLog("C01_ChkTimesByDay", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, ord.Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append(" 		) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            '20130909 modified by Ken.
                            If _sourceType = "I" Then
                                rtnData = Tqty_Now + Tqty_Before
                            Else
                                rtnData = Tqty_Before
                            End If

                            rtnDataUnit = ""
                            CreateTXTLog("C01_ChkTimesByDay", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append(" 		) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            '20130909 modified by Ken.
                            If _sourceType = "I" Then
                                rtnData = Tqty_Now + Tqty_Before
                            Else
                                rtnData = Tqty_Before
                            End If

                            rtnDataUnit = ""
                            CreateTXTLog("C01_ChkTimesByDay", True)
                            Return True
                        ElseIf TriggerItemCode = "A00031" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, ord.Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OPH_Pharmacy_Base as OPB on OPB.order_code=Ord.Order_code and OPB.DC='N' ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             OPB.Pharmacy_12_code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append(" 		) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            '20130909 modified by Ken.
                            If _sourceType = "I" Then
                                rtnData = Tqty_Now + Tqty_Before
                            Else
                                rtnData = Tqty_Before
                            End If

                            rtnDataUnit = ""
                            CreateTXTLog("C01_ChkTimesByDay", True)
                            Return True
                        Else
                            rtnData = False
                            CreateTXTLog("C01_ChkTimesByDay", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C01_ChkTimesByDay", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C01_ChkTimesByDay", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.19 每1日執行劑量檢核
    ''' 2015/11/27 複製自C01, ValueX永遠等於1 
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function H73_ChkDailyDosageByOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage_Unit")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Frequency_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                'AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As Decimal = 1  'CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"))
                    'ValueX = IIf(ValueX = 0, 1, ValueX)

                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim Outpatient_sn As String = ""
                    Dim _sourceType As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Source_Type").ToString.Trim.ToUpper

                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    ElseIf TriggerItemCode = "A00031" Then
                        OrderInsuCode = "Pharmacy_12_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = If(IsDBNull(OrderRecordRow.Item("Order_Effect_Date")), String.Empty, CDate(OrderRecordRow.Item("Order_Effect_Date")).ToString("yyyy/MM/dd"))
                    Dim Order_Code As String = OrderRecordRow.Item("Order_Code").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim

                    Dim Dosage As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage") Then
                        Dosage = OrderRecordRow.Item("Dosage").ToString.Trim
                    End If
                    Dim Dosage_Unit As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage_Unit") Then
                        Dosage_Unit = OrderRecordRow.Item("Dosage_Unit").ToString.TrimEnd
                    End If
                    Dim Frequency_Code As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Frequency_Code") Then
                        Frequency_Code = OrderRecordRow.Item("Frequency_Code").ToString.Trim
                    End If
                    Dim Cure_Type_Id As String = ""
                    If pubreapi.Tables("Order_Record").Columns.Contains("Cure_Type_Id") Then
                        Cure_Type_Id = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    End If

                    Dim Days As Decimal = CDec(OrderRecordRow.Item("Days"))
                    Dim Tqty As Decimal = CDec(OrderRecordRow.Item("Tqty"))
                    Dim Tqty_Unit As String = OrderRecordRow.Item("Tqty_Unit").ToString.Trim
                    Dim Tqty_Now As Decimal = 0.0
                    Dim Tqty_Before As Decimal = 0.0

                    If ValueUnit.Length = 0 Then
                        ValueUnit = Tqty_Unit
                    End If

                    Dim _records As EnumerableRowCollection(Of DataRow) = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.Trim = Order_Code AndAlso r("Is_Force").ToString.Trim.ToUpper <> "Y" AndAlso (Order_Effect_Date.Length = 0 OrElse (Not IsDBNull(r("Order_Effect_Date")) AndAlso (DateAdd(DateInterval.Day, 1 - ValueX, CDate(Order_Effect_Date).Date) <= CDate(r("Order_Effect_Date")).Date AndAlso CDate(r("Order_Effect_Date")).Date <= CDate(Order_Effect_Date).Date))))

                    '20100628 add by Rich, 呼叫OmoServiceManager中計算總量 method 重新計算 ValueX 天的量

                    Dim _totalTqty As Decimal = 0

                    For Each _record In _records
                        Dim _orderCode As String = _record("Order_Code").ToString.Trim
                        Dim _dosage As String = String.Empty
                        If _record.Table.Columns.Contains("Dosage") Then
                            _dosage = _record("Dosage").ToString
                        End If
                        Dim _dosageUnit As String = String.Empty
                        If _record.Table.Columns.Contains("Dosage_Unit") Then
                            _dosageUnit = _record("Dosage_Unit").ToString.Trim
                        End If
                        Dim _frequencyCode As String = String.Empty
                        If _record.Table.Columns.Contains("Frequency_Code") Then
                            _frequencyCode = _record("Frequency_Code").ToString.Trim
                        End If
                        Dim _days As Decimal = _record("Days")
                        Dim _tqty As Decimal = _record("Tqty")
                        Dim _tqtyUnit As String = _record("Tqty_Unit").ToString.Trim

                        'If _days > ValueX AndAlso (Not _frequencyCode.Equals("AS ORDER")) AndAlso (Not _frequencyCode.Equals("PRN")) Then

                        If _dosage <> String.Empty AndAlso _dosageUnit <> String.Empty AndAlso _frequencyCode <> String.Empty Then
                            Dim caculateResult As DataSet = CalculateTqty(_orderCode, _dosage, _dosageUnit, _frequencyCode, ValueX)

                            Dim Correct As Boolean = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                            Dim ErrorMessage As String = ""

                            If DataSetUtil.IsContainsData(caculateResult) Then
                                Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                If Correct = True Then

                                    _totalTqty += CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))

                                Else
                                    _totalTqty += Math.Ceiling(_tqty / _days * ValueX)
                                End If
                            Else
                                _totalTqty += Math.Ceiling(_tqty / _days * ValueX)
                            End If
                        Else

                            _totalTqty += 0 'Math.Ceiling(_tqty / _days * ValueX)
                        End If

                        'Else
                        '若開立天數大於檢核天數，則算出平均每天用量---20120202 高秀玲
                        'If _days > ValueX Then
                        '    _totalTqty += Math.Ceiling(_tqty / _days * ValueX)
                        'Else
                        '    _totalTqty += _tqty
                        'End If

                        'End If

                    Next

                    Tqty_Now = Tqty_UnitTransform(Order_Code, Tqty_Unit, _totalTqty, ValueUnit)

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(Dosage, 0) AS [Dosage], ISNULL(RTRIM(Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(Frequency_Code), '') AS [Frequency_Code]")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Dim _days As Int32 = row("Days")
                                    Dim _dosage As Decimal = row("Dosage")
                                    Dim _dosageUnit As String = row("Dosage_Unit").ToString.TrimEnd
                                    Dim _frequencyCode As String = row("Frequency_Code").ToString.TrimEnd

                                    'If _days > ValueX AndAlso (Not _frequencyCode.Equals("AS ORDER")) AndAlso (Not _frequencyCode.Equals("PRN")) Then
                                    '==============================================
                                    Dim _tqtyTmp As Decimal = 0
                                    Dim _tqtyUnitTmp As String = String.Empty
                                    'Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, _days)'2015/11/23 Eddie,Lu
                                    Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, ValueX)
                                    Dim Correct As Boolean = True
                                    Dim ErrorMessage As String = ""

                                    If DataSetUtil.IsContainsData(caculateResult) Then
                                        Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                        ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                        If Correct = True Then
                                            _tqtyTmp = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                            _tqtyUnitTmp = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                        Else
                                            log.dbErrorMsg(ErrorMessage, New Exception(ErrorMessage))
                                        End If
                                    End If

                                    Tqty_Before += Tqty_UnitTransform(Order_Code, _tqtyUnitTmp, _tqtyTmp, ValueUnit)
                                    '==============================================
                                    'Else
                                    ''若開立天數大於檢核天數，則算出平均每天用量---20120202 高秀玲
                                    'Dim decTqty As Decimal = CDec(row.Item("Tqty"))

                                    'If _days > ValueX Then
                                    '    decTqty = Math.Ceiling(CDec(row.Item("Tqty") / _days * ValueX))
                                    'End If

                                    'Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, decTqty, ValueUnit)

                                    'End If

                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("H73_ChkDailyDosageByOPH", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            'CommandStr.Append(" Select isnull(Tqty,0) as Tqty_Before, imp.Tqty_Unit ")
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(Dosage, 0) AS [Dosage], ISNULL(RTRIM(Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(Frequency_Code), '') AS [Frequency_Code]")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("                         and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, Math.Ceiling(CDec(row.Item("Tqty") / row.Item("Days") * ValueX)), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("H73_ChkDialyDosageByOPH", True)
                            Return True
                        ElseIf TriggerItemCode = "A00031" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(imp.Dosage, 0) AS [Dosage], ISNULL(RTRIM(imp.Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(imp.Frequency_Code), '') AS [Frequency_Code]")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" inner join OPH_Pharmacy_Base as OPB on OPB.order_code=imp.Order_Code and  OPB.DC='N' ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			OPB.pharmacy_12_code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Dim _days As Int32 = row("Days")
                                    Dim _dosage As Decimal = row("Dosage")
                                    Dim _dosageUnit As String = row("Dosage_Unit").ToString.TrimEnd
                                    Dim _frequencyCode As String = row("Frequency_Code").ToString.TrimEnd

                                    'If _days > ValueX AndAlso (Not _frequencyCode.Equals("AS ORDER")) AndAlso (Not _frequencyCode.Equals("PRN")) Then
                                    '==============================================
                                    Dim _tqtyTmp As Decimal = 0
                                    Dim _tqtyUnitTmp As String = String.Empty
                                    Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, _days)
                                    Dim Correct As Boolean = True
                                    Dim ErrorMessage As String = ""
                                    If DataSetUtil.IsContainsData(caculateResult) Then
                                        Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                        ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                        If Correct = True Then
                                            _tqtyTmp = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                            _tqtyUnitTmp = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                        Else
                                            log.dbErrorMsg(ErrorMessage, New Exception(ErrorMessage))
                                        End If
                                    End If
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, _tqtyUnitTmp, _tqtyTmp, ValueUnit)
                                    '==============================================
                                    'Else
                                    'Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, Math.Ceiling(CDec(row.Item("Tqty") / _days * ValueX)), ValueUnit)
                                    'End If

                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("H73_ChkDailyDosageByOPH", True)
                            Return True



                        Else
                            rtnData = False
                            CreateTXTLog("H73_ChkDailyDosageByOPH", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, ord.Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append(" 		) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            '20130909 modified by Ken.
                            If _sourceType = "I" Then
                                rtnData = Tqty_Now + Tqty_Before
                            Else
                                rtnData = Tqty_Before
                            End If

                            rtnDataUnit = ""
                            CreateTXTLog("H73_ChkDailyDosageByOPH", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append(" 		) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            '20130909 modified by Ken.
                            If _sourceType = "I" Then
                                rtnData = Tqty_Now + Tqty_Before
                            Else
                                rtnData = Tqty_Before
                            End If

                            rtnDataUnit = ""
                            CreateTXTLog("H73_ChkDailyDosageByOPH", True)
                            Return True
                        ElseIf TriggerItemCode = "A00031" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, ord.Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OPH_Pharmacy_Base as OPB on OPB.order_code=Ord.Order_code and OPB.DC='N' ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             OPB.Pharmacy_12_code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append(" 		) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            '20130909 modified by Ken.
                            If _sourceType = "I" Then
                                rtnData = Tqty_Now + Tqty_Before
                            Else
                                rtnData = Tqty_Before
                            End If

                            rtnDataUnit = ""
                            CreateTXTLog("H73_ChkDailyDosageByOPH", True)
                            Return True
                        Else
                            rtnData = False
                            CreateTXTLog("H73_ChkDailyDosageByOPH", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("H73_ChkDailyDosageByOPH", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H73_ChkDailyDosageByOPH", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.20 每X週執行次數檢核
    ''' 2010/07/21 修改  @Order_Record#Order_Effect_Date#)  ->dateadd(dd,1,@Order_Record#Order_Effect_Date#) ) 
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C02_ChkTimesByWeek() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage_Unit")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Frequency_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As Decimal = CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"))
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Order_Code As String = OrderRecordRow.Item("Order_Code").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim

                    Dim Dosage As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage") Then
                        Dosage = OrderRecordRow.Item("Dosage").ToString.Trim
                    End If
                    Dim Dosage_Unit As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage_Unit") Then
                        Dosage_Unit = OrderRecordRow.Item("Dosage_Unit").ToString.TrimEnd
                    End If
                    Dim Frequency_Code As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Frequency_Code") Then
                        Frequency_Code = OrderRecordRow.Item("Frequency_Code").ToString.Trim
                    End If
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Days As Decimal = CDec(OrderRecordRow.Item("Days"))
                    Dim Tqty As Decimal = CDec(OrderRecordRow.Item("Tqty"))
                    Dim Tqty_Unit As String = OrderRecordRow.Item("Tqty_Unit").ToString.Trim
                    Dim Tqty_Now As Decimal = 0.0
                    Dim Tqty_Before As Decimal = 0.0

                    '20100628 add by Rich, 呼叫OmoServiceManager中計算總量 method 重新計算 ValueX 天的量
                    If Days > (ValueX * 7) Then
                        If Dosage <> String.Empty AndAlso Dosage_Unit <> String.Empty AndAlso Frequency_Code <> String.Empty Then
                            Dim caculateResult As DataSet = CalculateTqty(Order_Code, Dosage, Dosage_Unit, Frequency_Code, ValueX)
                            Dim Correct As Boolean = True
                            Dim ErrorMessage As String = ""
                            If DataSetUtil.IsContainsData(caculateResult) Then
                                Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                If Correct = True Then
                                    Tqty = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                    Tqty_Unit = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                Else
                                    log.dbErrorMsg(ErrorMessage, New Exception(ErrorMessage))
                                End If
                            End If
                        Else
                            Tqty = Math.Ceiling(Tqty / Days * ValueX)
                        End If

                    End If

                    Tqty_Now = Tqty_UnitTransform(Order_Code, Tqty_Unit, Tqty, ValueUnit)

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1, dateadd(ww,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("')) ")
                            CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C02_ChkTimesByWeek", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between dateadd(dd,1, dateadd(ww,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') )")
                            CommandStr.Append("                         and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append("                      ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C02_ChkTimesByWeek", True)
                            Return True
                        Else
                            rtnData = False
                            CreateTXTLog("C02_ChkTimesByWeek", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1, dateadd(ww,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ) ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         ) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C02_ChkTimesByWeek", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1, dateadd(ww,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ) ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         ) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C02_ChkTimesByWeek", True)
                            Return True
                        Else
                            rtnData = False
                            CreateTXTLog("C02_ChkTimesByWeek", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C02_ChkTimesByWeek", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C02_ChkTimesByWeek", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.21 每X月執行次數檢核
    ''' 2010/07/21 修改  @Order_Record#Order_Effect_Date#)->  dateadd(dd,1,@Order_Record#Order_Effect_Date#) )
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C03_ChkTimesByMonth() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage_Unit")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Frequency_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Order_Code As String = OrderRecordRow.Item("Order_Code").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Dosage As String = OrderRecordRow.Item("Dosage").ToString.Trim
                    Dim Dosage_Unit As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage_Unit") Then
                        Dosage_Unit = OrderRecordRow.Item("Dosage_Unit").ToString.TrimEnd
                    End If
                    Dim Frequency_Code As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Frequency_Code") Then
                        Frequency_Code = OrderRecordRow.Item("Frequency_Code").ToString.Trim
                    End If
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Days As Decimal = CDec(OrderRecordRow.Item("Days"))
                    Dim Tqty As Decimal = CDec(OrderRecordRow.Item("Tqty"))
                    Dim Tqty_Unit As String = OrderRecordRow.Item("Tqty_Unit").ToString.Trim
                    Dim Tqty_Now As Decimal = 0.0
                    Dim Tqty_Before As Decimal = 0.0
                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    '20100628 add by Rich, 呼叫OmoServiceManager中計算總量 method 重新計算 ValueX 天的量
                    If Days > (ValueX * 30) Then
                        If Dosage <> String.Empty AndAlso Dosage_Unit <> String.Empty AndAlso Frequency_Code <> String.Empty Then
                            Dim caculateResult As DataSet = CalculateTqty(Order_Code, Dosage, Dosage_Unit, Frequency_Code, ValueX)
                            Dim Correct As Boolean = True
                            Dim ErrorMessage As String = ""
                            If DataSetUtil.IsContainsData(caculateResult) Then
                                Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                If Correct = True Then
                                    Tqty = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                    Tqty_Unit = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                Else
                                    log.dbErrorMsg(ErrorMessage, New Exception(ErrorMessage))
                                End If
                            End If
                        Else
                            Tqty = Math.Ceiling(Tqty / Days * ValueX)
                        End If

                    End If

                    Tqty_Now = Tqty_UnitTransform(Order_Code, Tqty_Unit, Tqty, ValueUnit)

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1, dateadd(mm,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ) ")
                            CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C03_ChkTimesByMonth", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between dateadd(dd,1, dateadd(mm,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ) ")
                            CommandStr.Append("                         and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			            and imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append("                     ) ")
                            CommandStr.Append(" 		where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Now + Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C03_ChkTimesByMonth", True)
                            Return True
                        Else
                            rtnData = False
                            CreateTXTLog("C03_ChkTimesByMonth", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1, dateadd(mm,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ) ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         ) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C03_ChkTimesByMonth", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1, dateadd(mm,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ) ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         ) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            rtnData = Tqty_Before
                            rtnDataUnit = ""
                            CreateTXTLog("C03_ChkTimesByMonth", True)
                            Return True
                        Else
                            rtnData = False
                            CreateTXTLog("C03_ChkTimesByMonth", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C03_ChkTimesByMonth", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C03_ChkTimesByMonth", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.22 每X年執行次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C04_ChkTimesByYear() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Tqty_Now As Integer = OrderRecordRow.Item("Tqty")
                    Dim Tqty_Before As Integer = 0
                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()

                            CommandStr.Append("SELECT Isnull(SUM(imp.Tqty), 0) AS Tqty_Before " & vbCrLf)
                            CommandStr.Append("FROM   OMO_Order_Record_Impl imp " & vbCrLf)
                            CommandStr.Append("       INNER JOIN OMO_Medical_Record med " & vbCrLf)
                            CommandStr.Append("         ON ( med.Chart_No = '" & Chart_No & "' " & vbCrLf)
                            CommandStr.Append("              AND imp.Outpatient_Sn = med.Outpatient_Sn " & vbCrLf)
                            CommandStr.Append("              AND imp.Order_Code = '" & TriggerValueData & "' " & vbCrLf)
                            CommandStr.Append("              AND ( imp.Charge_Date BETWEEN Dateadd(yyyy, 0 - " & ValueX & ", '" & Order_Effect_Date & "') AND '" & Order_Effect_Date & "' ) " & vbCrLf)
                            CommandStr.Append(" 			 AND imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append("              AND imp.[Cancel] = 'N' ) " & vbCrLf)
                            CommandStr.Append("WHERE  med.Outpatient_Sn <> '" & Outpatient_sn & "' ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C04_ChkTimesByYear", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()

                            CommandStr.Append("SELECT Isnull(SUM(Tqty), 0) AS Tqty_Before " & vbCrLf)
                            CommandStr.Append("FROM   OMO_Order_Record_Impl imp " & vbCrLf)
                            CommandStr.Append("       INNER JOIN OMO_Medical_Record med " & vbCrLf)
                            CommandStr.Append("         ON ( med.Chart_No = '" & Chart_No & "' " & vbCrLf)
                            CommandStr.Append("              AND imp.Outpatient_Sn = med.Outpatient_Sn " & vbCrLf)
                            CommandStr.Append("              AND imp.Order_Code IN (SELECT op.Order_Code " & vbCrLf)
                            CommandStr.Append("                                     FROM   PUB_Order_Price op " & vbCrLf)
                            CommandStr.Append("                                     WHERE  op.Insu_Code = '" & TriggerValueData & "' " & vbCrLf)
                            CommandStr.Append("                                            AND ( '" & Order_Effect_Date & "' BETWEEN op.Effect_Date AND op.End_Date ) " & vbCrLf)
                            CommandStr.Append("                                     UNION " & vbCrLf)
                            CommandStr.Append("                                     SELECT ic.Order_Code " & vbCrLf)
                            CommandStr.Append("                                     FROM   PUB_Insu_Code ic " & vbCrLf)
                            CommandStr.Append("                                     WHERE  ic.Insu_Code = '" & TriggerValueData & "' " & vbCrLf)
                            CommandStr.Append("                                            AND ( '" & Order_Effect_Date & "' BETWEEN ic.Effect_Date AND ic.End_Date )) " & vbCrLf)
                            CommandStr.Append("              AND ( imp.Charge_Date BETWEEN Dateadd(yyyy, 0 - " & ValueX & ", '" & Order_Effect_Date & "') AND '" & Order_Effect_Date & "' ) " & vbCrLf)
                            CommandStr.Append(" 			 AND imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append("              AND imp.[Cancel] = 'N' ) " & vbCrLf)
                            CommandStr.Append("WHERE  med.Outpatient_Sn <> '" & Outpatient_sn & "' ")





                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C04_ChkTimesByYear", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C04_ChkTimesByYear", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(yyyy,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         ) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C04_ChkTimesByYear", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(yyyy,0-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         ) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C04_ChkTimesByYear", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C04_ChkTimesByYear", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C04_ChkTimesByYear", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C04_ChkTimesByYear", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.23 本週執行次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C05_ChkTimesByThisWeek() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Tqty_Now As Integer = OrderRecordRow.Item("Tqty")
                    Dim Tqty_Before As Integer = 0
                    Dim Start_Date As String = ""
                    Dim End_Date As String = ""

                    clearCommandString()
                    CommandStr.Append(" SELECT Case ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 1 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, 0, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 2 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, -1, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 3 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, -2, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 4 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, -3, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 5 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, -4, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 6 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, -5, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 7 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, -6, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	end as 'Start_Date', Case ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 1 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, 6, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 2 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, 5, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 3 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, 4, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 4 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, 3, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 5 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, 2, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 6 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, 1, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	When DATEPART(WEEKDAY, '").Append(Order_Effect_Date).Append("') = 7 ")
                    CommandStr.Append(" 		Then Dateadd(DAY, 0, '").Append(Order_Effect_Date).Append("') ")
                    CommandStr.Append(" 	end as 'End_Date' ")

                    Dim DateDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    If DataSetUtil.IsContainsData(DateDS) Then
                        Start_Date = CDate(DateDS.Tables(0).Rows(0).Item("Start_Date")).ToString("yyyy-MM-dd")
                        End_Date = CDate(DateDS.Tables(0).Rows(0).Item("End_Date")).ToString("yyyy-MM-dd")
                    End If

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(imp.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			AND imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		) where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C05_ChkTimesByThisWeek", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			            AND imp.[Is_Force] <> 'Y' ")
                            'CommandStr.Append("                     ) ")
                            CommandStr.Append(" 		) where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C05_ChkTimesByThisWeek", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C05_ChkTimesByThisWeek", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C05_ChkTimesByThisWeek", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C05_ChkTimesByThisWeek", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C05_ChkTimesByThisWeek", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C05_ChkTimesByThisWeek", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C05_ChkTimesByThisWeek", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.24 本月執行次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C06_ChkTimesByThisMonth() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Tqty_Now As Integer = OrderRecordRow.Item("Tqty")
                    Dim Tqty_Before As Integer = 0
                    Dim Start_Date As String = ""
                    Dim End_Date As String = ""

                    clearCommandString()
                    CommandStr.Append(" SELECT Case ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 1 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-01-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 2 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-02-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 3 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-03-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 4 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-04-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 5 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-05-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 6 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-06-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 7 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-07-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 8 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-08-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 9 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-09-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 10 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-10-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 11 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-11-01' ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 12 ")
                    CommandStr.Append(" 		Then CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-12-01' ")
                    CommandStr.Append(" 	end as 'Start_Date', Case ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 1 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-01-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 2 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-02-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 3 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-03-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 4 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-04-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 5 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-05-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 6 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-06-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 7 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-07-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 8 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-08-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 9 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-09-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 10 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-10-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 11 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-11-01'))) ")
                    CommandStr.Append(" 	When DATEPART(MM, '").Append(Order_Effect_Date).Append("') = 12 ")
                    CommandStr.Append(" 		Then DATEADD(D, -1, DATEADD(M, 1, CONVERT(Date, CONVERT(NVARCHAR(4), DATEPART(YYYY, '").Append(Order_Effect_Date).Append("')) + '-12-01'))) ")
                    CommandStr.Append(" 	end as 'End_Date' ")

                    Dim DateDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    If DataSetUtil.IsContainsData(DateDS) Then
                        Start_Date = CDate(DateDS.Tables(0).Rows(0).Item("Start_Date")).ToString("yyyy-MM-dd")
                        End_Date = CDate(DateDS.Tables(0).Rows(0).Item("End_Date")).ToString("yyyy-MM-dd")
                    End If

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(imp.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			AND imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C06_ChkTimesByThisMonth", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			            AND imp.[Is_Force] <> 'Y' ")
                            'CommandStr.Append("                     ) ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C06_ChkTimesByThisMonth", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C06_ChkTimesByThisMonth", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C06_ChkTimesByThisMonth", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C06_ChkTimesByThisMonth", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C06_ChkTimesByThisMonth", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C06_ChkTimesByThisMonth", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C06_ChkTimesByThisMonth", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.25 本年執行次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C07_ChkTimesByThisYear() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Tqty_Now As Integer = OrderRecordRow.Item("Tqty")
                    Dim Tqty_Before As Integer = 0
                    Dim Start_Date As String = CDate(Order_Effect_Date).ToString("yyyy") & "-01-01"
                    Dim End_Date As String = CDate(Order_Effect_Date).ToString("yyyy") & "-12-31"

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(imp.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			AND imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C07_ChkTimesByThisYear", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			            AND imp.[Is_Force] <> 'Y' ")
                            'CommandStr.Append("                     ) ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C07_ChkTimesByThisYear", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C07_ChkTimesByThisYear", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C07_ChkTimesByThisYear", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C07_ChkTimesByThisYear", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C07_ChkTimesByThisYear", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C07_ChkTimesByThisYear", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C07_ChkTimesByThisYear", False)
            Return False
        End Try
    End Function

    'Add By Elly 2016/06/03 for spec SDSPEC-100-10-21 --start
    ''' <summary>
    ''' 1.25 本年執行次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C08_InfluenzaChkTimesByThisYear() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Tqty_Now As Integer = OrderRecordRow.Item("Tqty")
                    Dim Tqty_Before As Integer = 0
                    Dim Start_Date As String = CDate(Order_Effect_Date).ToString("yyyy") & "-10-01"
                    Dim End_Date As String = CDate(Order_Effect_Date).ToString("yyyy") & "-10-01"

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(imp.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			AND imp.[Is_Force] <> 'Y' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C08_InfluenzaChkTimesByThisYear", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			            AND imp.[Is_Force] <> 'Y' ")
                            'CommandStr.Append("                     ) ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Now + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C08_InfluenzaChkTimesByThisYear", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C08_InfluenzaChkTimesByThisYear", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C08_InfluenzaChkTimesByThisYear", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                rtnData = Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C08_InfluenzaChkTimesByThisYear", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C08_InfluenzaChkTimesByThisYear", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C08_InfluenzaChkTimesByThisYear", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C08_InfluenzaChkTimesByThisYear", False)
            Return False
        End Try
    End Function


    '--end
    ''' <summary>
    ''' 1.26 總量次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C09_ChkTotalTimes() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    'Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Tqty_Now As Integer = OrderRecordRow.Item("Tqty")
                    Dim Tqty_Before As Integer = 0
                    Dim Start_Date As String = CDate(Order_Effect_Date).ToString("yyyy") & "-01-01"
                    Dim End_Date As String = CDate(Order_Effect_Date).ToString("yyyy") & "-12-31"
                    Dim _sourceType As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Source_Type").ToString.Trim.ToUpper

                    '================================================================================
                    Select Case _sourceType

                        Case "I"
                            '------------------------------------------------------------------------
                            If Location = "C" OrElse Location = "P" Then

                                Dim var1 As New System.Text.StringBuilder
                                var1.AppendFormat("SELECT ISNULL(SUM(ST.Remain_Qty), 0) AS Tqty_Before " & vbCrLf)
                                var1.AppendFormat("FROM   STA_Material_Detail ST " & vbCrLf)
                                var1.AppendFormat("       INNER JOIN INP_Check_In_Out AS MM " & vbCrLf)
                                var1.AppendFormat("         ON ST.Case_No = MM.Case_No " & vbCrLf)
                                var1.AppendFormat("            AND ISNULL(ST.Cancel, 'N') != 'Y' " & vbCrLf)
                                var1.AppendFormat("            AND ST.Force_Sign = 'N' " & vbCrLf)
                                var1.AppendFormat("            AND MM.Chart_No = '{0}' " & vbCrLf, Chart_No.Replace("'", "''"))
                                var1.AppendFormat("            AND MM.Main_Identity_Id = '2' " & vbCrLf)
                                var1.AppendFormat("            AND ST.Remain_Qty > 0 " & vbCrLf)

                                If TriggerItemCode = "A00006" Then
                                    'A00006
                                    var1.AppendFormat("            AND ST.Insu_Code = '{0}' " & vbCrLf, TriggerValueData.Replace("'", "''"))
                                Else
                                    'A00004 || Others
                                    var1.AppendFormat("            AND ST.Order_Code = '{0}' " & vbCrLf, TriggerValueData.Replace("'", "''"))
                                End If

                                var1.AppendFormat("       INNER JOIN IMO_Order_Record RR " & vbCrLf)
                                var1.AppendFormat("         ON ST.Case_No = RR.Case_No " & vbCrLf)
                                var1.AppendFormat("            AND RR.Order_Record_No = ST.Order_Record_No " & vbCrLf)
                                var1.AppendFormat("            AND ISNULL(RR.Cancel, 'N') != 'Y' " & vbCrLf)
                                var1.AppendFormat("            AND ISNULL(ST.Cancel, 'N') != 'Y' " & vbCrLf)
                                var1.AppendFormat("WHERE  ST.Case_No <> '{0}' " & vbCrLf, Outpatient_sn.Replace("'", "''"))
                               
                                Dim tempDS As DataSet = dynamicQueryForPCS(var1.ToString)

                                If DataSetUtil.IsContainsData(tempDS) Then
                                    Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                    rtnData = Tqty_Now + Tqty_Before
                                    rtnDataUnit = String.Empty
                                    CreateTXTLog("C09_ChkTotalTimes", True)
                                    Return True
                                End If

                            Else

                                Dim var1 As New System.Text.StringBuilder
                                var1.AppendFormat("SELECT ISNULL(SUM(DT.Apply_Qty), 0) AS Tqty_Before " & vbCrLf)
                                var1.AppendFormat("FROM   IHD_Dclr_Detail AS DT " & vbCrLf)
                                var1.AppendFormat("WHERE  DT.Chart_No = '{0}' " & vbCrLf, Chart_No.Replace("'", "''"))
                                var1.AppendFormat("       AND ISNULL(DT.Cancel, '') != 'Y' " & vbCrLf)
                                var1.AppendFormat("       AND DT.Apply_Qty > 0 " & vbCrLf)

                                If TriggerItemCode = "A00006" Then
                                    'A00006
                                    var1.AppendFormat("       AND DT.Insu_Code = '{0}' " & vbCrLf, TriggerValueData.Replace("'", "''"))
                                Else
                                    'A00004 || Others
                                    var1.AppendFormat("       AND DT.Order_Code = '{0}' " & vbCrLf, TriggerValueData.Replace("'", "''"))
                                End If

                                Dim tempDS As DataSet = dynamicQueryNotPub(var1.ToString)

                                If DataSetUtil.IsContainsData(tempDS) Then
                                    Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                    rtnData = Tqty_Before
                                    rtnDataUnit = String.Empty
                                    CreateTXTLog("C09_ChkTotalTimes", True)
                                    Return True
                                End If

                            End If
                            '------------------------------------------------------------------------
                        Case Else
                            '------------------------------------------------------------------------
                            If Location = "C" OrElse Location = "P" Then

                                If TriggerItemCode = "A00004" Then

                                    clearCommandString()
                                    CommandStr.Append(" Select isnull(sum(imp.Tqty),0) as Tqty_Before ")
                                    CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                                    CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                                    CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                                    CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                                    CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                                    CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                                    CommandStr.Append(" 			AND imp.[Is_Force] <> 'Y' ")
                                    CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                                    Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                    If DataSetUtil.IsContainsData(tempDS) Then
                                        Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                        rtnData = Tqty_Now + Tqty_Before
                                        rtnDataUnit = ""
                                        CreateTXTLog("C09_ChkTotalTimes", True)
                                        Return True
                                    End If
                                ElseIf TriggerItemCode = "A00006" Then

                                    clearCommandString()
                                    CommandStr.Append(" Select isnull(sum(Tqty),0) as Tqty_Before ")
                                    CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                                    CommandStr.Append("     inner join OMO_Medical_Record med ")
                                    CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                                    CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                                    CommandStr.Append("             imp.Order_Code in ")
                                    CommandStr.Append("                 (Select op.Order_Code ")
                                    CommandStr.Append("                  From PUB_Order_Price op ")
                                    CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                                    CommandStr.Append("                     and op.End_Date) ")
                                    CommandStr.Append("                  Union ")
                                    CommandStr.Append("                  Select ic.Order_Code ")
                                    CommandStr.Append("                  From PUB_Insu_Code ic ")
                                    CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                                    CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                                    CommandStr.Append("                     and ic.End_Date) ")
                                    CommandStr.Append("                 ) and imp.[Cancel] = 'N' ")
                                    CommandStr.Append(" 			      AND imp.[Is_Force] <> 'Y' ")
                                    CommandStr.Append("                     )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                                    Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                    If DataSetUtil.IsContainsData(tempDS) Then
                                        Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                        rtnData = Tqty_Now + Tqty_Before
                                        rtnDataUnit = ""
                                        CreateTXTLog("C09_ChkTotalTimes", True)
                                        Return True
                                    End If
                                Else
                                    rtnData = False
                                    CreateTXTLog("C09_ChkTotalTimes", True)
                                    Return True
                                End If
                            Else
                                If TriggerItemCode = "A00004" Then

                                    clearCommandString()
                                    CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                                    CommandStr.Append(" From OHD_Order_Record ord ")
                                    CommandStr.Append("     inner join OHD_Medical_Record med ")
                                    CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                                    CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                                    CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                                    CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                                    CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                                    CommandStr.Append("             ord.[Cancel] = 'N' ")
                                    CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                                    Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                    If DataSetUtil.IsContainsData(tempDS) Then
                                        Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                        rtnData = Tqty_Before
                                        rtnDataUnit = ""
                                        CreateTXTLog("C09_ChkTotalTimes", True)
                                        Return True
                                    End If
                                ElseIf TriggerItemCode = "A00006" Then
                                    clearCommandString()
                                    CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                                    CommandStr.Append(" From OHD_Order_Record ord ")
                                    CommandStr.Append("     inner join OHD_Medical_Record med ")
                                    CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                                    CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                                    CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                                    CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                                    CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                                    CommandStr.Append("             ord.[Cancel] = 'N' ")
                                    CommandStr.Append("         )  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                                    Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                    If DataSetUtil.IsContainsData(tempDS) Then
                                        Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                        rtnData = Tqty_Before
                                        rtnDataUnit = ""
                                        CreateTXTLog("C09_ChkTotalTimes", True)
                                        Return True
                                    End If
                                Else
                                    rtnData = False
                                    CreateTXTLog("C09_ChkTotalTimes", True)
                                    Return True
                                End If
                            End If
                            '------------------------------------------------------------------------
                    End Select

                    '================================================================================
                End If
            End If

            rtnData = False
            CreateTXTLog("C09_ChkTotalTimes", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C09_ChkTotalTimes", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.27-1 單次醫令總量次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function C10_ChkTimesByEachOrder() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRowX() As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' AND ( Is_Force IS NULL OR Is_Force <> 'Y' ) ")
                    If OrderRecordRowX.Count = 0 Then
                        rtnData = 0
                        rtnDataUnit = ""
                        CreateTXTLog("C10_ChkTimesByEachOrder", True)
                        Return True
                    End If
                    Dim OrderRecordRow As DataRow = OrderRecordRowX(0)

                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    'Dim Cure_Type_Id As String = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    Dim Tqty_Now As Integer = 0
                    Dim Tqty_Before As Integer = 0
                    Dim Start_Date As String = CDate(Order_Effect_Date).ToString("yyyy") & "-01-01"
                    Dim End_Date As String = CDate(Order_Effect_Date).ToString("yyyy") & "-12-31"

                    Dim Outpatient_Sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(imp.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			AND imp.[Is_Force] <> 'Y' ")
                            CommandStr.AppendFormat(" 		) Where imp.Outpatient_Sn <> '{0}' ", Outpatient_Sn)

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                Dim row() As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' AND ( Is_Force IS NULL OR Is_Force <> 'Y' ) ")
                                For Each oneRow As DataRow In row
                                    Tqty_Now = Tqty_Now + CInt(oneRow.Item("Tqty"))
                                Next

                                rtnData = Tqty_Now '+ Tqty_Before 'James 2011/4/23 Mark + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C10_ChkTimesByEachOrder", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 			            AND imp.[Is_Force] <> 'Y' ")
                            CommandStr.AppendFormat(" 		)  Where imp.Outpatient_Sn <> '{0}' ", Outpatient_Sn)

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                Dim row() As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' AND ( Is_Force IS NULL OR Is_Force <> 'Y' ) ")
                                For Each oneRow As DataRow In row
                                    Tqty_Now = Tqty_Now + CInt(oneRow.Item("Tqty"))
                                Next

                                rtnData = Tqty_Now '+ Tqty_Before 'James 2011/4/23 Mark + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C10_ChkTimesByEachOrder", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C10_ChkTimesByEachOrder", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.AppendFormat("         )  Where ord.Medical_Sn <> '{0}' ", Outpatient_Sn)

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                Dim row() As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' AND ( Is_Force IS NULL OR Is_Force <> 'Y' ) ")
                                For Each oneRow As DataRow In row
                                    Tqty_Now = Tqty_Now + CInt(oneRow.Item("Tqty"))
                                Next

                                rtnData = Tqty_Now '+ Tqty_Before 'James 2011/4/23 Mark + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C10_ChkTimesByEachOrder", True)
                                Return True
                            End If
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(sum(ord.Tqty),0) as Tqty_Before ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between '").Append(Start_Date).Append("' and '").Append(End_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.AppendFormat("         )  Where ord.Medical_Sn <> '{0}' ", Outpatient_Sn)

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                Tqty_Before = CInt(tempDS.Tables(0).Rows(0).Item("Tqty_Before"))

                                Dim row() As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' AND ( Is_Force IS NULL OR Is_Force <> 'Y' ) ")
                                For Each oneRow As DataRow In row
                                    Tqty_Now = Tqty_Now + CInt(oneRow.Item("Tqty"))
                                Next

                                rtnData = Tqty_Now '+ Tqty_Before 'James 2011/4/23 Mark + Tqty_Before
                                rtnDataUnit = ""
                                CreateTXTLog("C10_ChkTimesByEachOrder", True)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("C10_ChkTimesByEachOrder", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("C10_ChkTimesByEachOrder", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C10_ChkTimesByEachOrder", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.27-2 慢箋醫令前X適應症檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function K06_ChkChronicOrderBySpecificIcd_Old() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Diagnosis", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Sort_Value")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Order_Date As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date").ToString.Trim
                    Dim ValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim

                    pubreapi.Tables("Diagnosis").DefaultView.Sort = "Icd_Sort_Value"

                    For Each row As DataRow In pubreapi.Tables("Diagnosis").Rows

                        If CInt(row.Item("Icd_Sort_Value")) > CInt(ValueX) Then
                            Exit For
                        End If

                        clearCommandString()
                        CommandStr.Append(" Select COUNT(Icd_Code) as Result ")
                        CommandStr.Append(" From PUB_Disease ")
                        CommandStr.Append(" Where Icd_Code = '").Append(row.Item("Icd_Code").ToString.Trim).Append("' and ")
                        CommandStr.Append("       Is_Chronic_Disease = 'Y' and ")
                        CommandStr.Append("       ('").Append(Order_Date).Append("' between Effect_Date and End_Date) ")

                        Dim tempDS As DataSet = dynamicQuery(CommandStr.ToString)

                        If DataSetUtil.IsContainsData(tempDS) AndAlso tempDS.Tables(0).Rows(0).Item("Result") IsNot DBNull.Value Then
                            Dim Result As Integer = CInt(tempDS.Tables(0).Rows(0).Item("Result"))
                            If Result = 0 Then
                                rtnData = False
                                CreateTXTLog("K06_ChkChronicOrderBySpecificIcd", False)
                                Return True
                            End If
                        Else
                            rtnData = False
                            CreateTXTLog("K06_ChkChronicOrderBySpecificIcd", False)
                            Return True
                        End If
                    Next

                    rtnData = True
                    CreateTXTLog("K06_ChkChronicOrderBySpecificIcd", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("K06_ChkChronicOrderBySpecificIcd", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K06_ChkChronicOrderBySpecificIcd", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.28 醫師專科檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function D01_ChkDrLicense() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim blnChkSucess As Boolean = False
                '針對 A00004, A00006 須特別檢查 Order_Record 是否存在
                If (pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim.Equals("A00004") OrElse _
                    pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim.Equals("A00006")) Then

                    Dim DataTableName2() As String = {"Order_Record"}

                    If isContainsDataTable(DataTableName2) Then
                        blnChkSucess = True
                    End If

                Else
                    blnChkSucess = True
                End If

                If blnChkSucess Then

                    Dim CheckTable As DataTable = getCheckTable()
                    AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
                    AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")

                    If (pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim.Equals("A00004")) Then
                        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Doctor_Code")
                        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                    ElseIf (pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim.Equals("A00006")) Then
                        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Doctor_Code")
                        AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                    End If

                    AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                    AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                    AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                    AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")

                    If checkAllContainColumnIn(CheckTable) Then

                        Dim Doctor_Code As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Doctor_Code").ToString.Trim
                        Dim Order_Date As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date").ToString.Trim
                        Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                        Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                        Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                        Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                        Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim

                        If ValueDataStr = "" Then
                            rtnData = False
                            CreateTXTLog("D01_ChkDrLicense", False)
                            Return True
                        End If

                        Dim ValueData() As String = ValueDataStr.Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)
                        Dim Check_Doctor_Code As String = ""

                        If TriggerItemCode = "A00004" Then
                            Dim tempRow() As DataRow = pubreapi.Tables("Order_Record").Select("Order_Code = '" & TriggerValueData & "'")
                            If tempRow.Count <> 0 Then
                                Check_Doctor_Code = tempRow(0).Item("Order_Doctor_Code").ToString.Trim
                            Else
                                Check_Doctor_Code = Doctor_Code
                            End If
                        ElseIf TriggerItemCode = "A00006" Then
                            Dim tempRow() As DataRow = pubreapi.Tables("Order_Record").Select("Insu_Code = '" & TriggerValueData & "'")
                            If tempRow.Count <> 0 Then
                                Check_Doctor_Code = tempRow(0).Item("Order_Doctor_Code").ToString.Trim
                            Else
                                Check_Doctor_Code = Doctor_Code
                            End If
                        Else
                            Check_Doctor_Code = Doctor_Code
                        End If

                        clearCommandString()

                        Dim var1 As New System.Text.StringBuilder
                        var1.Append("SELECT RTRIM([License_Id]) AS ESTABLISH " & vbCrLf)
                        var1.Append("                        FROM   PMS_Emp_License WITH(NOLOCK) " & vbCrLf)
                        var1.Append("                        WHERE  ( [License_Id] IS NOT NULL " & vbCrLf)
                        var1.Append("                                  OR [License_Id] <> '' ) " & vbCrLf)
                        var1.AppendFormat("                               AND [Employee_Code] = '{0}' " & vbCrLf, Doctor_Code)
                        var1.AppendFormat("                               AND ( '{0}' BETWEEN CASE " & vbCrLf, Order_Date)
                        var1.Append("                                                           WHEN [License_Effect_Date] IS NULL " & vbCrLf)
                        var1.Append("                                                                  THEN '2010-1-1' " & vbCrLf)
                        var1.Append("                                                           ELSE [License_Effect_Date] " & vbCrLf)
                        var1.Append("                                                         END AND CASE " & vbCrLf)
                        var1.Append("                                                                   WHEN [License_End_Date] IS NULL " & vbCrLf)
                        var1.Append("                                                                            THEN '2099-1-1' " & vbCrLf)
                        var1.Append("                                                                   ELSE [License_End_Date] " & vbCrLf)
                        var1.Append("                                                                 END )")
                        


                        CommandStr = var1

                        Dim tempDS As DataSet = dynamicQuery(CommandStr.ToString)

                        Dim tempDtE = tempDS.Tables(0).AsEnumerable

                        Select Case OperatorCode
                                Case "02"
                                    If tempDtE.Any(Function(r) ValueData.Contains(r("ESTABLISH"))) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                    CreateTXTLog("D01_ChkDrLicense", True)
                                    Return True
                                Case "06"
                                    If Not tempDtE.Any(Function(r) ValueData.Contains(r("ESTABLISH"))) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                    CreateTXTLog("D01_ChkDrLicense", True)
                                    Return True
                                Case Else
                                    rtnData = False
                                    CreateTXTLog("D01_ChkDrLicense", True)
                                    Return True
                            End Select

                    End If
                End If

            End If
            rtnData = False
            CreateTXTLog("D01_ChkDrLicense", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("D01_ChkDrLicense", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.29 看診醫師檢核
    ''' 修改by markwu   合乎藥局table修正 2010/08/30
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function D02_ChkDrNo() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode") '觸發該規則的項目代碼
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Doctor_Code As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Doctor_Code").ToString.Trim
                    Dim Order_Code As String = pubreapi.Tables("Pub_Rule").Rows(0).Item("TriggerValueData").ToString.Trim 'Pharmacy_12_Code
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim.ToUpper

                    ' 2012-06-04 若為抗生素，要Pass此檢核 ---------
                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT DISTINCT RTRIM(Pharmacy_12_Code) AS Pharmacy_12_Code " & vbCrLf)
                    var1.AppendFormat("FROM   OPH_Property " & vbCrLf)
                    var1.AppendFormat("WHERE  1 = 1 " & vbCrLf)
                    var1.AppendFormat("       AND Pharmacy_12_Code IN ( '{0}' ) " & vbCrLf, Order_Code)
                    var1.AppendFormat("       AND Property_Id = '11E' " & vbCrLf)

                    Dim _ophProperty As DataTable = dynamicQueryNotPub(var1.ToString).Tables(0) 'Query Oph_Property.

                    If _ophProperty.Rows.Count > 0 Then
                        rtnData = True
                        Return True
                    End If
                    '----------------------------------------------------------------------------------

                    Dim querystr As String = "select count(*) from  OPH_Open_Restrict as OOR inner join OPH_pharmacy_base as OPB on OPB.Pharmacy_12_code= OOR.Pharmacy_12_code where OOR.Chart_no='" + Doctor_Code + "' and OPB.Pharmacy_12_code='" + Order_Code + "'"

                    Dim dr_tables = dynamicQueryNotPub(querystr)
                    '檢查有沒有資料，如果沒有
                    'rtndata回傳 false 
                    If OperatorCode.Trim.Equals("02") Then



                        If dr_tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(dr_tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表是醫師。就回傳 true
                                rtnData = True
                                Return True
                            Else
                                rtnData = False
                                Return True
                            End If

                        Else
                            rtnData = False
                            Return True

                        End If

                    ElseIf OperatorCode.Trim.Equals("06") Then
                        If dr_tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(dr_tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表是醫師。就回傳 true
                                rtnData = True
                                Return True
                            Else
                                rtnData = False
                                Return True
                            End If

                        Else
                            rtnData = False
                            Return True

                        End If

                    End If

                    CreateTXTLog("D02_ChkDrNo", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("D02_ChkDrNo", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("D02_ChkDrNo", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.33 牙位第2碼檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function F05_Chk2ndToothNo() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Site_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim

                    Dim rowSet() As DataRow = pubreapi.Tables("Order_Record").Select("Order_Code = '" & TriggerValueData & "'")

                    For Each row As DataRow In rowSet

                        Dim checkCode As String = row.Item("Body_Site_Code").ToString.Trim.Substring(1, 1)

                        Select Case OperatorCode
                            Case "01"
                                If Not (checkCode > ValueData) Then
                                    rtnData = False
                                    CreateTXTLog("F05_Chk2ndToothNo", True)
                                    Return True
                                End If
                            Case "04"
                                If Not (checkCode >= ValueData) Then
                                    rtnData = False
                                    CreateTXTLog("F05_Chk2ndToothNo", True)
                                    Return True
                                End If
                            Case "03"
                                If Not (checkCode < ValueData) Then
                                    rtnData = False
                                    CreateTXTLog("F05_Chk2ndToothNo", True)
                                    Return True
                                End If
                            Case "05"
                                If Not (checkCode <= ValueData) Then
                                    rtnData = False
                                    CreateTXTLog("F05_Chk2ndToothNo", True)
                                    Return True
                                End If
                            Case "02"
                                If Not (checkCode = ValueData) Then
                                    rtnData = False
                                    CreateTXTLog("F05_Chk2ndToothNo", True)
                                    Return True
                                End If
                            Case "06"
                                If Not (checkCode <> ValueData) Then
                                    rtnData = False
                                    CreateTXTLog("F05_Chk2ndToothNo", True)
                                    Return True
                                End If
                            Case Else
                                rtnData = False
                                CreateTXTLog("F05_Chk2ndToothNo", True)
                                Return True
                        End Select
                    Next

                    rtnData = True
                    CreateTXTLog("F05_Chk2ndToothNo", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("F05_Chk2ndToothNo", False)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("F05_Chk2ndToothNo", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.34 牙面數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function F06_ChkToothSurface() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Site_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Side_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim

                    Dim rowSet() As DataRow = pubreapi.Tables("Order_Record").Select("Order_Code = '" & TriggerValueData & "'")
                    Dim existBodySiteCode As New ArrayList

                    For Each row As DataRow In rowSet

                        If existBodySiteCode.Contains(row.Item("Body_Site_Code").ToString.Trim) Then
                            Continue For
                        Else
                            existBodySiteCode.Add(row.Item("Body_Site_Code").ToString.Trim)

                            Dim tempSet() As DataRow = pubreapi.Tables("Order_Record").Select("Order_Code = '" & TriggerValueData & "' and Body_Site_Code = '" & row.Item("Body_Site_Code").ToString.Trim & "'")
                            Dim totalCount As Integer = 0
                            For Each onerow As DataRow In tempSet

                                Dim _bodySideCode As String = onerow.Item("Body_Side_Code").ToString.Trim
                                totalCount += _bodySideCode.Length

                                'If onerow.Item("Body_Side_Code").ToString.Trim <> "" Then
                                '    Dim token() As String = onerow.Item("Body_Side_Code").ToString.Trim.Split(",")
                                '    totalCount = totalCount + token.Count
                                'End If
                            Next

                            Select Case OperatorCode
                                Case "01"
                                    If Not (totalCount > CInt(ValueData)) Then
                                        rtnData = False
                                        CreateTXTLog("F06_ChkToothSurface", True)
                                        Return True
                                    End If
                                Case "04"
                                    If Not (totalCount >= CInt(ValueData)) Then
                                        rtnData = False
                                        CreateTXTLog("F06_ChkToothSurface", True)
                                        Return True
                                    End If
                                Case "03"
                                    If Not (totalCount < CInt(ValueData)) Then
                                        rtnData = False
                                        CreateTXTLog("F06_ChkToothSurface", True)
                                        Return True
                                    End If
                                Case "05"
                                    If Not (totalCount <= CInt(ValueData)) Then
                                        rtnData = False
                                        CreateTXTLog("F06_ChkToothSurface", True)
                                        Return True
                                    End If
                                Case "02"
                                    If Not (totalCount = CInt(ValueData)) Then
                                        rtnData = False
                                        CreateTXTLog("F06_ChkToothSurface", True)
                                        Return True
                                    End If
                                Case "06"
                                    If Not (totalCount <> CInt(ValueData)) Then
                                        rtnData = False
                                        CreateTXTLog("F06_ChkToothSurface", True)
                                        Return True
                                    End If
                                Case Else
                                    rtnData = False
                                    CreateTXTLog("F06_ChkToothSurface", True)
                                    Return True
                            End Select
                        End If
                    Next

                    rtnData = True
                    CreateTXTLog("F06_ChkToothSurface", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("F06_ChkToothSurface", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("F06_ChkToothSurface", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.82 當次醫令同象限總量次數檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function F09_ChkTimesBySiteByEachOrder() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Site_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim Tqty_Now As Integer = 0
                    Dim row() As DataRow

                    If TriggerItemCode = "A00004" Then
                        row = pubreapi.Tables("Order_Record").Select("Order_Code = '" & TriggerValueData & "'")
                    ElseIf TriggerItemCode = "A00006" Then
                        row = pubreapi.Tables("Order_Record").Select("Insu_Code = '" & TriggerValueData & "'")
                    Else
                        rtnData = False
                        CreateTXTLog("F09_ChkTimesBySiteByEachOrder", True)
                        Return True
                    End If

                    Dim dtHash As New Hashtable

                    For Each oneRow As DataRow In row
                        Select Case CInt(oneRow.Item("Body_Site_Code"))
                            Case 11 To 19
                                If dtHash.Contains("11~19") Then
                                    dtHash("11~19") += CInt(oneRow.Item("Tqty"))
                                Else
                                    dtHash.Add("11~19", CInt(oneRow.Item("Tqty")))
                                End If
                            Case 21 To 29
                                If dtHash.Contains("21~29") Then
                                    dtHash("21~29") += CInt(oneRow.Item("Tqty"))
                                Else
                                    dtHash.Add("21~29", CInt(oneRow.Item("Tqty")))
                                End If
                            Case 31 To 39
                                If dtHash.Contains("31~39") Then
                                    dtHash("31~39") += CInt(oneRow.Item("Tqty"))
                                Else
                                    dtHash.Add("31~39", CInt(oneRow.Item("Tqty")))
                                End If
                            Case 41 To 49
                                If dtHash.Contains("41~49") Then
                                    dtHash("41~49") += CInt(oneRow.Item("Tqty"))
                                Else
                                    dtHash.Add("41~49", CInt(oneRow.Item("Tqty")))
                                End If
                            Case 51 To 55
                                If dtHash.Contains("51~55") Then
                                    dtHash("51~55") += CInt(oneRow.Item("Tqty"))
                                Else
                                    dtHash.Add("51~55", CInt(oneRow.Item("Tqty")))
                                End If
                            Case 61 To 65
                                If dtHash.Contains("61~65") Then
                                    dtHash("61~65") += CInt(oneRow.Item("Tqty"))
                                Else
                                    dtHash.Add("61~65", CInt(oneRow.Item("Tqty")))
                                End If
                            Case 71 To 75
                                If dtHash.Contains("71~75") Then
                                    dtHash("71~75") += CInt(oneRow.Item("Tqty"))
                                Else
                                    dtHash.Add("71~75", CInt(oneRow.Item("Tqty")))
                                End If
                            Case 81 To 85
                                If dtHash.Contains("81~85") Then
                                    dtHash("81~85") += CInt(oneRow.Item("Tqty"))
                                Else
                                    dtHash.Add("81~85", CInt(oneRow.Item("Tqty")))
                                End If
                            Case Else
                                '不在計算範圍內
                        End Select
                    Next

                    For Each obj As Integer In dtHash
                        If obj >= Tqty_Now Then
                            Tqty_Now = obj
                        End If
                    Next

                    rtnData = Tqty_Now
                    rtnDataUnit = ""
                    CreateTXTLog("F09_ChkTimesBySiteByEachOrder", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("F09_ChkTimesBySiteByEachOrder", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("F09_ChkTimesBySiteByEachOrder", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.84 開立新醫令成大碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A35_ChkOnlyNewOrderCodeSetByClinic_OLD() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '===== 取得 Order_Effect_Date =====
                    Dim _ordeEffectDate As Date = Nothing
                    _ordeEffectDate = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) CDate(r("Order_Effect_Date"))).Min
                    '==================================

                    _dtOrderRecordE = _dtOrderRecordE.Where(Function(r) (r("Order_Effect_Date").ToString.Trim = String.Empty OrElse CDate(r("Order_Effect_Date")) = _ordeEffectDate) AndAlso (r("Order_Status").ToString.Trim = "A" OrElse r("Order_Status").ToString.Trim = "C"))

                    'trigger order code 之檢體
                    Dim _specimenId As String = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) r("Specimen_Id").ToString.TrimEnd).FirstOrDefault

                    Dim bodySiteHash As New Hashtable
                    Dim Order_Code As New ArrayList

                    If _triggerItemCode = "A00004" AndAlso _specimenId IsNot Nothing AndAlso _specimenId <> String.Empty Then
                        '若為 A00004 觸發，則拿出正觸發order code相同之specimen id, 或specimen id為空白的orders

                        If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                            Dim _orderCodeWithSpecimen = _dtOrderRecordE.Where(Function(r) (r("Is_Force").ToString.Trim = "N" AndAlso (Not r.Table.Columns.Contains("Is_Preadmission") OrElse r("Is_Preadmission").ToString.Trim = "N")) AndAlso (r("Specimen_Id").ToString.TrimEnd = _specimenId OrElse r("Specimen_Id").ToString.TrimEnd = String.Empty)).Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct
                            Order_Code.AddRange(_orderCodeWithSpecimen.ToArray)
                            bodySiteHash.Add("01", Order_Code)
                        Else
                            '20120530 add by Rich, 大中要求加入同部位判斷
                            Dim row() As DataRow = _dtOrderRecord.Select("Is_Force = 'N' AND Is_Preadmission = 'N' AND (Specimen_Id = '" & _specimenId & "' OR Specimen_Id = '') AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND (Order_Status = 'A' OR Order_Status = 'C') ")
                            For Each singleRow As DataRow In row
                                If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                    CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Order_Code").ToString.Trim)
                                Else
                                    Dim _orderCode As New ArrayList
                                    _orderCode.Add(singleRow.Item("Order_Code").ToString.Trim)
                                    bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                                End If
                            Next
                        End If
                    Else
                        If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                            For Each _dr As DataRow In _dtOrderRecordE
                                If Not Order_Code.Contains(_dr("Order_Code").ToString.Trim) AndAlso (_dr("Is_Force").ToString.Trim = "N" AndAlso (Not _dtOrderRecord.Columns.Contains("Is_Preadmission") OrElse _dr("Is_Preadmission").ToString.Trim = "N")) Then
                                    Order_Code.Add(_dr("Order_Code").ToString.Trim)
                                End If
                            Next
                            bodySiteHash.Add("01", Order_Code)
                        Else
                            '20120530 add by Rich, 大中要求加入同部位判斷
                            Dim row() As DataRow = _dtOrderRecord.Select("Is_Force = 'N' AND Is_Preadmission = 'N' AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND (Order_Status = 'A' OR Order_Status = 'C') ")
                            For Each singleRow As DataRow In row
                                If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                    CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Order_Code").ToString.Trim)
                                Else
                                    Dim _orderCode As New ArrayList
                                    _orderCode.Add(singleRow.Item("Order_Code").ToString.Trim)
                                    bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _orderCode)
                                End If
                            Next
                        End If
                    End If

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A35_ChkOnlyNewOrderCodeSetByClinic", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    '2013-06-25
                    If bodySiteHash.Keys.Count = 0 Then
                        Dim _orderCodeAL As New ArrayList
                        _orderCodeAL.Add(_triggerValueData)
                        bodySiteHash.Add(String.Empty, _orderCodeAL)
                    End If

                    For Each bodySiteCode As String In bodySiteHash.Keys
                        If bodySiteHash(bodySiteCode).Contains(_triggerValueData) Then
                            Dim result As String = compareExist(OperatorCode, ValueUnit, bodySiteHash(bodySiteCode), ValueData, "A35_ChkOnlyNewOrderCodeSetByClinic")
                            If result <> "" Then
                                If rtnDS Is Nothing Then
                                    rtnDS = New DataSet
                                End If
                                If Not rtnDS.Tables.Contains("rtnTable") Then
                                    rtnDS.Tables.Add("rtnTable")
                                End If
                                If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                    rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                                End If
                                rtnDS.Tables("rtnTable").Rows.Add()
                                rtnDS.Tables("rtnTable").Rows(0).Item("rtnValueData") = result
                            End If

                            If rtnData = False Then
                                Exit For
                            End If
                        End If
                    Next

                    CreateTXTLog("A35_ChkOnlyNewOrderCodeSetByClinic", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A35_ChkOnlyNewOrderCodeSetByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A35_ChkOnlyNewOrderCodeSetByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.84 開立新醫令成大碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A35_ChkOnlyNewOrderCodeSetByClinic() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '-------------------------------------------------------------------------
                    Dim _isContainColSpecimenId As Boolean = _dtOrderRecord.Columns.Contains("Specimen_Id")
                    Dim _isContainColBodySiteCode As Boolean = _dtOrderRecord.Columns.Contains("Body_Site_Code")
                    Dim _isContainColIsPreadmission As Boolean = _dtOrderRecord.Columns.Contains("Is_Preadmission")
                    Dim _dicKeyList As New List(Of String)
                    Dim _dicGroup As New Dictionary(Of String, List(Of String))
                    For Each _dr As DataRow In _dtOrderRecord.Rows

                        Dim _orderCode As String = _dr("Order_Code").ToString.Trim
                        Dim _orderStatus As String = _dr("Order_Status").ToString.Trim.ToUpper

                        If (_orderCode <> _triggerValueData) OrElse Not (_orderStatus = "A" OrElse _orderStatus = "C") Then Continue For

                        Dim _key As String = Me.AssembleKeyForA05A15A07A17(_dr)

                        If Not _dicKeyList.Contains(_key) Then
                            _dicKeyList.Add(_key)
                        End If
                    Next

                    For Each _dicKeyTmp As String In _dicKeyList
                        Dim _dicKey = _dicKeyTmp
                        Dim _orderCodeWithDateSpecimenBodySiteCode = _dtOrderRecordE _
                                                     .Where(Function(r) (r("Order_Status").ToString.Trim.ToUpper = "A" OrElse r("Order_Status").ToString.Trim.ToUpper = "C") AndAlso r("Is_Force").ToString.Trim = "N" AndAlso (If(_isContainColIsPreadmission, r("Is_Preadmission").ToString.Trim, "N") = "N") AndAlso Me.AssembleKeyForA05A15A07A17(r) = _dicKey AndAlso r("Order_Sno") <> _triggerSno) _
                                                     .Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct

                        If _dicGroup.ContainsKey(_dicKey) Then
                            _dicGroup(_dicKey).AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                        Else
                            Dim _list As New List(Of String)
                            _list.AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                            _dicGroup.Add(_dicKey, _list)
                        End If

                    Next
                    '-------------------------------------------------------------------------

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A05_ChkOrderCodeSetByClinic", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    For Each _dicItem In _dicGroup

                        Dim result As String = compareExist(OperatorCode, ValueUnit, New ArrayList(_dicItem.Value), ValueData, "A05_ChkOrderCodeSetByClinic")
                        If result <> "" Then
                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If

                            Dim _rtnRow As DataRow = rtnDS.Tables("rtnTable").NewRow
                            _rtnRow("rtnValueData") = result
                            rtnDS.Tables("rtnTable").Rows.Add(_rtnRow)
                        End If
                    Next

                    If _dicGroup.Count = 0 Then
                        rtnData = True
                    End If

                    CreateTXTLog("A05_ChkOrderCodeSetByClinic", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A05_ChkOrderCodeSetByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A05_ChkOrderCodeSetByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.85 開立新醫令健保碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A37_ChkOnlyNewNhiCodeSetByClinic_OLD() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '===== 取得 Order_Effect_Date =====
                    Dim _ordeEffectDate As Date = Nothing
                    _ordeEffectDate = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) CDate(r("Order_Effect_Date"))).Min
                    '==================================

                    '_dtOrderRecordE = _dtOrderRecordE.Where(Function(r) r("Order_Effect_Date").ToString.Trim = String.Empty OrElse CDate(r("Order_Effect_Date")) = _ordeEffectDate)

                    Dim bodySiteHash As New Hashtable

                    If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                        Dim Insu_Code As New ArrayList
                        For i As Integer = 0 To (_dtOrderRecord.Rows.Count - 1)
                            With _dtOrderRecord.Rows(i)
                                If Not Insu_Code.Contains(.Item("Insu_Code").ToString.Trim) AndAlso (Not _dtOrderRecord.Columns.Contains("Is_Preadmission") OrElse .Item("Is_Preadmission").ToString.Trim = "N") AndAlso (.Item("Order_Effect_Date").ToString.TrimEnd = String.Empty OrElse CDate(.Item("Order_Effect_Date")) = _ordeEffectDate) AndAlso (.Item("Order_Status").ToString.Trim = "A" OrElse .Item("Order_Status").ToString.Trim = "C") Then
                                    Insu_Code.Add(.Item("Insu_Code").ToString.Trim)
                                End If
                            End With
                        Next
                        bodySiteHash.Add("01", Insu_Code)
                    Else
                        '20120530 add by Rich, 大中要求加入同部位判斷
                        Dim row() As DataRow = _dtOrderRecord.Select("Is_Preadmission = 'N' AND Order_Effect_Date = '" & _ordeEffectDate.ToString("yyyy-MM-dd HH:mm:ss") & "' AND (Order_Status = 'A' OR Order_Status = 'C') ")
                        For Each singleRow As DataRow In row
                            If bodySiteHash.Contains(singleRow.Item("Body_Site_Code").ToString.Trim) Then
                                CType(bodySiteHash(singleRow.Item("Body_Site_Code").ToString.Trim), ArrayList).Add(singleRow.Item("Insu_Code").ToString.Trim)
                            Else
                                Dim _insuCode As New ArrayList
                                _insuCode.Add(singleRow.Item("Insu_Code").ToString.Trim)
                                bodySiteHash.Add(singleRow.Item("Body_Site_Code").ToString.Trim, _insuCode)
                            End If
                        Next
                    End If

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A37_ChkOnlyNewNhiCodeSetByClinic", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    '2013-06-25
                    If bodySiteHash.Keys.Count = 0 Then
                        Dim _orderCodeAL As New ArrayList
                        _orderCodeAL.Add(_triggerValueData)
                        bodySiteHash.Add(String.Empty, _orderCodeAL)
                    End If

                    For Each bodySiteCode As String In bodySiteHash.Keys
                        If bodySiteHash(bodySiteCode).Contains(_triggerValueData) Then
                            Dim result As String = compareExist(OperatorCode, ValueUnit, bodySiteHash(bodySiteCode), ValueData, "A37_ChkOnlyNewNhiCodeSetByClinic")
                            If result <> "" Then
                                If rtnDS Is Nothing Then
                                    rtnDS = New DataSet
                                End If
                                If Not rtnDS.Tables.Contains("rtnTable") Then
                                    rtnDS.Tables.Add("rtnTable")
                                End If
                                If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                    rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                                End If
                                rtnDS.Tables("rtnTable").Rows.Add()
                                rtnDS.Tables("rtnTable").Rows(0).Item("rtnValueData") = result
                            End If

                            If rtnData = False Then
                                Exit For
                            End If
                        End If
                    Next

                    CreateTXTLog("A37_ChkOnlyNewNhiCodeSetByClinic", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A37_ChkOnlyNewNhiCodeSetByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A37_ChkOnlyNewNhiCodeSetByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.85 開立新醫令健保碼併存檢核
    ''' </summary>
    ''' <returns>true：無任何執行錯誤，false則為執行錯誤</returns>
    ''' <remarks></remarks>
    Public Function A37_ChkOnlyNewNhiCodeSetByClinic() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _triggerSno As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerSno").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record").Copy
                    If Not _dtOrderRecord.Columns.Contains("Body_Site_Code") Then
                        _dtOrderRecord.Columns.Add("Body_Site_Code", GetType(String))
                    End If
                    If Not _dtOrderRecord.Columns.Contains("Specimen_Id") Then
                        _dtOrderRecord.Columns.Add("Specimen_Id", GetType(String))
                    End If
                    For Each _dr As DataRow In _dtOrderRecord.Rows
                        Dim _orderCode As String = _dr("Order_Code").ToString.Trim
                        Dim _nhiBodySiteCode As String = Me.GetNhiBodySiteCodeByOrderCode(_orderCode)
                        If _nhiBodySiteCode.Length <> 0 Then
                            _dr("Body_Site_Code") = _nhiBodySiteCode
                        End If
                    Next
                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    '-------------------------------------------------------------------------
                    Dim _isContainColSpecimenId As Boolean = _dtOrderRecord.Columns.Contains("Specimen_Id")
                    Dim _isContainColBodySiteCode As Boolean = _dtOrderRecord.Columns.Contains("Body_Site_Code")
                    Dim _isContainColIsPreadmission As Boolean = _dtOrderRecord.Columns.Contains("Is_Preadmission")
                    Dim _dicKeyList As New List(Of String)
                    Dim _dicGroup As New Dictionary(Of String, List(Of String))
                    For Each _dr As DataRow In _dtOrderRecord.Rows

                        Dim _insuCode As String = _dr("Insu_Code").ToString.Trim
                        Dim _orderStatus As String = _dr("Order_Status").ToString.Trim.ToUpper

                        If _insuCode <> _triggerValueData OrElse Not (_orderStatus = "A" OrElse _orderStatus = "C") Then Continue For

                        Dim _key As String = Me.AssembleKeyForA05A15A07A17(_dr)

                        If Not _dicKeyList.Contains(_key) Then
                            _dicKeyList.Add(_key)
                        End If
                    Next

                    For Each _dicKeyTmp As String In _dicKeyList
                        Dim _dicKey = _dicKeyTmp
                        Dim _orderCodeWithDateSpecimenBodySiteCode = _dtOrderRecordE _
                                                     .Where(Function(r) (r("Order_Status").ToString.Trim.ToUpper = "A" OrElse r("Order_Status").ToString.Trim.ToUpper = "C") AndAlso r("Is_Force").ToString.Trim = "N" AndAlso (If(_isContainColIsPreadmission, r("Is_Preadmission").ToString.Trim, "N") = "N") AndAlso Me.AssembleKeyForA05A15A07A17(r) = _dicKey AndAlso r("Order_Sno") <> _triggerSno) _
                                                     .Select(Function(r) r("Insu_Code").ToString.TrimEnd).Distinct

                        If _dicGroup.ContainsKey(_dicKey) Then
                            _dicGroup(_dicKey).AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                        Else
                            Dim _list As New List(Of String)
                            _list.AddRange(_orderCodeWithDateSpecimenBodySiteCode)
                            _dicGroup.Add(_dicKey, _list)
                        End If

                    Next
                    '-------------------------------------------------------------------------

                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("A07_ChkNhiCodeSetByClinic", False)
                        Return False
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(",")

                    For Each _dicItem In _dicGroup

                        Dim result As String = compareExist(OperatorCode, ValueUnit, New ArrayList(_dicItem.Value), ValueData, "A07_ChkNhiCodeSetByClinic")
                        If result <> "" Then
                            If rtnDS Is Nothing Then
                                rtnDS = New DataSet
                            End If
                            If Not rtnDS.Tables.Contains("rtnTable") Then
                                rtnDS.Tables.Add("rtnTable")
                            End If
                            If Not rtnDS.Tables("rtnTable").Columns.Contains("rtnValueData") Then
                                rtnDS.Tables("rtnTable").Columns.Add("rtnValueData")
                            End If

                            Dim _rtnRow As DataRow = rtnDS.Tables("rtnTable").NewRow
                            _rtnRow("rtnValueData") = result
                            rtnDS.Tables("rtnTable").Rows.Add(_rtnRow)
                        End If
                    Next

                    If _dicGroup.Count = 0 Then
                        rtnData = True
                    End If

                    CreateTXTLog("A07_ChkNhiCodeSetByClinic", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("A07_ChkNhiCodeSetByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("A07_ChkNhiCodeSetByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.86 每日執行數量檢核 - 藥劑部專用 for 小兒劑量(每公斤)
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H33_ChkChildTimesByDayForOPHPerKg() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Patient"}
            If isContainsDataTable(DataTableName) Then

                Dim Weight As Decimal = 30.0

                clearCommandString()
                clearCommandString()
                CommandStr.Append("SELECT * " & vbCrLf)
                CommandStr.Append("FROM   PUB_Config " & vbCrLf)
                CommandStr.Append("WHERE  Config_Name = 'OPH_Child_Weight' ")

                Dim DateDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                If DataSetUtil.IsContainsData(DateDS) Then
                    If DateDS.Tables(0).Rows(0).Item("Config_Value").ToString.Trim <> "" AndAlso DateDS.Tables(0).Rows(0).Item("Config_Value").ToString.Trim <> "0" Then
                        Weight = CDec(DateDS.Tables(0).Rows(0).Item("Config_Value"))
                    End If
                End If

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Patient", "Weight")
                If checkAllContainColumnIn(CheckTable) AndAlso pubreapi.Tables("Patient").Rows(0).Item("Weight").ToString.Trim <> "" AndAlso pubreapi.Tables("Patient").Rows(0).Item("Weight").ToString.Trim <> "0" Then
                    If CDec(pubreapi.Tables("Patient").Rows(0).Item("Weight")) <= Weight AndAlso pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim <> "" Then
                        Dim totalValueData As Decimal = CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim) * CDec(pubreapi.Tables("Patient").Rows(0).Item("Weight"))
                        pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData") = totalValueData

                        H20_ChkTimesByDayForOPH()
                        CreateTXTLog("H33_ChkChildTimesByDayForOPHPerKg", True)
                        Return True
                    Else
                        rtnData = True
                        CreateTXTLog("H33_ChkChildTimesByDayForOPHPerKg", True)
                        Return True
                    End If
                End If
            End If

            rtnData = True
            CreateTXTLog("H33_ChkChildTimesByDayForOPHPerKg", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H33_ChkChildTimesByDayForOPHPerKg", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.87 限小兒每次量/劑量- 藥劑部專用 for 小兒劑量(每公斤)
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H34_ChkChildDosagePerKg() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule", "Patient"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "Patient", "Weight")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Weight As Decimal = 30.0

                    clearCommandString()
                    clearCommandString()
                    CommandStr.Append("SELECT * " & vbCrLf)
                    CommandStr.Append("FROM   PUB_Config " & vbCrLf)
                    CommandStr.Append("WHERE  Config_Name = 'OPH_Child_Weight' ")

                    Dim DateDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    If DataSetUtil.IsContainsData(DateDS) Then
                        If DateDS.Tables(0).Rows(0).Item("Config_Value").ToString.Trim <> "" AndAlso DateDS.Tables(0).Rows(0).Item("Config_Value").ToString.Trim <> "0" Then
                            Weight = CDec(DateDS.Tables(0).Rows(0).Item("Config_Value"))
                        End If
                    End If

                    If pubreapi.Tables("Patient").Rows(0).Item("Weight").ToString.Trim <> "" AndAlso pubreapi.Tables("Patient").Rows(0).Item("Weight").ToString.Trim <> "0" Then
                        If CDec(pubreapi.Tables("Patient").Rows(0).Item("Weight")) <= Weight Then

                            Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                            Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                            Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                            Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                            Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                            Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                            _valueData = CDec(_valueData) * CDec(pubreapi.Tables("Patient").Rows(0).Item("Weight"))

                            Dim OrderInsuCode As String = ""
                            If _triggerItemCode = "A00004" Then
                                OrderInsuCode = "Order_Code"
                            ElseIf _triggerItemCode = "A00031" Then
                                OrderInsuCode = "Pharmacy_12_Code"
                            Else
                                OrderInsuCode = "Insu_Code"
                            End If

                            Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & _triggerValueData & "' AND (Order_Status = 'A' OR Order_Status = 'C') ")(0)

                            Dim Dosage As String = String.Empty
                            If OrderRecordRow.Table.Columns.Contains("Dosage") Then
                                Dosage = OrderRecordRow.Item("Dosage").ToString.Trim
                            End If

                            Select Case _operatorCode
                                Case "01"
                                    If Dosage > CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "04"
                                    If Dosage >= CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "03"
                                    If Dosage < CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "05"
                                    If Dosage <= CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "02"
                                    If Dosage = CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "06"
                                    If Dosage <> CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case Else
                                    rtnData = True
                            End Select
                            CreateTXTLog("H34_ChkChildDosagePerKg", True)
                            Return True
                        Else
                            rtnData = True
                            CreateTXTLog("H34_ChkChildDosagePerKg", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = True
            CreateTXTLog("H34_ChkChildDosagePerKg", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H34_ChkChildDosagePerKg", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.88 每日執行數量檢核 - 藥劑部專用 for 小兒劑量
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H35_ChkChildTimesByDayForOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Patient"}
            If isContainsDataTable(DataTableName) Then

                Dim Weight As Decimal = 30.0

                clearCommandString()
                clearCommandString()
                CommandStr.Append("SELECT * " & vbCrLf)
                CommandStr.Append("FROM   PUB_Config " & vbCrLf)
                CommandStr.Append("WHERE  Config_Name = 'OPH_Child_Weight' ")

                Dim DateDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                If DataSetUtil.IsContainsData(DateDS) Then
                    If DateDS.Tables(0).Rows(0).Item("Config_Value").ToString.Trim <> "" AndAlso DateDS.Tables(0).Rows(0).Item("Config_Value").ToString.Trim <> "0" Then
                        Weight = CDec(DateDS.Tables(0).Rows(0).Item("Config_Value"))
                    End If
                End If

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Patient", "Weight")
                If checkAllContainColumnIn(CheckTable) AndAlso pubreapi.Tables("Patient").Rows(0).Item("Weight").ToString.Trim <> "" AndAlso pubreapi.Tables("Patient").Rows(0).Item("Weight").ToString.Trim <> "0" Then
                    If CDec(pubreapi.Tables("Patient").Rows(0).Item("Weight")) <= Weight Then
                        H20_ChkTimesByDayForOPH()
                        CreateTXTLog("H35_ChkChildTimesByDayForOPH", True)
                        Return True
                    Else
                        rtnData = True
                        CreateTXTLog("H35_ChkChildTimesByDayForOPH", True)
                        Return True
                    End If
                End If
            End If

            rtnData = True
            CreateTXTLog("H35_ChkChildTimesByDayForOPH", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H35_ChkChildTimesByDayForOPH", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.89 限小兒每次量/劑量- 藥劑部專用 for 小兒劑量
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H36_ChkChildDosage() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record", "PUB_Rule", "Patient"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "Patient", "Weight")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Weight As Decimal = 30.0

                    clearCommandString()
                    clearCommandString()
                    CommandStr.Append("SELECT * " & vbCrLf)
                    CommandStr.Append("FROM   PUB_Config " & vbCrLf)
                    CommandStr.Append("WHERE  Config_Name = 'OPH_Child_Weight' ")

                    Dim DateDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    If DataSetUtil.IsContainsData(DateDS) Then
                        If DateDS.Tables(0).Rows(0).Item("Config_Value").ToString.Trim <> "" AndAlso DateDS.Tables(0).Rows(0).Item("Config_Value").ToString.Trim <> "0" Then
                            Weight = CDec(DateDS.Tables(0).Rows(0).Item("Config_Value"))
                        End If
                    End If

                    If pubreapi.Tables("Patient").Rows(0).Item("Weight").ToString.Trim <> "" AndAlso pubreapi.Tables("Patient").Rows(0).Item("Weight").ToString.Trim <> "0" Then
                        If CDec(pubreapi.Tables("Patient").Rows(0).Item("Weight")) <= Weight Then

                            Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                            Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                            Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                            Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                            Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                            Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                            Dim OrderInsuCode As String = ""
                            If _triggerItemCode = "A00004" Then
                                OrderInsuCode = "Order_Code"
                            ElseIf _triggerItemCode = "A00031" Then
                                OrderInsuCode = "Pharmacy_12_Code"
                            Else
                                OrderInsuCode = "Insu_Code"
                            End If

                            Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & _triggerValueData & "' AND (Order_Status = 'A' OR Order_Status = 'C') ")(0)

                            Dim Dosage As String = String.Empty
                            If OrderRecordRow.Table.Columns.Contains("Dosage") Then
                                Dosage = OrderRecordRow.Item("Dosage").ToString.Trim
                            End If

                            Select Case _operatorCode
                                Case "01"
                                    If Dosage > CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "04"
                                    If Dosage >= CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "03"
                                    If Dosage < CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "05"
                                    If Dosage <= CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "02"
                                    If Dosage = CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case "06"
                                    If Dosage <> CInt(_valueData) Then
                                        rtnData = True
                                    Else
                                        rtnData = False
                                    End If
                                Case Else
                                    rtnData = True
                            End Select
                            CreateTXTLog("H36_ChkChildDosage", True)
                            Return True
                        Else
                            rtnData = True
                            CreateTXTLog("H36_ChkChildDosage", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = True
            CreateTXTLog("H36_ChkChildDosage", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H36_ChkChildDosage", False)
            Return False
        End Try
    End Function

    '=====================================

    '''' <summary>
    '''' 1.19每X日執行次數檢核
    '''' "PUB_Rule", "ValueX"
    '''' "Order_Record", "Order_Data"
    '''' "Medical_Record", "Order_Date"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C01ChkTimesByDay() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明(PUB_Rule.ValueX)
    '    '        Order.Order_DataSet()
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql 基準日往前推X天
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    Dim DataTableName() As String = {"Order_Record", "PUB_Rule", "Medical_Record"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
    '        AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim tmpValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

    '            Dim ValueX As Integer = 0

    '            Try
    '                ValueX = Integer.Parse(tmpValueX)
    '                Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '                '多筆醫令
    '                Dim Order_Data(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
    '                For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
    '                    Order_Data(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
    '                Next

    '                Dim Count As Integer = 0

    '                Count = CombineSummationOrderTimesSQL(Order_Data, "", Order_Date.ToString("yyyy/M/d"), ValueX, OffTypeDD)

    '                rtnData = Count + 1
    '                rtnDataUnit = "次"
    '                '次數

    '                CreateTXTLog("C01ChkTimesByDay", True)

    '                Return True
    '            Catch ex As Exception

    '            End Try


    '        End If

    '    End If

    '    CreateTXTLog("C01ChkTimesByDay", False)

    '    Return False

    'End Function

    '''' <summary>
    '''' 1.20每X週執行次數檢核
    '''' "PUB_Rule", "ValueX"
    '''' "Order_Record", "Order_Data"
    '''' "Medical_Record", "Order_Date"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C02ChkTimesByWeek() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明(PUB_Rule.ValueX)
    '    '        Order.Order_DataSet()
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    Dim DataTableName() As String = {"Order_Record", "PUB_Rule", "Medical_Record"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
    '        AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim tmpValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

    '            Dim ValueX As Integer = 0

    '            Try
    '                ValueX = Integer.Parse(tmpValueX)

    '                Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '                '多筆醫令
    '                Dim Order_Data(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
    '                For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
    '                    Order_Data(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
    '                Next

    '                Dim Count As Integer = 0

    '                Count = CombineSummationOrderTimesSQL(Order_Data, "", Order_Date.ToString("yyyy/M/d"), ValueX, OffTypeWK)

    '                rtnData = Count + 1
    '                rtnDataUnit = "次"
    '                '次數

    '                CreateTXTLog("C02ChkTimesByWeek", True)

    '                Return True
    '            Catch ex As Exception

    '            End Try

    '        End If

    '    End If

    '    CreateTXTLog("C02ChkTimesByWeek", False)

    '    Return False

    'End Function

    '''' <summary>
    '''' 1.21每X月執行次數檢核
    '''' "PUB_Rule", "ValueX"
    '''' "Order_Record", "Order_Data"
    '''' "Medical_Record", "Order_Date"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C03ChkTimesByMonth() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明(PUB_Rule.ValueX)
    '    '        Order.Order_DataSet()
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    Dim DataTableName() As String = {"Order_Record", "PUB_Rule", "Medical_Record"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
    '        AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim tmpValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

    '            Dim ValueX As Integer = 0

    '            Try
    '                ValueX = Integer.Parse(tmpValueX)

    '                Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '                '多筆醫令
    '                Dim Order_Data(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
    '                For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
    '                    Order_Data(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
    '                Next

    '                Dim Count As Integer = 0

    '                Count = CombineSummationOrderTimesSQL(Order_Data, "", Order_Date.ToString("yyyy/M/d"), ValueX, OffTypeMM)

    '                rtnData = Count + 1
    '                rtnDataUnit = "次"
    '                '次數

    '                CreateTXTLog("C03ChkTimesByMonth", True)

    '                Return True
    '            Catch ex As Exception

    '            End Try

    '        End If

    '    End If

    '    CreateTXTLog("C03ChkTimesByMonth", False)

    '    Return False

    'End Function

    '''' <summary>
    '''' 1.22每X年執行次數檢核
    '''' "PUB_Rule", "ValueX"
    '''' "Order_Record", "Order_Data"
    '''' "Medical_Record", "Order_Date"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C04ChkTimesByYear() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明(PUB_Rule.ValueX)
    '    '        Order.Order_DataSet()
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    Dim DataTableName() As String = {"Order_Record", "PUB_Rule", "Medical_Record"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
    '        AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim tmpValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

    '            Dim ValueX As Integer = 0

    '            Try
    '                ValueX = Integer.Parse(tmpValueX)

    '                Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '                '多筆醫令
    '                Dim Order_Data(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
    '                For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
    '                    Order_Data(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
    '                Next

    '                Dim Count As Integer = 0

    '                Count = CombineSummationOrderTimesSQL(Order_Data, "", Order_Date.ToString("yyyy/M/d"), ValueX, OffTypeYY)

    '                rtnData = Count + 1
    '                rtnDataUnit = "次"
    '                '次數

    '                CreateTXTLog("C04ChkTimesByYear", True)

    '                Return True
    '            Catch ex As Exception

    '            End Try

    '        End If

    '    End If

    '    CreateTXTLog("C04ChkTimesByYear", False)

    '    Return False

    'End Function

    '''' <summary>
    '''' 1.23本週執行次數檢核
    '''' "Order_Record", "Order_Data"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C05ChkTimesByThisWeek() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明(PUB_Rule.ValueX)
    '    '        Order.Order_DataSet()
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    Dim DataTableName() As String = {"Order_Record"}
    '    'Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        'AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim ValueX As Integer = 0
    '            'CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), Integer)

    '            'SystemDate
    '            'Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '            '多筆醫令
    '            Dim Order_Data(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
    '            For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
    '                Order_Data(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
    '            Next

    '            Dim Count As Integer = 0

    '            Count = CombineSummationOrderTimesSQL(Order_Data, "", SystemDate.ToString("yyyy/M/d"), ValueX, OffTypeWK)

    '            rtnData = Count + 1
    '            rtnDataUnit = "次"
    '            '次數

    '            CreateTXTLog("C05ChkTimesByThisWeek", True)

    '            Return True

    '        End If

    '    End If

    '    CreateTXTLog("C05ChkTimesByThisWeek", False)

    '    Return False

    'End Function

    '''' <summary>
    '''' 1.24本月執行次數檢核
    '''' "Order_Record", "Order_Data"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C06ChkTimesByThisMonth() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明(PUB_Rule.ValueX)
    '    '        Order.Order_DataSet()
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    'Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
    '    Dim DataTableName() As String = {"Order_Record"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        'AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim ValueX As Integer = 0
    '            'CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), Integer)

    '            'SystemDate
    '            'Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '            '多筆醫令
    '            Dim Order_Data(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
    '            For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
    '                Order_Data(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
    '            Next

    '            Dim Count As Integer = 0

    '            Count = CombineSummationOrderTimesSQL(Order_Data, "", SystemDate.ToString("yyyy/M/d"), ValueX, OffTypeMM)

    '            rtnData = Count + 1
    '            rtnDataUnit = "次"
    '            '次數

    '            CreateTXTLog("C06ChkTimesByThisMonth", True)

    '            Return True

    '        End If

    '    End If

    '    CreateTXTLog("C06ChkTimesByThisMonth", False)

    '    Return False

    'End Function

    '''' <summary>
    '''' 1.25本年執行次數檢核
    '''' "Order_Record", "Order_Data"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C07ChkTimesByThisYear() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明(PUB_Rule.ValueX)
    '    '        Order.Order_DataSet()
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    Dim DataTableName() As String = {"Order_Record"}
    '    'Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        'AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim ValueX As Integer = 0
    '            'CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), Integer)

    '            'SystemDate
    '            'Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '            '多筆醫令
    '            Dim Order_Data(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
    '            For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
    '                Order_Data(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
    '            Next

    '            Dim Count As Integer = 0

    '            Count = CombineSummationOrderTimesSQL(Order_Data, "", SystemDate.ToString("yyyy/M/d"), ValueX, OffTypeYY)

    '            rtnData = Count + 1
    '            rtnDataUnit = "次"
    '            '次數

    '            CreateTXTLog("C07ChkTimesByThisYear", True)

    '            Return True

    '        End If
    '    End If

    '    CreateTXTLog("C07ChkTimesByThisYear", False)

    '    Return False

    'End Function

    '''' <summary>
    '''' 1.26總量次數檢核
    '''' "Order_Record", "Order_Data"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C09ChkTotalTimes() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明	Order.Order_DataSet
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    Dim DataTableName() As String = {"Order_Record"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim ValueX As Integer = 0
    '            'CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), Integer)

    '            'SystemDate
    '            'Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '            '多筆醫令
    '            Dim Order_Data(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
    '            For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
    '                Order_Data(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
    '            Next

    '            Dim Count As Integer = 0

    '            Count = CombineSummationOrderTimesSQL(Order_Data, "", "", 0, "")

    '            rtnData = Count + 1
    '            rtnDataUnit = "次"
    '            '次數

    '            CreateTXTLog("C09ChkTotalTimes", True)

    '            Return True

    '        End If

    '    End If

    '    CreateTXTLog("C09ChkTotalTimes", False)

    '    Return False

    'End Function

    '''' <summary>
    '''' 1.27-1單次醫令總量次數檢核
    '''' "Order_Record", "Order_Data"
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function C10ChkTimesByEachOrder() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明	Order.Order_DataSet
    '    '處理邏輯	front-end: 20090812_limit_times_Check.sql
    '    '        當計算出結果時, rtnData = 計算出的次數
    '    '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------

    '    cleanReturnInfo()

    '    Dim DataTableName() As String = {"Order_Record"}
    '    If isContainsDataTable(DataTableName) Then

    '        Dim CheckTable As DataTable = getCheckTable()
    '        AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

    '        If checkAllContainColumnIn(CheckTable) Then
    '            Dim ValueX As Integer = 0
    '            'CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), Integer)

    '            'SystemDate
    '            'Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)

    '            '多筆醫令
    '            Dim Order_Data(0) As String
    '            Order_Data(0) = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Order_Code"), String).Trim

    '            Dim Count As Integer = 0

    '            Count = CombineSummationOrderTimesSQL(Order_Data, "", "", 0, "")

    '            rtnData = Count + 1
    '            rtnDataUnit = "次"
    '            '次數

    '            CreateTXTLog("C10ChkTimesByEachOrder", True)

    '            Return True

    '        End If

    '    End If

    '    CreateTXTLog("C10ChkTimesByEachOrder", False)

    '    Return False

    'End Function

    ''' <summary>
    ''' 1.28醫師專科檢核 1筆
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Medical_Record", "Doctor_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function D01ChkDrLicense() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	MedicalRecord.Doctor_Code
        '        PUB_Rule.OperatorCode(規則運算子)
        '        PUB_Rule.ValueData(規則設定值)
        '處理邏輯	1.	運算子實作 “(In)”, “(Not In)” 的狀況
        '2.	運算子左右兩端為Doctor_Code 及 ValueData
        '3.	當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
        '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then

                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim Doctor_Code As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Doctor_Code"), String).Trim

                Dim RowCount As Integer = pubreapi.Tables("PUB_Rule").Rows.Count - 1
                Dim ValueData(RowCount) As String
                For i As Integer = 0 To RowCount
                    ValueData(i) = CType(pubreapi.Tables("PUB_Rule").Rows(i).Item("ValueData"), String).Trim
                Next

                If OperatorCode.Equals(Operator_In) Then
                    If compareIn(Doctor_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("D01ChkDrLicense", True)

                        Return True
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_In) Then
                    If Not compareIn(Doctor_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("D01ChkDrLicense", True)

                        Return True
                    End If
                End If

            End If

        End If

        CreateTXTLog("D01ChkDrLicense", False)

        rtnData = False
        Return False

    End Function

    ''' <summary>
    ''' 1.29看診醫師檢核 1筆
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Medical_Record", "Doctor_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function D02ChkDrNo() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Medical_Record.Doctor_Code
        '        PUB_Rule.OperatorCode(規則運算子)
        '        PUB_Rule.ValueData(規則設定值)
        '處理邏輯	1.	運算子實作 “(In)”, “(Not In)” 的狀況
        '2.	運算子左右兩端為Nhi_Code 及 ValueData
        '3.	當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
        '回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then

                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim Doctor_Code As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Doctor_Code"), String).Trim
                Dim RowCount As Integer = pubreapi.Tables("PUB_Rule").Rows.Count - 1
                Dim ValueData(RowCount) As String
                For i As Integer = 0 To RowCount
                    ValueData(i) = CType(pubreapi.Tables("PUB_Rule").Rows(i).Item("ValueData"), String).Trim
                Next

                If OperatorCode.Equals(Operator_In) Then
                    If compareIn(Doctor_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("D02ChkDrNo", True)


                        Return True
                    Else
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_In) Then
                    If Not compareIn(Doctor_Code, ValueData) Then
                        rtnData = True

                        CreateTXTLog("D02ChkDrNo", True)

                        Return True
                    Else
                    End If
                End If

            End If

        End If

        rtnData = False

        CreateTXTLog("D02ChkDrNo", False)

        Return False

    End Function

    Public Function D14_ChkDrKind() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Doctor_Code As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Doctor_Code").ToString.Trim
                    Dim Order_Date As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim

                    If ValueDataStr = "" Then
                        rtnData = False
                        CreateTXTLog("D01_ChkDrLicense", False)
                        Return True
                    End If

                    Dim ValueData() As String = ValueDataStr.Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)
                    Dim Check_Doctor_Code As String = ""

                    If TriggerItemCode = "A00004" Then
                        Dim tempRow() As DataRow = pubreapi.Tables("Order_Record").Select("Order_Code = '" & TriggerValueData & "'")
                        If tempRow.Count <> 0 Then
                            Check_Doctor_Code = tempRow(0).Item("Order_Doctor_Code").ToString.Trim
                        Else
                            Check_Doctor_Code = Doctor_Code
                        End If
                    ElseIf TriggerItemCode = "A00006" Then
                        Dim tempRow() As DataRow = pubreapi.Tables("Order_Record").Select("Insu_Code = '" & TriggerValueData & "'")
                        If tempRow.Count <> 0 Then
                            Check_Doctor_Code = tempRow(0).Item("Order_Doctor_Code").ToString.Trim
                        Else
                            Check_Doctor_Code = Doctor_Code
                        End If
                    ElseIf TriggerItemCode = "A00031" Then
                        Dim tempRow() As DataRow = pubreapi.Tables("Order_Record").Select("Pharmacy_12_Code = '" & TriggerValueData & "'")
                        If tempRow.Count <> 0 Then
                            Check_Doctor_Code = tempRow(0).Item("Order_Doctor_Code").ToString.Trim
                        Else
                            Check_Doctor_Code = Doctor_Code
                        End If
                    Else
                        Check_Doctor_Code = Doctor_Code
                    End If

                    clearCommandString()
                    'FPW202K PDrL1 on OMR.Doctor_Code COLLATE Chinese_Taiwan_Stroke_BIN  = SUBSTRING(PDrL1.WCODE,5,6)  COLLATE Chinese_Taiwan_Stroke_BIN and  PDrL1.kind COLLATE Chinese_Taiwan_Stroke_BIN=PC1.Config_Value COLLATE Chinese_Taiwan_Stroke_BIN
                    'CommandStr.Append(" Select PDrL1.PAPERNO as  License_Dept_Code ")
                    'CommandStr.Append(" From FPW202K  as PDrL1")
                    'CommandStr.Append(" inner join  PUB_Config as PC1 on PC1.Config_Name ='PUB_License_Anes' and PC1.Config_Value COLLATE Chinese_Taiwan_Stroke_BIN=PDrL1.KIND  COLLATE Chinese_Taiwan_Stroke_BIN and '" & Order_Date & "' between PDrL1.VALID_DATE_FM and isnull(PDrL1.VALID_DATE_TO,'9999/12/31') ")
                    'CommandStr.Append(" Where SUBSTRING(PDrL1.WCODE,5,6)  COLLATE Chinese_Taiwan_Stroke_BIN = '").Append(Check_Doctor_Code).Append("' COLLATE Chinese_Taiwan_Stroke_BIN and PDrL1.kind COLLATE Chinese_Taiwan_Stroke_BIN=PC1.Config_Value COLLATE Chinese_Taiwan_Stroke_BIN")


                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT RTRIM(Kind) AS Kind " & vbCrLf)
                    var1.AppendFormat("FROM   FPW202K " & vbCrLf)
                    var1.AppendFormat("WHERE  ( Kind IS NOT NULL " & vbCrLf)
                    var1.AppendFormat("          OR Kind <> '' ) " & vbCrLf)
                    var1.AppendFormat("       AND WCODE = '0000' + '{0}' " & vbCrLf, Check_Doctor_Code)
                    var1.AppendFormat("       AND ( '{0}' BETWEEN CASE " & vbCrLf, Order_Date)
                    var1.AppendFormat("                                   WHEN VALID_DATE_FM IS NULL " & vbCrLf)
                    var1.AppendFormat("                                         OR VALID_DATE_FM = '' THEN '2010-1-1' " & vbCrLf)
                    var1.AppendFormat("                                   ELSE VALID_DATE_FM " & vbCrLf)
                    var1.AppendFormat("                                 END AND CASE " & vbCrLf)
                    var1.AppendFormat("                                           WHEN VALID_DATE_TO IS NULL " & vbCrLf)
                    var1.AppendFormat("                                                 OR VALID_DATE_TO = '' THEN '2099-1-1' " & vbCrLf)
                    var1.AppendFormat("                                           ELSE VALID_DATE_TO " & vbCrLf)
                    var1.AppendFormat("                                         END ) " & vbCrLf)

                    CommandStr = var1

                    Dim tempDS As DataSet = dynamicQuery(CommandStr.ToString)

                    Dim tempDtE = tempDS.Tables(0).AsEnumerable

                    Select Case OperatorCode
                        Case "02"
                            If tempDtE.Any(Function(r) ValueData.Contains(r("Kind"))) Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                            CreateTXTLog("D14_ChkDrKind", True)
                            Return True
                        Case "06"
                            If Not tempDtE.Any(Function(r) ValueData.Contains(r("Kind"))) Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                            CreateTXTLog("D14_ChkDrKind", True)
                            Return True
                        Case Else
                            rtnData = False
                            CreateTXTLog("D14_ChkDrKind", True)
                            Return True
                    End Select

                End If
            End If
            rtnData = False
            CreateTXTLog("D14_ChkDrKind", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("D14_ChkDrKind", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.30牙位檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Order_Record", "Body_Site_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function F01ChkToothNumber() As Boolean
        '-----------------------------------------------------------------------
        'Dent_Order.OrderRecord
        'PUB_Rule.OperatorCode(規則運算子)
        'PUB_Rule.ValueData(規則設定值)
        '1.	運算子實作 “(In)”, “(Not In)” 的狀況
        '2.	運算子左右兩端為Nhi_Code 及 ValueData
        '3.	當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Site_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then

                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim OrderRecord As String = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Body_Site_Code"), String).Trim
                Dim RowCount As Integer = pubreapi.Tables("PUB_Rule").Rows.Count - 1
                Dim ValueData(RowCount) As String
                For i As Integer = 0 To RowCount
                    ValueData(i) = CType(pubreapi.Tables("PUB_Rule").Rows(i).Item("ValueData"), String).Trim
                Next

                If OperatorCode.Equals(Operator_In) Then
                    If compareIn(OrderRecord, ValueData) Then
                        rtnData = True

                        CreateTXTLog("F01ChkToothNumber", True)

                        Return True
                    Else
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_In) Then
                    If Not compareIn(OrderRecord, ValueData) Then
                        rtnData = True

                        CreateTXTLog("F01ChkToothNumber", True)

                        Return True
                    Else
                    End If
                End If

            End If

        End If

        rtnData = False

        CreateTXTLog("F01ChkToothNumber", False)

        Return False

    End Function

    ''' <summary>
    ''' 1.31牙位象限檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueData"
    ''' "Order_Record", "Body_Site_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function F02ChkToothQuadrant() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Dent_Order.OrderRecord
        '        PUB_Rule.OperatorCode(規則運算子)
        '        PUB_Rule.ValueData(規則設定值)
        '處理邏輯	1.	運算子實作 “(In)”, “(Not In)” 的狀況
        '2.	運算子左右兩端為Nhi_Code 及 ValueData
        '3.	當符合條件檢核時，rtnData = ‘true’，其他rtnData=’false’。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Site_Code")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

            If checkAllContainColumnIn(CheckTable) Then

                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim OrderRecord As String = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Body_Site_Code"), String).Trim
                'Dim RowCount As Integer = 
                Dim ValueData(pubreapi.Tables("PUB_Rule").Rows.Count - 1) As String
                For i As Integer = 0 To (pubreapi.Tables("PUB_Rule").Rows.Count - 1)
                    ValueData(i) = CType(pubreapi.Tables("PUB_Rule").Rows(i).Item("ValueData"), String).Trim
                Next

                If OperatorCode.Equals(Operator_In) Then
                    If compareIn(OrderRecord, ValueData) Then
                        rtnData = True

                        CreateTXTLog("F02ChkToothQuadrant", True)

                        Return True
                    Else
                    End If
                ElseIf OperatorCode.Equals(Operator_Not_In) Then
                    If Not compareIn(OrderRecord, ValueData) Then
                        rtnData = True

                        CreateTXTLog("F02ChkToothQuadrant", True)

                        Return True
                    Else
                    End If
                End If

            End If

        End If

        rtnData = False

        CreateTXTLog("F02ChkToothQuadrant", False)

        Return False

    End Function

    ''' <summary>
    ''' 1.32乳牙牙位檢核
    ''' "Order_Record", "Body_Site_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function F03ChkBabyTooth() As Boolean
        '-----------------------------------------------------------------------
        '處理邏輯	1.	檢查Order Body_Site_Code中對應觸發條件醫令內所有的牙位是否>’50’
        '， 全部通過檢核rtnData= ‘true’，其他rtnData=’false’。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Site_Code")

            If checkAllContainColumnIn(CheckTable) Then
                Dim Judge As Boolean = True
                For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                    Dim Body_Site_Code As String = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Body_Site_Code"), String).Trim
                    If Not Body_Site_Code.Equals("99") Then
                        If Body_Site_Code.CompareTo("50") <= 0 Then
                            Judge = False
                        End If
                    End If
                Next

                rtnData = Judge

                CreateTXTLog("F03ChkBabyTooth", True)

                Return True

            End If

        End If

        rtnData = False

        CreateTXTLog("F03ChkBabyTooth", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.33恆牙牙位檢核
    ''' "Order_Record", "Body_Site_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function F04ChkPermanentTooth() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Dent_Order.OrderRecord
        '1.	檢查OrderRecord中對應觸發條件醫令內所有的牙位是否<’50’， 全部通過檢核rtnData= ‘true’，其他rtnData=’false’。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Site_Code")

            If checkAllContainColumnIn(CheckTable) Then
                Dim Judge As Boolean = True
                For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                    Dim Body_Site_Code As String = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Body_Site_Code"), String).Trim
                    If Not Body_Site_Code.Equals("99") Then
                        If Body_Site_Code.CompareTo("50") >= 0 Then
                            Judge = False
                        End If
                    End If
                Next

                rtnData = Judge

                CreateTXTLog("F04ChkPermanentTooth", True)

                Return True

            End If

        End If

        rtnData = False

        CreateTXTLog("F04ChkPermanentTooth", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.34牙位第2碼檢核
    ''' "Order_Record", "Body_Site_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function F05Chk2ndToothNo() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Dent_Order.OrderRecord
        '處理邏輯	1.檢查OrderRecord中對應觸發條件醫令內所有的牙位第2碼是否<’50’， 
        '           全部通過檢核rtnData= ‘true’，其他rtnData=’false’。
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Body_Site_Code")

            If checkAllContainColumnIn(CheckTable) Then

                Dim Body_Site_Code As String = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Body_Site_Code"), String).Trim

                If Body_Site_Code.Length > 1 Then
                    rtnData = Body_Site_Code.Substring(1, 1)
                End If

                CreateTXTLog("F05Chk2ndToothNo", True)

                Return True

            End If

        End If

        rtnData = False

        CreateTXTLog("F05Chk2ndToothNo", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.35最近一次完成檢驗項目X報告結果檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueX"
    ''' "Medical_Record", "Chart_No"
    ''' "Medical_Record", "Order_Date"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function G01ChkLastExamReportData() As Boolean
        '-----------------------------------------------------------------------
        'ValueX (醫令碼/健保碼)
        'Medical_Record.Chart_No()
        'Medical_Record.Order_Date()
        '1.	當 [>=,>,=,<,<=] 發生時, select [Test_Value] from EMR_Examine_Num_Report where Chart_No = 
        '   {Chart_No} and Item_Code = 'X' and Finish_Date is not null (限制在數值型報告結果查詢)
        '2.	當 [=, exist] 發生時, 需要 union 包括 "EMR_Exmaine_State_Report" (數值型及文字型報告結果)
        '若有 [Test_Value] assign to rtnData，[Finish_Date] assign to rtnData1
        '若沒有 [Test_Value]， assign “Nothing” to rtnData
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")


            If checkAllContainColumnIn(CheckTable) Then

                Dim SubSetNoUnion() As String = {">=", ">", "<", "<="}
                Dim SubSetUnion() As String = {"=", Operator_Exist}

                Dim ValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim
                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim Chart_No As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No"), String).Trim
                Dim OpdVisitDate As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)
                'Opd_Visit_Date


                clearCommandString()
                If compareIn(OperatorCode, SubSetNoUnion) Then
                    CommandStr.Append("select top 1 Test_Value as Value, Report_Time from EMR_Examine_Num_Report where Chart_No = '").Append(Chart_No).Append("' ")
                    CommandStr.Append("and Item_Code = '").Append(ValueX).Append("' and Report_Time is not null").AppendLine(" ")
                ElseIf compareIn(OperatorCode, SubSetUnion) Then
                    CommandStr.Append("select top 1 Test_Value as Value, Report_Time from EMR_Examine_Num_Report where Chart_No = '").Append(Chart_No).Append("' ")
                    CommandStr.Append("and Item_Code = '").Append(ValueX).Append("' and Report_Time is not null ").AppendLine(" ")
                    CommandStr.Append("union select top 1 CONVERT(nvarchar(100), Rerport_Text) as Value, Report_Time from EMR_Examine_State_Report where Chart_No = '").Append(Chart_No).Append("' ")
                    CommandStr.Append("and Item_Code = '").Append(ValueX).Append("' and Report_Time is not null ").AppendLine(" ")
                End If

                '若有 [Test_Value] assign to rtnData，[Finish_Date] assign to rtnData1
                '若沒有 [Test_Value]， assign “Nothing” to rtnData

                Dim ResultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)

                If DataSetUtil.IsContainsData(ResultDS) Then

                    rtnData = ResultDS.Tables(0).Rows(0).Item("Value")

                    Dim tmprtnDS As New DataSet
                    Dim tmprtnDT As DataTable = DataSetUtil.GenDataTable(rtnDSName, Nothing, rtnDSColumn, rtnDSColumnType)
                    Dim tmprtnDR As DataRow = tmprtnDT.NewRow
                    tmprtnDR.Item(rtnDSColumn(0)) = CType(ResultDS.Tables(0).Rows(0).Item("Report_Time"), DateTime).ToString("yyyy/MM/dd hh:mm:ss")
                    tmprtnDT.Rows.Add(tmprtnDR)
                    tmprtnDS.Tables.Add(tmprtnDT)
                    rtnDS = tmprtnDS


                    CreateTXTLog("G01ChkLastExamReportData", True)

                    Return True
                Else
                    rtnData = Nothing

                    rtnDS = Nothing

                    CreateTXTLog("G01ChkLastExamReportData", True)

                    Return True

                End If

            End If
        End If

        rtnData = Nothing
        rtnDS = Nothing

        CreateTXTLog("G01ChkLastExamReportData", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.36 X月內,完成檢驗項目Y報告結果檢核
    ''' "PUB_Rule", "OperatorCode"
    ''' "PUB_Rule", "ValueX"
    ''' "PUB_Rule", "ValueY"
    ''' "Medical_Record", "Chart_No"
    ''' "Medical_Record", "Order_Date"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function G02ChkSpecificExamReportData() As Boolean
        '-----------------------------------------------------------------------
        'ValueX (Integer 月)
        'ValueY(醫令碼 / 健保碼)
        'Medical_Record.Opd_Visit_Date(基準日)
        '1.	當 [>=,>,<,<=] 發生時, select [Test_Value] from EMR_Examine_Num_Report where Chart_No = 
        '   {Chart_No} and Item_Code = {Y} and Report_Time is not null and datediff(m, Report_Time, Opd_Visit_Date) > X (限制在數值型報告結果查詢)
        '2.	當 [=,exist] 發生時, 需要 union "EMR_Exmaine_State_Report"  (數值型及文字型報告結果)
        '若有 [Test_Value] assign to rtnData，[Finish_Date] assign to rtnData1
        '若沒有 [Test_Value]， assign “Nothing” to rtnData
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueY")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")


            If checkAllContainColumnIn(CheckTable) Then

                Dim SubSetNoUnion() As String = {">=", ">", "<", "<="}
                Dim SubSetUnion() As String = {"=", Operator_Exist}

                Dim ValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim
                Dim ValueY As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueY"), String).Trim

                Dim OperatorCode As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode"), String).Trim
                Dim Chart_No As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No"), String).Trim
                Dim OpdVisitDate As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)
                'Opd_Visit_Date


                clearCommandString()
                If compareIn(OperatorCode, SubSetNoUnion) Then
                    CommandStr.Append("select Test_Value as Value, Report_Time from EMR_Examine_Num_Report where Chart_No = '").Append(Chart_No).Append("' ")
                    CommandStr.Append("and Item_Code = '").Append(ValueY).Append("' and Report_Time is not null and datediff(m, Report_Time, ").Append(OpdVisitDate.ToString("yyyy/M/d")).Append(") > ").Append(ValueX).AppendLine(" ")
                ElseIf compareIn(OperatorCode, SubSetUnion) Then
                    CommandStr.Append("select Test_Value as Value, Report_Time from EMR_Examine_Num_Report where Chart_No = '").Append(Chart_No).Append("' ")
                    CommandStr.Append("and Item_Code = '").Append(ValueY).Append("' and Report_Time is not null and datediff(m, Report_Time, ").Append(OpdVisitDate.ToString("yyyy/M/d")).Append(") > ").Append(ValueX).AppendLine(" ")
                    CommandStr.Append("union select CONVERT(nvarchar(100), Rerport_Text) as Value, Report_Time from EMR_Examine_State_Report where Chart_No = '").Append(Chart_No).Append("' ")
                    CommandStr.Append("and Item_Code = '").Append(ValueY).Append("' and Report_Time is not null and datediff(m, Report_Time, ").Append(OpdVisitDate.ToString("yyyy/M/d")).Append(") > ").Append(ValueX).AppendLine(" ")
                End If

                '若有 [Test_Value] assign to rtnData，[Finish_Date] assign to rtnData1
                '若沒有 [Test_Value]， assign “Nothing” to rtnData

                Dim ResultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)

                If DataSetUtil.IsContainsData(ResultDS) Then

                    rtnData = ResultDS.Tables(0).Rows(0).Item("Value")
                    'rtnData1 = ResultDS.Tables(0).Rows(0).Item("Report_Time")

                    Dim tmprtnDS As New DataSet
                    Dim tmprtnDT As DataTable = DataSetUtil.GenDataTable(rtnDSName, Nothing, rtnDSColumn, rtnDSColumnType)
                    Dim tmprtnDR As DataRow = tmprtnDT.NewRow
                    tmprtnDR.Item(rtnDSColumn(0)) = CType(ResultDS.Tables(0).Rows(0).Item("Report_Time"), DateTime).ToString("yyyy/MM/dd hh:mm:ss")
                    tmprtnDT.Rows.Add(tmprtnDR)
                    tmprtnDS.Tables.Add(tmprtnDT)
                    rtnDS = tmprtnDS

                    CreateTXTLog("G02ChkSpecificExamReportData", True)

                    Return True
                Else
                    rtnData = Nothing
                    rtnDS = Nothing

                    CreateTXTLog("G02ChkSpecificExamReportData", True)

                    Return True

                End If

            End If
        End If

        rtnData = Nothing
        rtnDS = Nothing

        CreateTXTLog("G02ChkSpecificExamReportData", False)

        Return False

    End Function

#Region " #### 表格未開立 ####"

    '''' <summary>
    '''' 1.37 慢箋檢核
    '''' 表格尚未開立??
    '''' </summary>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Public Function H01ChkRefillPrescription() As Boolean
    '    '-----------------------------------------------------------------------
    '    '參數說明	Medical_Record.Chart_No
    '    '處理邏輯	Select dd = count(*) from OPH_XXXXX.Chart_No (還未開) where Chart_No = Chart_No。

    '    '若 dd>0 是有找> assign true to rtnData  rtnData= ‘true’，其他rtnData=’false’。
    '    '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
    '    '-----------------------------------------------------------------------
    '        cleanReturnInfo()
    '    'Dim DataTableName() As String = {"Medical_Record"}
    '    'If isContainsDataTable(DataTableName) Then

    '    '    Dim CheckTable As DataTable = getCheckTable()
    '    '    AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")

    '    '    If checkAllContainColumnIn(CheckTable) Then

    '    '        Dim Chart_No As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No"), String)

    '    '        Try

    '    '            clearCommandString()
    '    '            CommandStr.Append("Select Cnt = count(*) from OPH_Doubt_Addict  where Chart_No = '").Append(Chart_No).Append("'")
    '    '            Dim ResultDS As DataSet = dynamicQuery(CommandStr.ToString)
    '    '            If DataSetUtil.IsContainsData(ResultDS) Then
    '    '                If CType(ResultDS.Tables(0).Rows(0).Item("Cnt"), Integer) > 0 Then
    '    '                    rtnData = True
    '    '                Else
    '    '                    rtnData = False
    '    '                End If

    '    '            End If

    '    '            Return True

    '    '        Catch ex As Exception
    '    '            rtnData = False
    '    '            Return False
    '    '        End Try

    '    '    End If

    '    'End If

    '    rtnData = False
    '    Return False
    'End Function

#End Region

    ''' <summary>
    ''' 1.38疑似成癮檢核
    '''  "Medical_Record", "Chart_No"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H02ChkDoubtDrugAddict() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Medical_Record.Chart_No
        '處理邏輯	Select dd = count(*) from OPH_Doubt_Addict  where Chart_No = Chart_No。

        '若 dd>0 是有找> assign true to rtnData  rtnData= ‘true’，其他rtnData=’false’。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Medical_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")

            If checkAllContainColumnIn(CheckTable) Then

                Dim Chart_No As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No"), String)

                Try

                    clearCommandString()
                    CommandStr.Append("Select count(*) as Cnt from OPH_Doubt_Addicte where Chart_No = '").Append(Chart_No).Append("'")
                    Dim ResultDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    If DataSetUtil.IsContainsData(ResultDS) Then
                        If CType(ResultDS.Tables(0).Rows(0).Item("Cnt"), Integer) > 0 Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If

                    End If

                    CreateTXTLog("H02ChkDoubtDrugAddict", True)

                    Return True

                Catch ex As Exception
                    rtnData = False
                    Return False
                End Try

            End If

        End If

        CreateTXTLog("H02ChkDoubtDrugAddict", False)

        rtnData = False
        Return False
    End Function

    ''' <summary>
    ''' 1.39限開立天數檢核
    ''' "Pharmacy", "OrderRecord"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H03ChkOrderDays() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Pharmacy.OrderRecord
        '處理邏輯	Select dd = sum(Days) from OMO_Order_Record where Order_Code = '觸發的Order_Code'
        '若是有找到 -> assign dd  to rtnData ，其他rtnData=nothing。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

            If checkAllContainColumnIn(CheckTable) Then

                Try
                    Dim Order_Code(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
                    For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                        Order_Code(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
                    Next

                    Dim Count As Integer = 0
                    Count = CombineSummationColumnSQL(Order_Code, "Days")

                    rtnData = Count
                    rtnDataUnit = "日"

                    CreateTXTLog("H03ChkOrderDays", True)

                    Return True

                Catch ex As Exception
                    rtnData = Nothing

                    CreateTXTLog("H03ChkOrderDays", False)

                    Return False
                End Try

            End If

        End If

        rtnData = Nothing

        CreateTXTLog("H03ChkOrderDays", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.40限累計天數檢核(計算次數)
    ''' "Pharmacy", "OrderRecord"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H04ChkAccumulatedDays() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Pharmacy.OrderRecord
        '處理邏輯	Select dd = sum(Days) from OMO_Order_Record where Order_Code = '觸發的Order_Code'

        '        OMO_Order_Record(union)
        'OMO_Meidcation_History (majorly for 抗生素)

        '若是有找到 -> assign dd  to rtnData ，其他rtnData=nothing。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

            If checkAllContainColumnIn(CheckTable) Then

                Try
                    Dim Order_Code(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
                    For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                        Order_Code(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
                    Next

                    Dim Count As Integer = 0

                    Count = CombineSummationMedicalDaysSQL(Order_Code, "", "", 0, "")

                    rtnData = Count
                    rtnDataUnit = "日"

                    CreateTXTLog("H04ChkAccumulatedDays", True)

                    Return True

                Catch ex As Exception
                    rtnData = Nothing

                    CreateTXTLog("H04ChkAccumulatedDays", False)

                    Return False
                End Try

            End If

        End If

        rtnData = Nothing

        CreateTXTLog("H04ChkAccumulatedDays", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.41限總量檢核
    ''' "Pharmacy", "OrderRecord"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H11ChkAccumulatedQty() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Pharmacy.OrderRecord
        '處理邏輯	Select dd = sum(TQty) from OMO_Order_Record where Order_Code = '觸發的Order_Code'

        '若是有找到 -> assign dd  to rtnData ，其他rtnData=nothing。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Order_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty_Unit")

            If checkAllContainColumnIn(CheckTable) Then

                Try
                    Dim Order_Code(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
                    For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                        Order_Code(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
                    Next

                    Dim Qty As Integer = 0

                    Qty = CombineSummationColumnSQL(Order_Code, "Tqty")

                    rtnData = Qty
                    rtnDataUnit = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Tqty_Unit"), String).Trim

                    CreateTXTLog("H11ChkAccumulatedQty", True)

                    Return True

                Catch ex As Exception
                    rtnData = Nothing

                    CreateTXTLog("H11ChkAccumulatedQty", False)

                    Return False
                End Try

            End If

        End If

        rtnData = Nothing

        CreateTXTLog("H11ChkAccumulatedQty", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.42限累積劑量,每X天檢核
    ''' "PUB_Rule", "ValueX"
    ''' "Pharmacy", "OrderRecord"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H12ChkAccumulatedQtyByDays() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	PUB_Rule.ValueX
        '        Pharmacy.OrderRecord()
        '處理邏輯	Select dd = sum(Days) from OMO_Order_Record where Order_Code = '觸發的Order_Code'

        '        OMO_Order_Record(union)
        '        OMO_Meidcation_History()

        '        開立日起算X日()
        '        以今日回推X日()

        '若是有找到 -> assign dd  to rtnData ，其他rtnData=nothing。
        '計算單位 assign to rtnDataUint。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"PUB_Rule", "Order_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

            If checkAllContainColumnIn(CheckTable) Then


                Try
                    Dim ValueX As Integer = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), Integer)

                    Dim Order_Code(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
                    For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                        Order_Code(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
                    Next


                    '        OMO_Order_Record(union)
                    'OMO_Meidcation_History (majorly for 抗生素)

                    Dim Count As Integer = 0

                    Count = CombineSummationMedicalDaysSQL(Order_Code, "", SystemDate.ToString("yyyy/M/d"), ValueX, OffTypeDD)

                    rtnData = Count
                    rtnDataUnit = "日"

                    CreateTXTLog("H12ChkAccumulatedQtyByDays", True)

                    Return True

                Catch ex As Exception
                    rtnData = Nothing

                    CreateTXTLog("H12ChkAccumulatedQtyByDays", False)

                    Return False
                End Try

            End If

        End If

        rtnData = Nothing

        CreateTXTLog("H12ChkAccumulatedQtyByDays", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.43限累積劑量,每X月檢核
    ''' "PUB_Rule", "ValueX"
    ''' "Pharmacy", "OrderRecord"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H13ChkAccumulatedQtyByMonths() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	PUB_Rule.ValueX
        '        Pharmacy.OrderRecord()
        '處理邏輯	Select dd = sum(Days) from OMO_Order_Record where Order_Code = '觸發的Order_Code'

        '        OMO_Order_Record(union)
        '        OMO_Meidcation_History()

        '        開立日起算X日()
        '        以今日回推X日()

        '若是有找到 -> assign dd  to rtnData ，其他rtnData=nothing。
        '計算單位 assign to rtnDataUint。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"PUB_Rule", "Order_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

            If checkAllContainColumnIn(CheckTable) Then

                Try
                    Dim ValueX As Integer = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), Integer)

                    Dim Order_Code(pubreapi.Tables("Order_Record").Rows.Count - 1) As String
                    For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                        Order_Code(i) = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
                    Next


                    '        OMO_Order_Record(union)
                    'OMO_Meidcation_History (majorly for 抗生素)

                    Dim Count As Integer = 0

                    Count = CombineSummationMedicalDaysSQL(Order_Code, "", SystemDate.ToString("yyyy/M/d"), ValueX, OffTypeMM)

                    rtnData = Count
                    rtnDataUnit = "日"

                    CreateTXTLog("H13ChkAccumulatedQtyByMonths", True)

                    Return True

                Catch ex As Exception
                    rtnData = Nothing

                    CreateTXTLog("H13ChkAccumulatedQtyByMonths", False)

                    Return False
                End Try

            End If

        End If

        rtnData = Nothing

        CreateTXTLog("H13ChkAccumulatedQtyByMonths", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.44慢性病檢核
    ''' "Diagnosis", "Icd_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function K03ChkChronicDisease() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Diagnosis.Icd_Code
        '處理邏輯	Select dd = count(*) from PUB_Disease where icd9 = Icd_Code   and Is_Chronic_Disease=’Y’ 。

        '若 dd>0 是有找> assign true to rtnData  rtnData= ‘true’，其他rtnData=’false’。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Diagnosis"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")

            If checkAllContainColumnIn(CheckTable) Then

                Dim Icd_Code As String = CType(pubreapi.Tables("Diagnosis").Rows(0).Item("Icd_Code"), String).Trim

                Try
                    clearCommandString()
                    CommandStr.Append("Select count(*) as Cnt from PUB_Disease_ICD10 where Icd_Code = '").Append(Icd_Code).Append("' and Is_Chronic_Disease = 'Y' ")
                    Dim ResultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    If DataSetUtil.IsContainsData(ResultDS) Then
                        If CType(ResultDS.Tables(0).Rows(0).Item("Cnt"), Integer) > 0 Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If

                    End If

                    CreateTXTLog("K03ChkChronicDisease", True)

                    Return True

                Catch ex As Exception
                    rtnData = False

                    CreateTXTLog("K03ChkChronicDisease", False)

                    Return False
                End Try

            End If

        End If

        rtnData = False

        CreateTXTLog("K03ChkChronicDisease", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.45重大傷病檢核
    ''' "Diagnosis", "Icd_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function K04ChkSevereDisease() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Diagnosis.Icd_Code
        '處理邏輯	Select dd = count(*) from PUB_Disease where Icd_Code = Icd_Code   and Is_Severe_Disease=’Y’ 。

        '若 dd>0 是有找> assign true to rtnData  rtnData= ‘true’，其他rtnData=’false’。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Diagnosis"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")

            If checkAllContainColumnIn(CheckTable) Then

                Dim Icd_Code As String = CType(pubreapi.Tables("Diagnosis").Rows(0).Item("Icd_Code"), String).Trim

                Try
                    clearCommandString()
                    CommandStr.Append("Select count(*) as Cnt from PUB_Disease where Icd_Code = '").Append(Icd_Code).Append("' and Is_Severe_Disease = 'Y' ")
                    Dim ResultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    If DataSetUtil.IsContainsData(ResultDS) Then
                        If CType(ResultDS.Tables(0).Rows(0).Item("Cnt"), Integer) > 0 Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If

                    End If

                    CreateTXTLog("K04ChkSevereDisease", True)

                    Return True

                Catch ex As Exception
                    rtnData = False

                    CreateTXTLog("K04ChkSevereDisease", False)

                    Return False
                End Try

            End If

        End If

        rtnData = False

        CreateTXTLog("K04ChkSevereDisease", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.46病歷記載病史(ICD9=X)時間檢核
    ''' "PUB_Rule", "ValueX"
    ''' "Medical_Record", "Chart_No"
    ''' "Medical_Record", "Order_Date"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function K05ChkSpecificIcd9TimeInterval() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	PUB_Rule.ValueX    (Icd_Code)
        '        Medical_Record.Opd_Visit_Date()
        '處理邏輯	1.	EMR_Medical_Diagnosis join 
        'EMR_Medical_Record 取對應icd_Code 最早的日期 (EMR_Medical_Record.TransTime與 Opd_Visit_Day 作 datediff (by day) = dd
        '若 dd>0 是有找> assign true to rtnData  rtnData= dd， rtnDataUnit = “日” 的單位代碼
        '。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"PUB_Rule", "Medical_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")

            If checkAllContainColumnIn(CheckTable) Then

                Try
                    Dim ValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

                    Dim Chart_No As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No"), String).Trim

                    Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)



                    '        OMO_Order_Record(union)
                    'OMO_Meidcation_History (majorly for 抗生素)

                    'select  top 1 EMD.Medical_Sn, EMD.Icd_Code , EMR.Order_Date
                    '		from dbo.EMR_Medical_Diagnosis EMD inner join dbo.EMR_Medicine_Record EMR
                    '			 on (EMD.Chart_No='{Chart_No}' and 
                    '			     EMD.Icd_Code='{IcdCode}' and 
                    '			     EMD.Medical_Sn = EMR.Medical_Sn)
                    'Order By EMR.Order_Date asc

                    clearCommandString()
                    CommandStr.AppendLine("select  top 1 EMD.Medical_Sn, EMD.Icd_Code , EMR.Order_Date ")
                    CommandStr.AppendLine("  from dbo.EMR_Medical_Diagnosis EMD inner join dbo.EMR_Medicine_Record EMR ")
                    CommandStr.Append("    on (EMD.Chart_No='").Append(Chart_No).Append("' and ").AppendLine(" ")
                    CommandStr.Append("    EMD.Icd_Code='").Append(ValueX).Append("' and ").AppendLine(" ")
                    CommandStr.AppendLine("    EMD.Medical_Sn = EMR.Medical_Sn) ")
                    CommandStr.AppendLine("  Order By EMR.Order_Date asc ")

                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)

                    If DataSetUtil.IsContainsData(resultDS) Then
                        Dim Count As Integer = 0

                        Dim Top1Order_Date As Date = CType(resultDS.Tables(0).Rows(0).Item("Order_Date"), Date)

                        Count = DateDiff("d", Top1Order_Date, Order_Date)

                        rtnData = Count
                        rtnDataUnit = "日"



                    End If

                    CreateTXTLog("K05ChkSpecificIcd9TimeInterval", True)

                    Return True

                Catch ex As Exception
                    rtnData = Nothing

                    CreateTXTLog("K05ChkSpecificIcd9TimeInterval", False)

                    Return False
                End Try

            End If

        End If

        rtnData = Nothing

        CreateTXTLog("K05ChkSpecificIcd9TimeInterval", False)

        Return False
    End Function

    ''' <summary>
    ''' 1.27-2單次醫令總量次數檢核
    ''' "Order_Record", "Icd_Code"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function K06ChkChronicOrderBySpecificIcd() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Diagnosis.Icd_Code
        '處理邏輯(PUB_Rule.ValueX)
        'Select count(a.*) from Diagnosis a inner join PUB_Disease b on 
        '(a.Icd_Code =b.Icd_Code and b.Is_Chronic_Disease=’Y’)
        'where a.Icd_Sort_Value <=PUB_Rule.ValueX 
        '若有找到 return True, 反之 return False.
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"Diagnosis", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
            'AddTableAndColumnInto(CheckTable, "Diagnosis", "Is_Chronic_Card")
            AddTableAndColumnInto(CheckTable, "Diagnosis", "ValueX")

            If checkAllContainColumnIn(CheckTable) Then
                Dim ValueX As Integer = Integer.Parse(CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim)
                Dim TotalCount As Integer = 0

                Dim CodeStr As StringBuilder = New StringBuilder

                Dim existList As ArrayList = New ArrayList
                For i As Integer = 0 To (pubreapi.Tables("Diagnosis").Rows.Count - 1)
                    If Integer.Parse(CType(pubreapi.Tables("Diagnosis").Rows(i).Item("Icd_Sort_Value"), String).Trim) > (ValueX) Then
                        existList.Add(CType(pubreapi.Tables("Diagnosis").Rows(i).Item("Icd_Code"), String))
                    End If
                Next


                If existList.Count > 50 Then
                    Dim divide As Integer = 0
                    If (existList.Count Mod 50) = 0 Then
                        divide = (existList.Count / 50)
                    Else
                        divide = (existList.Count / 50) + 1
                    End If

                    For i As Integer = 1 To divide
                        CodeStr.Remove(0, CodeStr.Length)
                        For j As Integer = (50 * (i - 1)) To ((50 * i) - 1)
                            If j = existList.Count Then
                                '最後依筆已處理
                                Exit For
                            End If

                            CodeStr.Append("'").Append(CType(existList.Item(i), String).Trim).Append("',")
                        Next

                        If CodeStr.Length > 0 Then
                            CodeStr.Remove(CodeStr.Length - 1, 1)
                        End If

                        clearCommandString()
                        'if Icd_Sort_Value < X
                        '>> select count(Icd_Code) from PUB_Disease where Icd_Code in ('') and Is_Chronic_Disease='Y' and Dc <> 'Y'
                        CommandStr.Append("select count(Icd_Code) as Cnt from PUB_Disease_ICD10 where Icd_Code in (").Append(CodeStr.ToString).AppendLine(") ")
                        CommandStr.Append("and Is_Chronic_Disease = 'Y' and Dc <> 'Y' ")
                        Dim ResultDS As DataSet = dynamicQuery(CommandStr.ToString)
                        TotalCount = TotalCount + CType(ResultDS.Tables(0).Rows(0).Item(0), Integer)

                    Next

                Else
                    For i As Integer = 0 To (existList.Count - 1)
                        CodeStr.Append("'").Append(CType(existList.Item(i), String).Trim).Append("',")
                    Next

                    If CodeStr.Length > 0 Then
                        CodeStr.Remove(CodeStr.Length - 1, 1)
                    End If

                    clearCommandString()
                    CommandStr.Append("select count(Icd_Code) as Cnt from PUB_Disease_ICD10 where Icd_Code in (").Append(CodeStr.ToString).AppendLine(") ")
                    CommandStr.Append("and Is_Chronic_Disease = 'Y' and Dc <> 'Y' ")
                    Dim ResultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    TotalCount = TotalCount + CType(ResultDS.Tables(0).Rows(0).Item(0), Integer)

                End If


                '若有找到 return True, 反之 return False.


                If TotalCount > 0 Then

                    rtnData = TotalCount

                    CreateTXTLog("K06ChkChronicOrderBySpecificIcd", True)
                    Return True

                Else
                    rtnData = Nothing
                    'rtnData1 = Nothing

                    CreateTXTLog("K06ChkChronicOrderBySpecificIcd", False)

                    Return False

                End If

            End If

        End If

        CreateTXTLog("K06ChkChronicOrderBySpecificIcd", False)

        Return False

    End Function

#End Region

#Region "########## 2009/10/07 OPH補上 ##########"
    ''' <summary>
    ''' 1.46病歷記載病史(ICD9=X)時間檢核
    ''' "PUB_Rule", "ValueX"
    ''' "Medical_Record", "Chart_No"
    ''' "Medical_Record", "Order_Date"
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H24ChkSpecificIcd9TimeInterval() As Boolean

        '-----------------------------------------------------------------------
        '參數說明	PUB_Rule.ValueX    (Icd_Code)
        '        Medical_Record.Opd_Visit_Date()
        '處理邏輯	1.	EMR_Medical_Diagnosis join 
        'EMR_Medical_Record 取對應icd_Code 最早的日期 (EMR_Medical_Record.TransTime與 Opd_Visit_Day 作 datediff (by day) = dd
        '若 dd>0 是有找> assign true to rtnData  rtnData= dd， rtnDataUnit = “日” 的單位代碼
        '。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------

        cleanReturnInfo()

        Dim DataTableName() As String = {"PUB_Rule", "Medical_Record"}
        If isContainsDataTable(DataTableName) Then

            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")

            If checkAllContainColumnIn(CheckTable) Then

                Try
                    Dim ValueX As String = CType(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"), String).Trim

                    Dim Chart_No As String = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No"), String).Trim

                    Dim Order_Date As Date = CType(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"), Date)



                    '        OMO_Order_Record(union)
                    'OMO_Meidcation_History (majorly for 抗生素)

                    'select  top 1 EMD.Medical_Sn, EMD.Icd_Code , EMR.Order_Date
                    '		from dbo.EMR_Medical_Diagnosis EMD inner join dbo.EMR_Medicine_Record EMR
                    '			 on (EMD.Chart_No='{Chart_No}' and 
                    '			     EMD.Icd_Code='{IcdCode}' and 
                    '			     EMD.Medical_Sn = EMR.Medical_Sn)
                    'Order By EMR.Order_Date asc

                    clearCommandString()
                    CommandStr.AppendLine("select  top 1 EMD.Medical_Sn, EMD.Icd_Code , EMR.Order_Date ")
                    CommandStr.AppendLine("  from dbo.EMR_Medical_Diagnosis EMD inner join dbo.EMR_Medicine_Record EMR ")
                    CommandStr.Append("    on (EMD.Chart_No='").Append(Chart_No).Append("' and ").AppendLine(" ")
                    CommandStr.Append("    EMD.Icd_Code='").Append(ValueX).Append("' and ").AppendLine(" ")
                    CommandStr.AppendLine("    EMD.Medical_Sn = EMR.Medical_Sn) ")
                    CommandStr.AppendLine("  Order By EMR.Order_Date asc ")

                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)

                    If DataSetUtil.IsContainsData(resultDS) Then
                        Dim Count As Integer = 0

                        Dim Top1Order_Date As Date = CType(resultDS.Tables(0).Rows(0).Item("Order_Date"), Date)

                        Count = DateDiff("d", Top1Order_Date, Order_Date)

                        rtnData = Count
                        rtnDataUnit = "日"



                    End If

                    CreateTXTLog("K05ChkSpecificIcd9TimeInterval", True)

                    Return True

                Catch ex As Exception
                    rtnData = Nothing

                    CreateTXTLog("K05ChkSpecificIcd9TimeInterval", False)

                    Return False
                End Try

            End If

        End If

        rtnData = Nothing

        CreateTXTLog("K05ChkSpecificIcd9TimeInterval", False)

        Return False
    End Function

#End Region

#Region "###################### 2009/11/02 交互作用檢核#################"
    ''' <summary>
    ''' 1.控管項目檢核
    ''' 2.MARKWU 
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H50_ChkInteraction() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Order_Record.ValueData    (Order_code)
        '處理邏輯	1.	先用order_code去找所有的成大十二碼
        '           2.  將找到的成大十二碼，去交互作用查詢
        '           如果找得到，則回傳資訊，找不到就回傳nothing
        '
        '。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        cleanReturnInfo()
        Dim DataTableName() As String = {"Order_Record"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_code")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Sno")
            If checkAllContainColumnIn(CheckTable) Then
                Try
                    If pubreapi.Tables("Order_record").Rows.Count > 0 Then '檢查有沒有order_code的資訊


                        Dim cmdStr As New StringBuilder
                        cmdStr.Append(" declare @OrderString as varchar(3000)  ")
                        cmdStr.Append(" declare @sqlstr as varchar(3500)=''  ")
                        cmdStr.Append(" set @OrderString = '")


                        For Each datarow As DataRow In pubreapi.Tables("Order_record").Rows
                            cmdStr.Append("(''" & datarow.Item("Order_Code").ToString.Trim & "'', " & datarow.Item("Order_Sno").ToString.Trim & "),")
                        Next
                        cmdStr.Remove(cmdStr.ToString.Length - 1, 1)

                        cmdStr.Append("'")



                        'Temp table for Order Code         
                        cmdStr.Append(" select cast('' as nchar(20)) as Order_Code, cast(0 as int) as Order_Record_No ")
                        cmdStr.AppendLine(" into #myOrderTbl ")
                        cmdStr.AppendLine(" where(1 = 0) ")

                        'Temp table for translated Pharmacy 12 Code
                        cmdStr.Append(" select cast('' as nchar(20)) as P12_Code, cast(0 as int) as Order_Record_No ")
                        cmdStr.Append(" into #myOph12Tbl ")
                        cmdStr.Append(" where(1 = 0) ")

                        '因為診間醫令尚未存入資料庫中，必須先暫存於 temp table後
                        '方便使用 SQL 實作交互作用檢核
                        'Insert Order Code, 
                        cmdStr.AppendLine(" select @sqlstr=' insert into #myOrderTbl values ' + @OrderString ")
                        cmdStr.AppendLine(" exec(@sqlstr) ")
                        'Insert Pharmacy 12 Code
                        cmdStr.AppendLine(" insert into #myOph12Tbl ")
                        cmdStr.Append(" select bb.Pharmacy_12_Code, aa.Order_Record_No")
                        cmdStr.Append(" from  #myOrderTbl aa inner join OPH_Pharmacy_Base bb")
                        cmdStr.Append(" on aa.Order_Code = bb.Order_Code ")
                        cmdStr.Append(" and bb.Dc<>'Y'")

                        '開始用 CTE 實作 pairwise comparison, 配對兩兩比對
                        cmdStr.Append(" ;with Tbl_B as (")
                        cmdStr.Append(" select P12_Code as P12_Code_B, ")
                        cmdStr.Append(" Order_Record_No ")
                        cmdStr.Append(" from #myOph12Tbl ")
                        cmdStr.Append(" ) ")
                        cmdStr.Append(" select PHI.*  ")
                        cmdStr.Append(" from OPH_Interaction as PHI ")
                        cmdStr.Append(" inner join ( ")
                        cmdStr.Append(" select AA.P12_Code, BB.P12_Code_B ")
                        cmdStr.Append(" from #myOph12Tbl as AA ")
                        cmdStr.Append(" inner join Tbl_B as BB ")
                        cmdStr.Append(" on (AA.Order_Record_No > BB.Order_Record_No)")
                        cmdStr.Append(" ) as PP")
                        cmdStr.Append(" on ((PHI.Pharmacy_12_CodeA=PP.P12_Code and PHI.Pharmacy_12_CodeB=PP.P12_Code_B) ")
                        cmdStr.Append("  or (PHI.Pharmacy_12_CodeA=PP.P12_Code_B and PHI.Pharmacy_12_CodeB=PP.P12_Code) ) and '" & Now.ToString("yyyy/MM/dd HH:mm:ss") & "'  between PHI.First_Occur_Date and PHI.Pause_Date  ")
                        cmdStr.Append(" inner join OPH_Pharmacy_Base  as OPB1 on OPB1.Pharmacy_12_Code =PHI.Pharmacy_12_CodeA ")
                        cmdStr.Append(" inner join OPH_Pharmacy_Base  as OPB2 on OPB2.Pharmacy_12_Code =PHI.Pharmacy_12_CodeB ")
                        cmdStr.AppendLine("")

                        cmdStr.AppendLine(" drop table #myOrderTbl ")
                        cmdStr.AppendLine(" drop table #myOph12Tbl ")
                        cmdStr.AppendLine("  ")
                        Dim QueryString As String = cmdStr.ToString
                        Dim ds As DataSet = dynamicQueryNotPub(QueryString)

                        ' if ds <1 則沒有資料回傳 true 
                        If ds.Tables(0).Rows.Count < 1 Then
                            rtnData = True
                            rtnDS = ds
                        Else
                            rtnData = False
                            rtnDS = ds

                        End If


                        Return True

                    Else
                        Throw New Exception
                    End If
                Catch ex As Exception
                    rtnDS = Nothing
                    CreateTXTLog("H50ChkInteraction", False)
                    Return False
                End Try



            End If
        End If
        'rtnData = Nothing

        'CreateTXTLog("K05ChkInteraction", False)

        'Return False

    End Function
#End Region

#Region "###################### 2009/11/02 化療藥檢核#################"
    ''' <summary>
    ''' 1.化療藥檢核
    ''' 2.MARKWU 
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H53ChkChemoMedicine() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Order_Record.ValueData    (Order_code)
        '           Medical_Record.Chart_No
        '處理邏輯	1.	先用order_code去EMR_Medicine找
        '    
        '           如果找得到，則回傳資訊，找不到就回傳nothing
        '
        '。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        cleanReturnInfo()
        Dim DataTableName() As String = {"Medical_Record", "Order_Record"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
            If checkAllContainColumnIn(CheckTable) Then
                Try
                    If pubreapi.Tables("PUB_Rule").Rows.Count > 0 Then '檢查有沒有order_code的資訊
                        Dim chart_no As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                        Dim order_no As String = "'" + pubreapi.Tables("Order_Record").Rows(0).Item("Order_code").ToString.Trim + "'"
                        Dim effectdate As String = pubreapi.Tables("Order_record").Rows(0).Item("Order_Effect_Date").ToString
                        Dim enddate As String = pubreapi.Tables("Order_record").Rows(0).Item("Order_End_Date").ToString
                        Dim pub As PUBDelegate = PUBDelegate.getInstance
                        Dim dataset As DataSet = pub.EMRMedicineRecordRuleQuery(chart_no, order_no, effectdate, enddate)

                        If dataset.Tables(0).Rows.Count > 0 Then
                            rtnData = True
                            rtnDS = dataset
                            Return True

                        Else
                            rtnData = False
                            rtnDS = dataset
                            Return True
                        End If

                    Else
                        Throw New Exception
                    End If
                Catch ex As Exception
                    rtnData = Nothing
                    CreateTXTLog("K53ChkChemoMedicine", False)
                    Return False
                End Try



            End If
        End If
        'rtnData = Nothing

        'CreateTXTLog("H53ChkChemoMedicine", False)

        'Return False

    End Function
#End Region

#Region "###################### 2009/11/05 麻醉成癮藥檢核#################"
    ''' <summary>
    ''' 1.麻醉成癮藥檢核
    ''' 2.MARKWU 
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H51ChkMedicine() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Order_Record.ValueData    (Order_code)
        '           Medical_Record.Chart_No
        '處理邏輯1.	病歷號Chart_No   = C.Chart_No、
        '傳入的藥品醫令代碼Order_Code = C.Order_Code and 
        '(C.Effect_Date)介於所傳入的Value_Data內，取得C.Days。
        ' 註】例如：Value_Data = [Y/X] = [28/3]，Unit_Code = [Y/X] = [天/月]，
        '則要搜尋的Data範圍為由系統日期往前推3個月的Effect_Date所對應的的Days加總是否有超過28天。
        '
        '。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        cleanReturnInfo()
        Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
            If checkAllContainColumnIn(CheckTable) Then
                Try
                    Dim timecount As String() = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim.Split("/")
                    Dim chart_no As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim order_no As String = "'" + pubreapi.Tables("Order_Record").Rows(0).Item("Order_Code").ToString.Trim + "'"
                    Dim timeunit As String() = Nothing
                    Dim effectdate As Date


                    If timeunit(1).Equals("月") Then
                        effectdate = Now.AddMonths(0 - CDbl(timecount(1)))
                    ElseIf timeunit(1).Equals("天") Then
                        effectdate = Now.AddDays(0 - CDbl(timecount(1)))
                    ElseIf timeunit(1).Equals("年") Then
                        effectdate = Now.AddYears(0 - CDbl(timecount(1)))
                    End If

                    Dim pub As PUBDelegate = PUBDelegate.getInstance
                    Dim k1 As DataSet = pub.EMRMedicineRecordRuleQuery(chart_no, order_no, effectdate)

                    If k1.Tables(0).Rows.Count > 0 Then
                        Dim count As Integer = CInt(k1.Tables(0).Rows(0).Item(0).ToString)

                        If timeunit(0).Equals("天") Then
                            If count > CInt(timecount(0)) Then
                                rtnDS = k1
                                rtnData = True
                                Return True
                            Else
                                rtnDS = k1
                                rtnData = False
                                Return True
                            End If

                        ElseIf timeunit(0).Equals("月") Then
                            If count > (CInt(timecount(0)) * 30) Then
                                rtnDS = k1
                                rtnData = True
                                Return True
                            Else
                                rtnDS = k1
                                rtnData = False
                                Return True
                            End If
                        ElseIf timeunit(0).Equals("年") Then
                            If count > (CInt(timecount(0)) * 365) Then
                                rtnDS = k1
                                rtnData = True
                                Return True
                            Else
                                rtnDS = k1
                                rtnData = False
                                Return True
                            End If
                        End If
                    Else

                        rtnData = False
                        '  CreateTXTLog("H51ChkMedicine", False)
                        Return True
                    End If



                Catch ex As Exception
                    rtnData = Nothing
                    CreateTXTLog("H51ChkMedicine", False)
                    Return False
                End Try



            End If
        End If
        'rtnData = Nothing

        'CreateTXTLog("K05ChkMedicine", False)

        'Return False

    End Function
#End Region

#Region "###################### 2009/11/02 同類藥作用檢核#################"
    ''' <summary>
    ''' 1.同類藥項目檢核
    ''' 2.MARKWU 
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H52ChkSameKindMedicine() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	Order_Record.ValueData    (Order_code)
        '處理邏輯	1.	先用order_code去找所有的EMRorder_code
        '           2.  將找到的成大碼，去emrmedicine查詢
        '               如果找得到，則回傳資訊，找不到就回傳nothing
        '
        '。
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        cleanReturnInfo()
        Dim DataTableName() As String = {"Order_Record", "Medical_Record"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Pharmacy_12_Code")
            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")

            If checkAllContainColumnIn(CheckTable) Then
                Try
                    If pubreapi.Tables("Order_Record").Rows.Count > 0 Then '檢查有沒有order_code的資訊

                        Dim queryString1 As String = "" + pubreapi.Tables("Order_Record").Rows(0).Item("Order_code").ToString.Trim + ""
                        '將order_code轉成大十二碼

                        Dim chart_no As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                        Dim effectdate As String = pubreapi.Tables("Order_Record").Rows(0).Item("Order_Effect_Date").ToString.Trim
                        Dim enddate As String = pubreapi.Tables("Order_Record").Rows(0).Item("Order_End_Date").ToString.Trim

                        '找同類藥
                        Dim pub As PUBDelegate = PUBDelegate.getInstance
                        Dim ds As DataSet = pub.QuerySameKineMedicine(queryString1)

                        '組查詢字串 
                        If ds.Tables(0).Rows.Count > 0 Then
                            Dim queryString As String = "'" + ds.Tables(0).Rows(0).Item(1).ToString + "'" '組同類藥的 queryString 



                            For i = 0 To ds.Tables(0).Rows.Count - 1
                                queryString = queryString + ",'" + ds.Tables(0).Rows(i).Item(0).ToString + "'"
                            Next
                            '檢查同類藥
                            Dim rr1 As DataSet = pub.EMRMedicineRecordRuleQuery(chart_no, queryString, effectdate, enddate)
                            If rr1.Tables(0).Rows.Count > 0 Then
                                rtnData = False
                                rtnDS = rr1
                                Return True
                            Else
                                rtnData = True
                                rtnDS = rr1
                                Return True
                            End If
                        Else
                            rtnData = True
                            rtnDS = Nothing
                            Return True
                        End If

                    Else
                        Throw New Exception
                    End If
                Catch ex As Exception
                    rtnData = Nothing
                    CreateTXTLog("H52ChkSameKindMedicine", False)
                    Return False
                End Try



            End If
        End If
        'rtnData = Nothing

        'CreateTXTLog("H52ChkSameKindMedicine", False)

        'Return False

    End Function
#End Region

#Region "### 檢核方法 ###"

    Private Shared ColumnName() As String = {"Table", "Column"}
    Private Shared ColumnNameType() As Integer = {DataSetUtil.TypeString, DataSetUtil.TypeString}

    ''' <summary>
    ''' 取得一空的檢核表
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Shared Function getCheckTable() As DataTable
        Dim ParamemetTable As DataTable = DataSetUtil.GenDataTable("StoredTableColumn", Nothing, ColumnName, ColumnNameType)
        Return ParamemetTable
    End Function

    ''' <summary>
    ''' 查看是否包含資料表格(給空值只檢查DS>>pubreapi)
    ''' </summary>
    ''' <param name="ContainsTable"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function isContainsDataTable(ByRef ContainsTable() As String) As Boolean
        Dim Contains As Boolean = True

        If DataSetUtil.IsContainsData(pubreapi) Then
            'ContainsTable有資料才檢查
            If ContainsTable IsNot Nothing AndAlso ContainsTable.Length > 0 Then
                For Each TableName As String In ContainsTable
                    If Not DataSetUtil.IsContainsData(pubreapi.Tables(TableName)) Then
                        Contains = False
                    End If
                Next
            End If
        Else
            '至少pubreapi要有資料
            Contains = False
        End If

        Return Contains

    End Function

    ''' <summary>
    ''' 將檢核的table, column加入檢核表
    ''' </summary>
    ''' <param name="ProcessTable"></param>
    ''' <param name="refTableName"></param>
    ''' <param name="refColumnName"></param>
    ''' <remarks></remarks>
    Private Sub AddTableAndColumnInto(ByRef ProcessTable As DataTable, ByRef refTableName As String, ByRef refColumnName As String)
        If ProcessTable IsNot Nothing Then
            Dim dr As DataRow = ProcessTable.NewRow
            dr.Item(ColumnName(0)) = refTableName
            dr.Item(ColumnName(1)) = refColumnName
            ProcessTable.Rows.Add(dr)
        End If
    End Sub

    ''' <summary>
    ''' 檢核表格內的欄位資料存在(先檢覈)
    ''' </summary>
    ''' <param name="CheckTable"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function checkAllContainColumnIn(ByRef CheckTable As DataTable) As Boolean
        Dim ReturnValue As Boolean = True

        If CheckTable IsNot Nothing AndAlso CheckTable.Rows.Count > 0 Then
            For Each dr As DataRow In CheckTable.Rows
                If IsDBNull(pubreapi.Tables(CType(dr.Item(ColumnName(0)), String).Trim).Rows(0).Item(CType(dr.Item(ColumnName(1)), String).Trim)) Then
                    ReturnValue = False
                End If
            Next
        Else
            ReturnValue = False
        End If
        Return ReturnValue
    End Function

    ' in / not in  >> 全存在
    ' 併存/不並存 >> 左有右邊定義中任一個
    ' exist

    ''' <summary>
    ''' OrderValue是否在OrderCompare()中? 1 to N
    ''' </summary>
    ''' <param name="CompareValue"></param>
    ''' <param name="AllValueSet"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function compareIn(ByVal CompareValue As String, ByVal AllValueSet() As String) As Boolean

        If CompareValue IsNot Nothing AndAlso CompareValue.Length > 0 Then
            If AllValueSet IsNot Nothing AndAlso AllValueSet.Length > 0 Then

                Dim notEqualFlag As Boolean = True
                Dim process As Integer = 0
                While notEqualFlag And (process < AllValueSet.Length)


                    If AllValueSet(process).Contains("[") AndAlso AllValueSet(process).Contains("]") AndAlso AllValueSet(process).Contains("-") Then
                        'region
                        Dim split() As String = AllValueSet(process).Replace("[", "").Replace("]", "").Split("-")

                        If split IsNot Nothing AndAlso split.Length = 2 AndAlso _
                        (CompareValue.CompareTo(split(0)) >= 0 AndAlso CompareValue.CompareTo(split(1)) <= 0) Then
                            notEqualFlag = False
                        Else
                        End If

                    Else
                        'not region
                        If CompareValue.Equals(AllValueSet(process)) Then
                            notEqualFlag = False
                        Else
                        End If
                    End If

                    process = process + 1
                End While

                If notEqualFlag Then
                    Return False
                Else
                    Return True
                End If
            Else
                '無需比較參數
                Return False
            End If
        Else
            '參數錯誤
            Return False
        End If
    End Function

    ''' <summary>
    ''' OrderValue是否在OrderCompare()中? 1 to N
    ''' </summary>
    ''' <param name="CompareValue"></param>
    ''' <param name="AllValueSet"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function compareInForIcd(ByVal CompareValue As String, ByVal AllValueSet() As String) As Boolean

        If CompareValue IsNot Nothing AndAlso CompareValue.Length > 0 Then
            If AllValueSet IsNot Nothing AndAlso AllValueSet.Length > 0 Then

                Dim notEqualFlag As Boolean = True
                Dim process As Integer = 0
                While notEqualFlag And (process < AllValueSet.Length)


                    If AllValueSet(process).Contains("[") AndAlso AllValueSet(process).Contains("]") AndAlso AllValueSet(process).Contains("-") Then
                        'region
                        Dim split() As String = AllValueSet(process).Replace("[", "").Replace("]", "").Split("-")

                        If split IsNot Nothing AndAlso split.Length = 2 AndAlso _
                        (CompareValue.CompareTo(split(0)) >= 0 AndAlso CompareValue.CompareTo(split(1)) <= 0) Then
                            notEqualFlag = False
                        Else
                        End If
                    ElseIf AllValueSet(process).Substring(AllValueSet(process).Length - 1, 1).ToUpper = "X" Then
                        If CompareValue.Length >= AllValueSet(process).Length - 1 AndAlso CompareValue.Substring(0, AllValueSet(process).Length - 1) = AllValueSet(process).Substring(0, AllValueSet(process).Length - 1) Then
                            notEqualFlag = False
                        End If
                    Else
                        'not region
                        If CompareValue.Equals(AllValueSet(process)) Then
                            notEqualFlag = False
                        Else
                        End If
                    End If

                    process = process + 1
                End While

                If notEqualFlag Then
                    Return False
                Else
                    Return True
                End If
            Else
                '無需比較參數
                Return False
            End If
        Else
            '參數錯誤
            Return False
        End If
    End Function

    ''' <summary>
    ''' ?存
    ''' </summary>
    ''' <param name="CompareValueSet"></param>
    ''' <param name="AllValueSet"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function compareContain(ByVal CompareValueSet() As String, ByVal AllValueSet() As String) As Boolean
        If CompareValueSet IsNot Nothing AndAlso CompareValueSet.Length > 0 AndAlso AllValueSet IsNot Nothing AndAlso CompareValueSet.Length > 0 Then
            Dim contain As Boolean = False
            Dim process As Integer = 0
            While (Not contain)
                If compareIn(CompareValueSet(process), AllValueSet) Then
                    contain = True
                End If
                process = process + 1
            End While

            Return contain
        Else
            Return False
        End If
    End Function

    '''' <summary>
    '''' Exist(全符合)
    '''' </summary>
    '''' <param name="CompareValueSet"></param>
    '''' <param name="AllValueSet"></param>
    '''' <returns></returns>
    '''' <remarks></remarks>
    'Private Function compareExist(ByVal CompareValueSet() As String, ByVal AllValueSet() As String) As Boolean
    '    If CompareValueSet IsNot Nothing AndAlso CompareValueSet.Length > 0 AndAlso AllValueSet IsNot Nothing AndAlso CompareValueSet.Length > 0 _
    '    AndAlso AllValueSet.Length > CompareValueSet.Length Then

    '        Dim exist As Boolean = True
    '        Dim process As Integer = 0
    '        While (exist And (process < CompareValueSet.Length))
    '            If compareIn(CompareValueSet(process), AllValueSet) Then

    '            Else
    '                exist = False
    '            End If
    '            process = process + 1
    '        End While

    '        Return exist
    '    Else
    '        Return False
    '    End If
    'End Function

    Private Sub Sort(ByRef unSort() As String)
        Array.Sort(unSort)
    End Sub

    ''' <summary>
    ''' 並存與不並存判斷函式
    ''' </summary>
    ''' <param name="OperatorCode"></param>
    ''' <param name="ValueUnit"></param>
    ''' <param name="Order_Code"></param>
    ''' <param name="ValueData"></param>
    ''' <param name="MethodName"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function compareExist(ByVal OperatorCode As String, ByVal ValueUnit As String, ByVal Order_Code As ArrayList, ByVal ValueData() As String, ByVal MethodName As String) As String
        Try
            Dim notMatchArray As New ArrayList
            Dim notMatch As String = ""
            Select Case OperatorCode
                'OperatorCode = 10(並存)，OperatorCode = 11(不並存)
                Case "10"
                    Select Case ValueUnit
                        'ValueUnit = R011(任一醫令)，ValueUnit = R012(全部醫令)
                        Case "R011"
                            For Each obj As String In ValueData
                                For Each OrderCode As String In Order_Code
                                    If obj = OrderCode Then
                                        rtnData = True
                                        CreateTXTLog(MethodName, True)
                                        Return notMatch
                                    ElseIf obj.Contains("-") Then
                                        Dim ValueDataRange() As String = obj.Substring(1, obj.Length - 2).Split("-")

                                        If ValueDataRange(1) > ValueDataRange(0) Then
                                            If ValueDataRange(0) <= OrderCode And OrderCode <= ValueDataRange(1) Then
                                                rtnData = True
                                                CreateTXTLog(MethodName, True)
                                                Return notMatch
                                            End If
                                        Else
                                            If ValueDataRange(1) <= OrderCode And OrderCode <= ValueDataRange(0) Then
                                                rtnData = True
                                                CreateTXTLog(MethodName, True)
                                                Return notMatch
                                            End If
                                        End If
                                    End If
                                Next
                            Next

                            rtnData = False
                            CreateTXTLog(MethodName, True)
                            Return notMatch
                        Case Else
                            For Each obj In Order_Code
                                notMatchArray.Add(obj)
                            Next
                            rtnData = False

                            For Each obj As String In ValueData
                                For Each OrderCode As String In Order_Code
                                    If obj = OrderCode Then
                                        If notMatchArray.Contains(OrderCode) Then
                                            notMatchArray.Remove(OrderCode)
                                        End If
                                        rtnData = True
                                        Exit For
                                    ElseIf obj.Contains("-") Then
                                        Dim ValueDataRange() As String = obj.Substring(1, obj.Length - 2).Split("-")

                                        If ValueDataRange(1) > ValueDataRange(0) Then
                                            If ValueDataRange(0) <= OrderCode And OrderCode <= ValueDataRange(1) Then
                                                If notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Remove(OrderCode)
                                                End If
                                                rtnData = True
                                                Exit For
                                            End If
                                        Else
                                            If ValueDataRange(1) <= OrderCode And OrderCode <= ValueDataRange(0) Then
                                                If notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Remove(OrderCode)
                                                End If
                                                rtnData = True
                                                Exit For
                                            End If
                                        End If
                                    Else
                                    End If
                                Next
                            Next

                            CreateTXTLog(MethodName, True)
                            For Each singleObj In notMatchArray
                                If notMatch <> "" Then
                                    notMatch &= ","
                                End If
                                notMatch &= singleObj
                            Next
                            Return notMatch
                    End Select
                Case "11"
                    Select Case ValueUnit
                        'ValueUnit = R011(任一醫令)，ValueUnit = R012(全部醫令)
                        Case "R011"
                            rtnData = True

                            For Each obj As String In ValueData
                                For Each OrderCode As String In Order_Code
                                    If obj = OrderCode Then
                                        rtnData = False
                                        If Not notMatchArray.Contains(OrderCode) Then
                                            notMatchArray.Add(OrderCode)
                                        End If
                                        Exit For
                                    ElseIf obj.Contains("-") Then
                                        Dim ValueDataRange() As String = obj.Substring(1, obj.Length - 2).Split("-")

                                        If ValueDataRange(1) > ValueDataRange(0) Then
                                            If ValueDataRange(0) <= OrderCode And OrderCode <= ValueDataRange(1) Then
                                                rtnData = False
                                                If Not notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Add(OrderCode)
                                                End If
                                                Exit For
                                            End If
                                        Else
                                            If ValueDataRange(1) <= OrderCode And OrderCode <= ValueDataRange(0) Then
                                                rtnData = False
                                                If Not notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Add(OrderCode)
                                                End If
                                                Exit For
                                            End If
                                        End If
                                    End If
                                Next
                            Next

                            CreateTXTLog(MethodName, True)
                            For Each singleObj In notMatchArray
                                If notMatch <> "" Then
                                    notMatch &= ","
                                End If
                                notMatch &= singleObj
                            Next
                            Return notMatch
                        Case Else
                            rtnData = True

                            For Each obj As String In ValueData
                                For Each OrderCode As String In Order_Code
                                    If obj = OrderCode Then
                                        rtnData = False
                                        If Not notMatchArray.Contains(OrderCode) Then
                                            notMatchArray.Add(OrderCode)
                                        End If
                                        Exit For
                                    ElseIf obj.Contains("-") Then
                                        Dim ValueDataRange() As String = obj.Substring(1, obj.Length - 2).Split("-")

                                        If ValueDataRange(1) > ValueDataRange(0) Then
                                            If ValueDataRange(0) <= OrderCode And OrderCode <= ValueDataRange(1) Then
                                                rtnData = False
                                                If Not notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Add(OrderCode)
                                                End If
                                                Exit For
                                            End If
                                        Else
                                            If ValueDataRange(1) <= OrderCode And OrderCode <= ValueDataRange(0) Then
                                                rtnData = False
                                                If Not notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Add(OrderCode)
                                                End If
                                                Exit For
                                            End If
                                        End If
                                    End If
                                Next
                            Next

                            CreateTXTLog(MethodName, True)
                            For Each singleObj In notMatchArray
                                If notMatch <> "" Then
                                    notMatch &= ","
                                End If
                                notMatch &= singleObj
                            Next
                            Return notMatch
                    End Select
                Case Else
                    rtnData = False
                    CreateTXTLog(MethodName, False)
                    Return notMatch
            End Select
        Catch ex As Exception
            rtnData = False
            CreateTXTLog(MethodName, False)
            Return ex.Message
        End Try
    End Function

    ''' <summary>
    ''' 並存與不並存判斷函式 For Icd Only
    ''' </summary>
    ''' <param name="OperatorCode"></param>
    ''' <param name="ValueUnit"></param>
    ''' <param name="Order_Code"></param>
    ''' <param name="ValueData"></param>
    ''' <param name="MethodName"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function compareICD9Exist(ByVal OperatorCode As String, ByVal ValueUnit As String, ByVal Order_Code As ArrayList, ByVal ValueData() As String, ByVal MethodName As String) As String
        Try
            Dim notMatchArray As New ArrayList
            Dim notMatch As String = ""
            Select Case OperatorCode
                'OperatorCode = 10(並存)，OperatorCode = 11(不並存)
                Case "10"
                    Select Case ValueUnit
                        'ValueUnit = R011(任一醫令)，ValueUnit = R012(全部醫令)
                        Case "R011"
                            For Each obj As String In ValueData
                                For Each OrderCode As String In Order_Code
                                    If obj = OrderCode Then
                                        rtnData = True
                                        CreateTXTLog(MethodName, True)
                                        Return notMatch
                                    ElseIf obj.Contains("-") Then
                                        Dim ValueDataRange() As String = obj.Substring(1, obj.Length - 2).Split("-")

                                        If ValueDataRange(1) > ValueDataRange(0) Then
                                            If ValueDataRange(0) <= OrderCode And OrderCode <= ValueDataRange(1) Then
                                                rtnData = True
                                                CreateTXTLog(MethodName, True)
                                                Return notMatch
                                            End If
                                        Else
                                            If ValueDataRange(1) <= OrderCode And OrderCode <= ValueDataRange(0) Then
                                                rtnData = True
                                                CreateTXTLog(MethodName, True)
                                                Return notMatch
                                            End If
                                        End If
                                    ElseIf obj.Substring(obj.Length - 1, 1).ToUpper = "X" Then
                                        If OrderCode.Length >= obj.Length - 1 AndAlso OrderCode.Substring(0, obj.Length - 1) = obj.Substring(0, obj.Length - 1) Then
                                            rtnData = True
                                            CreateTXTLog(MethodName, True)
                                            Return notMatch
                                        End If
                                    End If
                                Next
                            Next

                            rtnData = False
                            CreateTXTLog(MethodName, True)
                            Return notMatch
                        Case Else
                            For Each obj In Order_Code
                                notMatchArray.Add(obj)
                            Next
                            rtnData = False

                            For Each obj As String In ValueData
                                For Each OrderCode As String In Order_Code
                                    If obj = OrderCode Then
                                        If notMatchArray.Contains(OrderCode) Then
                                            notMatchArray.Remove(OrderCode)
                                        End If
                                        rtnData = True
                                        Exit For
                                    ElseIf obj.Contains("-") Then
                                        Dim ValueDataRange() As String = obj.Substring(1, obj.Length - 2).Split("-")

                                        If ValueDataRange(1) > ValueDataRange(0) Then
                                            If ValueDataRange(0) <= OrderCode And OrderCode <= ValueDataRange(1) Then
                                                If notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Remove(OrderCode)
                                                End If
                                                rtnData = True
                                                Exit For
                                            End If
                                        Else
                                            If ValueDataRange(1) <= OrderCode And OrderCode <= ValueDataRange(0) Then
                                                If notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Remove(OrderCode)
                                                End If
                                                rtnData = True
                                                Exit For
                                            End If
                                        End If
                                    ElseIf obj.Substring(obj.Length - 1, 1).ToUpper = "X" Then
                                        If OrderCode.Length >= obj.Length - 1 AndAlso OrderCode.Substring(0, obj.Length - 1) = obj.Substring(0, obj.Length - 1) Then
                                            rtnData = True
                                            CreateTXTLog(MethodName, True)
                                            Return notMatch
                                        End If
                                    End If
                                Next
                            Next

                            CreateTXTLog(MethodName, True)
                            For Each singleObj In notMatchArray
                                If notMatch <> "" Then
                                    notMatch &= ","
                                End If
                                notMatch &= singleObj
                            Next
                            Return notMatch
                    End Select
                Case "11"
                    Select Case ValueUnit
                        'ValueUnit = R011(任一醫令)，ValueUnit = R012(全部醫令)
                        Case "R011"
                            rtnData = True

                            For Each obj As String In ValueData
                                For Each OrderCode As String In Order_Code
                                    If obj = OrderCode Then
                                        rtnData = False
                                        If Not notMatchArray.Contains(OrderCode) Then
                                            notMatchArray.Add(OrderCode)
                                        End If
                                        Exit For
                                    ElseIf obj.Contains("-") Then
                                        Dim ValueDataRange() As String = obj.Substring(1, obj.Length - 2).Split("-")

                                        If ValueDataRange(1) > ValueDataRange(0) Then
                                            If ValueDataRange(0) <= OrderCode And OrderCode <= ValueDataRange(1) Then
                                                rtnData = False
                                                If Not notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Add(OrderCode)
                                                End If
                                                Exit For
                                            End If
                                        Else
                                            If ValueDataRange(1) <= OrderCode And OrderCode <= ValueDataRange(0) Then
                                                rtnData = False
                                                If Not notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Add(OrderCode)
                                                End If
                                                Exit For
                                            End If
                                        End If
                                    ElseIf obj.Substring(obj.Length - 1, 1).ToUpper = "X" Then
                                        If OrderCode.Length >= obj.Length - 1 AndAlso OrderCode.Substring(0, obj.Length - 1) = obj.Substring(0, obj.Length - 1) Then
                                            rtnData = False
                                            If Not notMatchArray.Contains(OrderCode) Then
                                                notMatchArray.Add(OrderCode)
                                            End If
                                            Exit For
                                        End If
                                    End If
                                Next
                            Next

                            CreateTXTLog(MethodName, True)
                            For Each singleObj In notMatchArray
                                If notMatch <> "" Then
                                    notMatch &= ","
                                End If
                                notMatch &= singleObj
                            Next
                            Return notMatch
                        Case Else
                            rtnData = True

                            For Each obj As String In ValueData
                                For Each OrderCode As String In Order_Code
                                    If obj = OrderCode Then
                                        rtnData = False
                                        If Not notMatchArray.Contains(OrderCode) Then
                                            notMatchArray.Add(OrderCode)
                                        End If
                                        Exit For
                                    ElseIf obj.Contains("-") Then
                                        Dim ValueDataRange() As String = obj.Substring(1, obj.Length - 2).Split("-")

                                        If ValueDataRange(1) > ValueDataRange(0) Then
                                            If ValueDataRange(0) <= OrderCode And OrderCode <= ValueDataRange(1) Then
                                                rtnData = False
                                                If Not notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Add(OrderCode)
                                                End If
                                                Exit For
                                            End If
                                        Else
                                            If ValueDataRange(1) <= OrderCode And OrderCode <= ValueDataRange(0) Then
                                                rtnData = False
                                                If Not notMatchArray.Contains(OrderCode) Then
                                                    notMatchArray.Add(OrderCode)
                                                End If
                                                Exit For
                                            End If
                                        End If
                                    ElseIf obj.Substring(obj.Length - 1, 1).ToUpper = "X" Then
                                        If OrderCode.Length >= obj.Length - 1 AndAlso OrderCode.Substring(0, obj.Length - 1) = obj.Substring(0, obj.Length - 1) Then
                                            rtnData = False
                                            If Not notMatchArray.Contains(OrderCode) Then
                                                notMatchArray.Add(OrderCode)
                                            End If
                                            Exit For
                                        End If
                                    End If
                                Next
                            Next

                            CreateTXTLog(MethodName, True)
                            For Each singleObj In notMatchArray
                                If notMatch <> "" Then
                                    notMatch &= ","
                                End If
                                notMatch &= singleObj
                            Next
                            Return notMatch
                    End Select
                Case Else
                    rtnData = False
                    CreateTXTLog(MethodName, False)
                    Return notMatch
            End Select
        Catch ex As Exception
            rtnData = False
            CreateTXTLog(MethodName, False)
            Return ex.Message
        End Try
    End Function

#End Region

#Region "### 資料庫查詢 ###"

    Private Shared ReadOnly OffTypeYY As String = "yy"
    Private Shared ReadOnly OffTypeQQ As String = "qq"
    Private Shared ReadOnly OffTypeMM As String = "mm"
    Private Shared ReadOnly OffTypeWK As String = "wk"
    Private Shared ReadOnly OffTypeDD As String = "dd"

    ''' <summary>
    ''' 清除CommandStr內容
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub clearCommandString()
        CommandStr.Remove(0, CommandStr.Length)
    End Sub

    ''' <summary>
    ''' 連接到資料庫 執行參數SQL
    ''' </summary>
    ''' <param name="DynamicSelect">SQL字串</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function dynamicQuery(ByRef DynamicSelect As String) As DataSet

        Dim sqlConn As SqlConnection = Nothing

        Try
            Dim ds As New DataSet
            sqlConn = getConnection()
            Dim command As SqlCommand = sqlConn.CreateCommand()
            command.CommandText = DynamicSelect
            Using adapter As SqlDataAdapter = New SqlDataAdapter(command)
                adapter.Fill(ds, "Query_Detail")
                adapter.FillSchema(ds, SchemaType.Mapped, "Query_Detail")
            End Using
            Return ds
        Catch ex As Exception
            Throw ex
        Finally
            If sqlConn IsNot Nothing Then
                sqlConn.Dispose()
            End If
        End Try
    End Function

    ''' <summary>
    ''' 連接到資料庫 執行參數SQL(SQL含暫用表格)
    ''' </summary>
    ''' <param name="SQLStr">SQL字串</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function dynamicQueryWithTempTable(ByVal SQLStr As String) As DataSet
        Try
            Dim instance As PUBDynamicBS = PUBDynamicBS.getInstance
            Return instance.dynamicQuery(SQLStr)
        Catch ex As Exception
            Throw ex
        End Try
    End Function

    Private Function dynamicQueryForEis(ByRef DynamicSelect As String) As DataSet

        Return PUBDynamicBS.getInstance.dynamicQueryForEis(DynamicSelect)
    End Function

    Private Function dynamicQueryNotPub(ByRef DynamicSelect As String) As DataSet
        Dim sqlConn As SqlConnection = Nothing

        Try
            Dim ds As New DataSet
            sqlConn = GetNotPubSqlConnection()
            Dim command As SqlCommand = sqlConn.CreateCommand()
            command.CommandText = DynamicSelect
            Using adapter As SqlDataAdapter = New SqlDataAdapter(command)
                adapter.Fill(ds, "Query_Detail")
                adapter.FillSchema(ds, SchemaType.Mapped, "Query_Detail")
            End Using
            Return ds
        Catch ex As Exception
            Throw ex
        Finally
            If sqlConn IsNot Nothing Then
                sqlConn.Dispose()
            End If
        End Try
    End Function

    Public Function dynamicQueryForPCS(ByRef DynamicSelect As String) As DataSet
        Dim sqlConn As SqlConnection = Nothing

        Try
            Dim ds As New DataSet
            sqlConn = GetPcsSqlConnection()
            Dim command As SqlCommand = sqlConn.CreateCommand()
            command.CommandText = DynamicSelect
            Using adapter As SqlDataAdapter = New SqlDataAdapter(command)
                adapter.Fill(ds, "Query_Detail")
                adapter.FillSchema(ds, SchemaType.Mapped, "Query_Detail")
            End Using
            Return ds
        Catch ex As Exception
            Throw ex
        Finally
            If sqlConn IsNot Nothing Then
                sqlConn.Dispose()
            End If
        End Try
    End Function

    Private Function dynamicQueryEmr(ByRef DynamicSelect As String) As DataSet

        Dim sqlConn As SqlConnection = Nothing

        Try
            Dim ds As New DataSet
            sqlConn = getEmrConnection()
            Dim command As SqlCommand = sqlConn.CreateCommand()
            command.CommandText = DynamicSelect
            Using adapter As SqlDataAdapter = New SqlDataAdapter(command)
                adapter.Fill(ds, "Query_Detail")
                adapter.FillSchema(ds, SchemaType.Mapped, "Query_Detail")
            End Using
            Return ds
        Catch ex As Exception
            Throw ex
        Finally
            If sqlConn IsNot Nothing Then
                sqlConn.Dispose()
            End If
        End Try
    End Function

    Private Function MuiltyTableSelect(ByVal DynamicSelect As String, ByVal TableNames() As String) As DataSet
        Dim sqlConn As SqlConnection = Nothing
        Try


            Dim ds As New DataSet
            sqlConn = getEmrConnection()
            Dim command As SqlCommand = sqlConn.CreateCommand()
            command.CommandText = DynamicSelect
            Using adapter As SqlDataAdapter = New SqlDataAdapter(command)
                'adapter.Fill(ds, "Query_Detail")
                'adapter.FillSchema(ds, SchemaType.Mapped, "Query_Detail")

                Dim i As Integer = 0
                For Each mytableName As String In TableNames
                    adapter.TableMappings.Add("Table" & i.ToString, mytableName)
                    i += 1
                Next
                adapter.Fill(ds)

                ds.Tables(0).TableName = TableNames(0)
            End Using
            Return ds
        Catch ex As Exception
            Throw ex
        Finally
            If sqlConn IsNot Nothing Then
                sqlConn.Dispose()
            End If
        End Try
    End Function

    Private Function getConnection() As IDbConnection
        Return SQLConnFactory.getInstance.getPubDBSqlConn
        'Return New SqlConnection("Data Source=172.16.20.54\mssql2008;Initial Catalog=hisDB;User ID=sa;Password=Administrat0r")
    End Function

    Private Function getEmrConnection() As IDbConnection
        Return SQLConnFactory.getInstance.getEmrDBSqlConn
    End Function


    ''' <summary>
    ''' 通用 醫令次數查詢醫令SQL
    ''' </summary>
    ''' <param name="Order_Codes">醫令資料(必要)</param>
    ''' <param name="Chart_No">病歷號(Option)</param>
    ''' <param name="ExecuteDateFormat">執行日期字串格式(Option)</param>
    ''' <param name="OffValue"></param>
    ''' <param name="OffType">傳入的OffType</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function CombineSummationOrderTimesSQL(ByVal Order_Codes() As String, ByVal Chart_No As String, ByVal ExecuteDateFormat As String, _
                                               ByVal OffValue As Integer, ByRef OffType As String) As Integer
        '查pub_order>> (Type_Id=31) E-藥品  D-共通性處置(行政類醫令) G-衛材 H-檢驗檢查 J-手術 K:麻醉  I-健保申報用
        '或寫ㄧ通用....

        'select COUNT(Total.Order_Code) as Cnt from
        '(
        ' Select Order_Code
        '  from dbo.OMO_Order_Record
        '  --where	Chart_No = '{chk_Chart_No_value}' and
        '  where	Order_Code in ('A003', 'A005', '000018')
        '		--	and Order_Time = '{chk_Order_Date_value}' 
        '		and Dc <> 'Y' 
        '        and Cancel <> 'Y'
        ' union	
        ' select Order_Code 
        '  from  dbo.OMO_Medication_History
        '  where	Chart_No = '00468686' 
        '        and Order_Code in ('A003', 'A005', '000018')
        '        and (Order_Date between dateadd(dd, -6, '2009/12/13') and '2009/12/13' )
        '        and Dc <> 'Y' 
        '        and Cancel <> 'Y'
        ' union	
        ' select Order_Code 
        '  from  dbo.OMO_Non_Medication_History
        '  where Chart_No = '00468686' 
        '		and Order_Code in ('A003', 'A005', '000018')
        '		and (Order_Date between dateadd(dd, -6, '2009/12/13') and '2009/12/13' )
        '		and Dc <> 'Y' 
        '        and Cancel <> 'Y'
        ') Total

        Dim SQLCommandStr As StringBuilder = New StringBuilder

        Dim OrdersStr As StringBuilder = New StringBuilder
        If Order_Codes IsNot Nothing AndAlso Order_Codes.Length > 0 Then
            For i As Integer = 0 To (Order_Codes.Length - 1)
                OrdersStr.Append("'").Append(Order_Codes(i).Trim).Append("'")

                If i <> (Order_Codes.Length - 1) Then
                    OrdersStr.Append(",")
                End If
            Next

            SQLCommandStr.AppendLine("select COUNT(Total.Order_Code) as Cnt from ")
            SQLCommandStr.AppendLine("(")
            SQLCommandStr.AppendLine(" select Order_Code ")
            SQLCommandStr.AppendLine("  from  dbo.OMO_Order_Record ")
            SQLCommandStr.Append("  where Order_Code in (").Append(OrdersStr).Append(") ").AppendLine(" ")
            SQLCommandStr.AppendLine("        and Dc <> 'Y' ")
            SQLCommandStr.AppendLine("        and Cancel <> 'Y' ")
            SQLCommandStr.AppendLine(" union ")
            SQLCommandStr.AppendLine(" select Order_Code ")
            SQLCommandStr.AppendLine("  from  dbo.OMO_Medication_History ")
            SQLCommandStr.AppendLine("  where ")
            SQLCommandStr.Append("        Order_Code in (").Append(OrdersStr).Append(") ").AppendLine(" ")
            If Chart_No IsNot Nothing AndAlso Chart_No.Length > 0 Then
                SQLCommandStr.Append("    and Chart_No = '").Append(Chart_No).Append("' ").AppendLine(" ")
            End If
            If ExecuteDateFormat IsNot Nothing AndAlso ExecuteDateFormat.Length > 0 Then
                SQLCommandStr.Append("        and (Order_Date between dateadd(").Append(OffType).Append(", -").Append(OffValue).Append(", '")
                SQLCommandStr.Append(ExecuteDateFormat).Append("') and '").Append(ExecuteDateFormat).Append("' ) ").AppendLine(" ")
            End If
            SQLCommandStr.AppendLine("        and Dc <> 'Y' ")
            SQLCommandStr.AppendLine("        and Cancel <> 'Y' ")
            SQLCommandStr.AppendLine(" union ")
            SQLCommandStr.AppendLine(" select Order_Code ")
            SQLCommandStr.AppendLine("  from  dbo.OMO_Non_Medication_History ")
            SQLCommandStr.AppendLine("  where ")
            SQLCommandStr.Append("        Order_Code in (").Append(OrdersStr).Append(") ").AppendLine(" ")
            If Chart_No IsNot Nothing AndAlso Chart_No.Length > 0 Then
                SQLCommandStr.Append("    and Chart_No = '").Append(Chart_No).Append("' ").AppendLine(" ")
            End If
            If ExecuteDateFormat IsNot Nothing AndAlso ExecuteDateFormat.Length > 0 Then
                SQLCommandStr.Append("    and (Order_Date between dateadd(").Append(OffType).Append(", -").Append(OffValue).Append(", '")
                SQLCommandStr.Append(ExecuteDateFormat).Append("') and '").Append(ExecuteDateFormat).Append("' ) ").AppendLine(" ")
            End If
            SQLCommandStr.AppendLine("        and Dc <> 'Y' ")
            SQLCommandStr.AppendLine("        and Cancel <> 'Y' ")
            SQLCommandStr.AppendLine(") Total ")
        End If

        'OffType  SELECT DATEADD(wk, DATEDIFF(wk,0,getdate()), 0)
        Dim ResultDS As DataSet = dynamicQueryNotPub(SQLCommandStr.ToString)
        If DataSetUtil.IsContainsData(ResultDS) Then
            If IsDBNull(ResultDS.Tables(0).Rows(0).Item("Cnt")) Then
                Return 0
            Else
                Return CType(ResultDS.Tables(0).Rows(0).Item("Cnt"), Integer)
            End If
        Else
            Return 0
        End If

    End Function

    ''' <summary>
    ''' 通用 藥品次數查詢醫令SQL
    ''' </summary>
    ''' <param name="Order_Codes">醫令資料(必要)</param>
    ''' <param name="Chart_No">病歷號(Option)</param>
    ''' <param name="ExecuteDateFormat">執行日期字串格式(Option)</param>
    ''' <param name="OffValue"></param>
    ''' <param name="OffType">傳入的OffType</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function CombineSummationMedicalDaysSQL(ByVal Order_Codes() As String, ByVal Chart_No As String, ByVal ExecuteDateFormat As String, _
                                               ByVal OffValue As Integer, ByRef OffType As String) As Integer
        '查pub_order>> (Type_Id=31) E-藥品  D-共通性處置(行政類醫令) G-衛材 H-檢驗檢查 J-手術 K:麻醉  I-健保申報用
        '或寫ㄧ通用....



        Dim SQLCommandStr As StringBuilder = New StringBuilder

        Dim OrdersStr As StringBuilder = New StringBuilder
        If Order_Codes IsNot Nothing AndAlso Order_Codes.Length > 0 Then
            For i As Integer = 0 To (Order_Codes.Length - 1)
                OrdersStr.Append("'").Append(Order_Codes(i).Trim).Append("'")

                If i <> (Order_Codes.Length - 1) Then
                    OrdersStr.Append(",")
                End If
            Next

            SQLCommandStr.AppendLine("select Sum(Total.Days) as TotalSum from ")
            SQLCommandStr.AppendLine("(")
            SQLCommandStr.AppendLine(" select Days ")
            SQLCommandStr.AppendLine("  from  dbo.OMO_Order_Record ")
            SQLCommandStr.Append("  where Order_Code in (").Append(OrdersStr).Append(") ").AppendLine(" ")
            SQLCommandStr.AppendLine("        and Dc <> 'Y' ")
            SQLCommandStr.AppendLine("        and Cancel <> 'Y' ")
            SQLCommandStr.AppendLine(" union ")
            SQLCommandStr.AppendLine(" select Days ")
            SQLCommandStr.AppendLine("  from  dbo.OMO_Medication_History ")
            SQLCommandStr.AppendLine("  where ")
            SQLCommandStr.Append("        Order_Code in (").Append(OrdersStr).Append(") ").AppendLine(" ")
            If Chart_No IsNot Nothing AndAlso Chart_No.Length > 0 Then
                SQLCommandStr.Append("    and Chart_No = '").Append(Chart_No).Append("' ").AppendLine(" ")
            End If
            If ExecuteDateFormat IsNot Nothing AndAlso ExecuteDateFormat.Length > 0 Then
                SQLCommandStr.Append("        and (Order_Date between dateadd(").Append(OffType).Append(", -").Append(OffValue).Append(", '")
                SQLCommandStr.Append(ExecuteDateFormat).Append("') and '").Append(ExecuteDateFormat).Append("' ) ").AppendLine(" ")
            End If
            SQLCommandStr.AppendLine("        and Dc <> 'Y' ")
            SQLCommandStr.AppendLine("        and Cancel <> 'Y' ")
            SQLCommandStr.AppendLine(") Total ")
        End If

        'OffType  SELECT DATEADD(wk, DATEDIFF(wk,0,getdate()), 0)
        Dim ResultDS As DataSet = dynamicQueryNotPub(SQLCommandStr.ToString)
        If DataSetUtil.IsContainsData(ResultDS) Then
            If IsDBNull(ResultDS.Tables(0).Rows(0).Item("TotalSum")) Then
                Return 0
            Else
                Return CType(ResultDS.Tables(0).Rows(0).Item("TotalSum"), Integer)
            End If
        Else
            Return 0
        End If

    End Function

    ''' <summary>
    ''' 通用 藥品次數查詢醫令SQL
    ''' </summary>
    ''' <param name="Order_Codes">醫令資料(必要)</param>
    ''' <param name="ColumnName">欄位名</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function CombineSummationColumnSQL(ByVal Order_Codes() As String, ByVal ColumnName As String) As Integer
        '查pub_order>> (Type_Id=31) E-藥品  D-共通性處置(行政類醫令) G-衛材 H-檢驗檢查 J-手術 K:麻醉  I-健保申報用
        '或寫ㄧ通用....

        Dim SQLCommandStr As StringBuilder = New StringBuilder

        Dim OrdersStr As StringBuilder = New StringBuilder
        If Order_Codes IsNot Nothing AndAlso Order_Codes.Length > 0 Then
            For i As Integer = 0 To (Order_Codes.Length - 1)
                OrdersStr.Append("'").Append(Order_Codes(i).Trim).Append("'")

                If i <> (Order_Codes.Length - 1) Then
                    OrdersStr.Append(",")
                End If
            Next

            SQLCommandStr.Append("select Sum(").Append(ColumnName).Append(") as TotalSum ").AppendLine(" ")
            SQLCommandStr.AppendLine("  from  dbo.OMO_Order_Record ")
            SQLCommandStr.AppendLine("  where Order_Code in (").Append(OrdersStr).Append(") ").AppendLine(" ")
            SQLCommandStr.AppendLine("        and Dc <> 'Y' ")
            SQLCommandStr.AppendLine("        and Cancel <> 'Y' ")
        End If

        Dim ResultDS As DataSet = dynamicQueryNotPub(SQLCommandStr.ToString)
        If DataSetUtil.IsContainsData(ResultDS) Then
            If IsDBNull(ResultDS.Tables(0).Rows(0).Item("TotalSum")) Then
                Return 0
            Else
                Return CType(ResultDS.Tables(0).Rows(0).Item("TotalSum"), Integer)
            End If
        Else
            Return 0
        End If

    End Function
#End Region

#Region "### 回傳清空 ###"
    Private Sub cleanReturnInfo()
        rtnData = Nothing
        rtnDataUnit = Nothing
        'rtnData1 = Nothing
        'rtnDataUnit1 = Nothing
    End Sub
#End Region

    Private Sub CreateTXTLog(ByVal ActionFunctionName As String, ByVal result As Boolean)
        '20110425 mark by Rich, 大中要求停用
        'Dim sysdate As Date = DateUtil.getSystemDate

        'Dim FilePath As String = "C:\result\Result.txt"


        'Dim sw As StreamWriter = New StreamWriter(FilePath, True)

        'sw.WriteLine("    -------------------------------------------------")

        'sw.WriteLine("    " & ActionFunctionName)

        'sw.WriteLine("    -------------------------------------------------")

        'sw.WriteLine("    是否成功? >> " & result)
        'sw.WriteLine("    --------")


        'If rtnData IsNot Nothing Then
        '    sw.WriteLine("    rtnData? >> " & rtnData)
        '    sw.WriteLine("    --------")
        'End If

        'If rtnDataUnit IsNot Nothing Then
        '    sw.WriteLine("    rtnDataUnit? >> " & rtnDataUnit)
        '    sw.WriteLine("    --------")
        'End If

        'sw.WriteLine("    -------------------------------------------------")

        ''關閉檔案
        'sw.Flush()
        'sw.Close()
    End Sub

    ''' <summary>
    ''' 1.sort內容(in and compare)
    ''' 2.產生所有集合索引的物件(0)
    ''' 3.match compare
    ''' 
    ''' 
    ''' 舉出元素所產生的集合列(索引>>對映值)
    ''' </summary>
    ''' <remarks></remarks>
    Private Class NofM
        Private m As Integer
        Private d_set() As Integer
        Private first As Boolean
        Private position As Integer
        Private element() As String
        Private mirrorElm() As String
        Private Sub New()

        End Sub
        Public Sub New(ByVal n_cnt As Integer, ByVal elementArray As String())
            m = elementArray.Length
            element = elementArray
            first = True
            position = n_cnt - 1
            ReDim d_set(n_cnt - 1)
            ReDim mirrorElm(n_cnt - 1)
            For i As Integer = 0 To (n_cnt - 1)
                d_set(i) = i + 1
            Next

        End Sub
        Public Function hasNext() As Boolean
            Return d_set(0) < (m - d_set.Length + 1)
        End Function

        Public Function toNext() As String()
            If first Then
                first = False

                'Return d_set
                For i As Integer = 0 To (d_set.Length - 1)
                    mirrorElm(i) = element(d_set(i) - 1)
                Next

                Return mirrorElm

            End If

            If d_set(d_set.Length - 1) = m Then
                position = position - 1
            Else
                position = d_set.Length - 1
            End If

            d_set(position) = d_set(position) + 1
            '調整右邊元素
            For i As Integer = (position + 1) To (d_set.Length - 1)
                d_set(i) = d_set(i - 1) + 1
            Next

            For i As Integer = 0 To (d_set.Length - 1)
                mirrorElm(i) = element(d_set(i) - 1)
            Next

            Return mirrorElm


        End Function
    End Class

    Private Function GenRtnDataTable() As DataTable
        Dim _dt As New DataTable
        _dt.TableName = "rtnTable"
        _dt.Columns.Add("rtnValueData", GetType(String))
        _dt.Columns.Add("rtnValueUnitCode", GetType(String))
        Return _dt
    End Function

#Region "Rule Engine API Added by Ken"

#Region "G01 ~ G06"

    ''' <summary>
    ''' 1.37 G01 最近一次完成檢驗項目X數值結果檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks>Medical_Record.Chart_No, Medical_Record.Order_Date, PUB_Rule.OperatorCode , PUB_Rule.ValueX , PUB_Rule.ValueData</remarks>
    Public Function G01_ChkLastExamTestValueByOrderCode() As Boolean

        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Medical_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd
                    Dim _valueData As Decimal = Decimal.Parse(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.TrimEnd)

                    Dim _orders As String() = _valueX.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

                    If _orders.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("G01_ChkLastExamTestValueByOrderCode", True)
                        Return True
                    End If

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT TOP 1 RTRIM(nn.Test_Value) AS Test_Value, " & vbCrLf)
                    var1.AppendFormat("             RTRIM(nn.[Unit])     AS [Unit] " & vbCrLf)
                    var1.AppendFormat("FROM   EMR_Examine_Num_Report nn " & vbCrLf)
                    var1.AppendFormat("WHERE  nn.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND nn.Item_Code IN (SELECT DISTINCT ItemCode " & vbCrLf)
                    var1.AppendFormat("                            FROM   dbo.SysOrderLabItem " & vbCrLf)
                    var1.AppendFormat("                            WHERE  OrderCode IN ( {0} )) " & vbCrLf, "'" & String.Join("','", _orders) & "'")
                    var1.AppendFormat("ORDER  BY nn.confirm_Time DESC " & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As New DataTable
                    _rtnDt.TableName = "rtnTable"
                    _rtnDt.Columns.Add("rtnValueData", GetType(String))
                    _rtnDt.Columns.Add("rtnValueUnitCode", GetType(String))
                    For Each _drResult As DataRow In _dtResult.Rows
                        Dim _newDr As DataRow = _rtnDt.NewRow
                        _newDr("rtnValueData") = _drResult("Test_Value")
                        _newDr("rtnValueUnitCode") = _drResult("Unit")
                        _rtnDt.Rows.Add(_newDr)
                    Next
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                    If Not DataSetUtil.IsContainsData(resultDS) Then '若找不到資料
                        rtnData = False
                        CreateTXTLog("G01_ChkLastExamTestValueByOrderCode", True)
                        Return True
                    End If

                    Dim _TestValue As Decimal = Decimal.Parse(_dtResult.Rows(0)("Test_Value"))
                    Dim _Unit As String = _dtResult.Rows(0)("Unit").ToString.TrimEnd

                    Select Case _operatorCode
                        Case "01"
                            If _TestValue > _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "04"
                            If _TestValue >= _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "03"
                            If _TestValue < _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "05"
                            If _TestValue <= _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "02"
                            If _TestValue = _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "06"
                            If _TestValue <> _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case Else
                            rtnData = False
                            CreateTXTLog("G01_ChkLastExamTestValueByOrderCode", True)
                            Return True
                    End Select

                    rtnDataValue = _TestValue
                    rtnDataUnitValue = ""
                    CreateTXTLog("G01_ChkPreviousCureTimeInterval", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("G01_ChkLastExamTestValueByOrderCode", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("G01_ChkLastExamTestValueByOrderCode", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.38 G02 X日內,完成檢驗項目Y數值結果檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function G02_ChkSpecificExamTestValueByOrderCode() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueY")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd '天數
                    Dim _valueY As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueY").ToString.TrimEnd 'Order_Code s
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.TrimEnd

                    Dim _orders As String() = _valueY.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)
                    Dim _values As String() = _valueData.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

                    If _orders.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("G02_ChkSpecificExamTestValueByOrderCode", True)
                        Return True
                    End If

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT RTRIM(nn.Test_Value) AS Test_Value, " & vbCrLf)
                    var1.AppendFormat("       RTRIM(nn.[Unit])     AS Unit " & vbCrLf)
                    var1.AppendFormat("FROM   EMR_Examine_Num_Report nn " & vbCrLf)
                    var1.AppendFormat("WHERE  nn.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND nn.confirm_Time >= DATEADD(dd, 0-{0}, '{1}') " & vbCrLf, _valueX, _orderDate)
                    var1.AppendFormat("       AND nn.Item_Code IN (SELECT DISTINCT ItemCode " & vbCrLf)
                    var1.AppendFormat("                            FROM   dbo.SysOrderLabItem " & vbCrLf)
                    var1.AppendFormat("                            WHERE  OrderCode IN ( {0} )) " & vbCrLf, "'" & String.Join("','", _orders) & "'")
                    var1.AppendFormat("ORDER  BY nn.confirm_Time DESC " & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As New DataTable
                    _rtnDt.TableName = "rtnTable"
                    _rtnDt.Columns.Add("rtnValueData", GetType(String))
                    _rtnDt.Columns.Add("rtnValueUnitCode", GetType(String))
                    For Each _drResult As DataRow In _dtResult.Rows
                        Dim _newDr As DataRow = _rtnDt.NewRow
                        _newDr("rtnValueData") = _drResult("Test_Value")
                        _newDr("rtnValueUnitCode") = _drResult("Unit")
                        _rtnDt.Rows.Add(_newDr)
                    Next
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                    If Not DataSetUtil.IsContainsData(resultDS) Then '若找不到資料
                        rtnData = False
                        CreateTXTLog("G01_ChkLastExamTestValueByOrderCode", True)
                        Return True
                    End If

                    Dim _testValues = _dtResult.AsEnumerable.Select(Function(r) New With {.Test_Value = Decimal.Parse(r("Test_Value").ToString), .Unit = r("Unit").ToString})

                    Select Case _operatorCode
                        Case "01"
                            Dim _result As Boolean = False
                            For Each _value As String In _values
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value > Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value > Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value > Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "04"
                            Dim _result As Boolean = False
                            For Each _value As String In _values
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value >= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "03"
                            Dim _result As Boolean = False
                            For Each _value As String In _values
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value < Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "05"
                            Dim _result As Boolean = False
                            For Each _value As String In _values
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value <= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <= Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "02"
                            Dim _result As Boolean = False
                            For Each _value As String In _values
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value <= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value = Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "06"
                            Dim _result As Boolean = False
                            For Each _value As String In _values
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_splitedValues(0)) OrElse r.Test_Value > Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <> Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case Else
                            rtnData = False
                            CreateTXTLog("G01_ChkLastExamTestValueByOrderCode", True)
                            Return True
                    End Select

                    CreateTXTLog("G02_ChkSpecificExamTestValueByOrderCode", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("G02_ChkSpecificExamTestValueByOrderCode", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("G02_ChkSpecificExamTestValueByOrderCode", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.39 G03 最近一次完成檢查項目X報告結果檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function G03_ChkLastExamReportTextByOrderCode() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim

                    Dim _orders As String() = _valueX.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

                    If _orders.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("G03_ChkLastExamReportTextByOrderCode", True)
                        Return True
                    End If

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT TOP 1 ss.Report_Text " & vbCrLf)
                    var1.AppendFormat("FROM   EMR_Examine_State_Report ss " & vbCrLf)
                    var1.AppendFormat("WHERE  ss.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND ss.Order_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _orders) & "'")
                    'var1.AppendFormat("       AND ss.Report_Text LIKE '%{0}%' " & vbCrLf, _valueData)
                    var1.AppendFormat("ORDER  BY ss.confirm_Time DESC " & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = Me.GenRtnDataTable()
                    For Each _drResult As DataRow In _dtResult.Rows
                        Dim _newDr As DataRow = _rtnDt.NewRow
                        _newDr("rtnValueData") = _drResult("Report_Text")
                        _newDr("rtnValueUnitCode") = String.Empty
                        _rtnDt.Rows.Add(_newDr)
                    Next
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                    Dim _valueDataLower As String = _valueData.ToLower
                    If _dtResult.AsEnumerable.Any(Function(r) r("Report_Text").ToString.ToLower.Contains(_valueDataLower)) Then
                        rtnData = True
                    Else
                        rtnData = False
                    End If

                    CreateTXTLog("G03_ChkLastExamReportTextByOrderCode", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("G03_ChkLastExamReportTextByOrderCode", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("G03_ChkLastExamReportTextByOrderCode", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.40 G04 X日內,完成檢查項目Y報告結果檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function G04_ChkSpecificExamReportTextByOrderCode() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueY")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd '天數
                    Dim _valueY As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueY").ToString.TrimEnd 'Order_Code s
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.TrimEnd

                    Dim _orders As String() = _valueY.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

                    If _orders.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("G04_ChkSpecificExamReportTextByOrderCode", True)
                        Return True
                    End If

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT TOP 1 ss.Report_Text " & vbCrLf)
                    var1.AppendFormat("FROM   EMR_Examine_State_Report ss " & vbCrLf)
                    var1.AppendFormat("WHERE  ss.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND ss.confirm_Time >= DATEADD(dd, 0 - {0}, '{1}') " & vbCrLf, _valueX, _orderDate)
                    var1.AppendFormat("       AND ss.Order_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _orders) & "'")
                    'var1.AppendFormat("       AND ss.Report_Text LIKE '%{0}%' " & vbCrLf, _valueData)
                    var1.AppendFormat("ORDER  BY ss.confirm_Time DESC " & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = Me.GenRtnDataTable()
                    For Each _drResult As DataRow In _dtResult.Rows
                        Dim _newDr As DataRow = _rtnDt.NewRow
                        _newDr("rtnValueData") = _drResult("Report_Text")
                        _newDr("rtnValueUnitCode") = String.Empty
                        _rtnDt.Rows.Add(_newDr)
                    Next
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                    Dim _valueDataLower As String = _valueData.ToLower
                    If _dtResult.AsEnumerable.Any(Function(r) r.Field(Of String)("Report_Text").ToLower.Contains(_valueDataLower)) Then
                        rtnData = True
                    Else
                        rtnData = False
                    End If

                    CreateTXTLog("G04_ChkSpecificExamReportTextByOrderCode", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("G04_ChkSpecificExamReportTextByOrderCode", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("G04_ChkSpecificExamReportTextByOrderCode", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.41 G05 最近一次完成檢驗名稱X數值結果檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function G05_ChkLastExamTestValueByTestName() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT TOP 1 RTRIM(nn.Test_Value) AS Test_Value, " & vbCrLf)
                    var1.AppendFormat("             RTRIM(nn.[Unit])     AS [Unit] " & vbCrLf)
                    var1.AppendFormat("FROM   EMR_Examine_Num_Report nn " & vbCrLf)
                    var1.AppendFormat("WHERE  nn.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND nn.Test_Name = '{0}' " & vbCrLf, _valueX)
                    var1.AppendFormat("ORDER  BY nn.confirm_Time DESC " & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = Me.GenRtnDataTable()
                    For Each _drResult As DataRow In _dtResult.Rows
                        Dim _newDr As DataRow = _rtnDt.NewRow
                        _newDr("rtnValueData") = _drResult("Test_Value")
                        _newDr("rtnValueUnitCode") = _drResult("Unit")
                        _rtnDt.Rows.Add(_newDr)
                    Next
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                    If Not DataSetUtil.IsContainsData(resultDS) Then '若找不到資料
                        rtnData = False
                        CreateTXTLog("G05_ChkLastExamTestValueByTestName", True)
                        Return True
                    End If

                    Dim _testValues = _dtResult.AsEnumerable.Select(Function(r) New With {.Test_Value = Decimal.Parse(r("Test_Value").ToString), .Unit = r("Unit").ToString})
                    Dim _valueDatas As String() = _valueData.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

                    Select Case _operatorCode
                        Case "01"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value > Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value > Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value > Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "04"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value >= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "03"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value < Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "05"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value <= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <= Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "02"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value <= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value = Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "06"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_splitedValues(0)) OrElse r.Test_Value > Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <> Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case Else
                            rtnData = False
                            CreateTXTLog("G05_ChkLastExamTestValueByTestName", True)
                            Return True
                    End Select

                    CreateTXTLog("G05_ChkLastExamTestValueByTestName", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("G05_ChkLastExamTestValueByTestName", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("G05_ChkLastExamTestValueByTestName", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.42 G06 X日內,完成檢驗項目名稱Y數值結果檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function G06_ChkSpecificExamTestValueByTestName() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '天數
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueY") '檢驗項目名稱Test_Name
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData") '規則設定檢核值

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd
                    Dim _valueY As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueY").ToString.TrimEnd
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT TOP 1 RTRIM(nn.Test_Value) AS Test_Value, " & vbCrLf)
                    var1.AppendFormat("             RTRIM(nn.[Unit])     AS [Unit] " & vbCrLf)
                    var1.AppendFormat("FROM   EMR_Examine_Num_Report nn " & vbCrLf)
                    var1.AppendFormat("WHERE  nn.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND nn.confirm_Time >= DATEADD(dd, 0 - {0}, '{1}') " & vbCrLf, _valueX, _orderDate)
                    var1.AppendFormat("       AND nn.Test_Name = '{0}' " & vbCrLf, _valueY)
                    var1.AppendFormat("ORDER  BY nn.confirm_Time DESC " & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = Me.GenRtnDataTable()
                    For Each _drResult As DataRow In _dtResult.Rows
                        Dim _newDr As DataRow = _rtnDt.NewRow
                        _newDr("rtnValueData") = _drResult("Test_Value")
                        _newDr("rtnValueUnitCode") = _drResult("Unit")
                        _rtnDt.Rows.Add(_newDr)
                    Next
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                    If Not DataSetUtil.IsContainsData(resultDS) Then '若找不到資料
                        rtnData = False
                        CreateTXTLog("G06_ChkSpecificExamTestValueByTestName", True)
                        Return True
                    End If

                    Dim _testValues = _dtResult.AsEnumerable.Select(Function(r) New With {.Test_Value = Decimal.Parse(r("Test_Value").ToString), .Unit = r("Unit").ToString})
                    Dim _valueDatas As String() = _valueData.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

                    Select Case _operatorCode
                        Case "01"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value > Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value > Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value > Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "04"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value >= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "03"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value < Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "05"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value <= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <= Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "02"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value >= Decimal.Parse(_splitedValues(0)) AndAlso r.Test_Value <= Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value = Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case "06"
                            Dim _result As Boolean = False
                            For Each _value As String In _valueDatas
                                Dim _tmpValues As String = _value.Replace(" ", "")
                                If Me.IsRangeMatch(_value) Then '若為range
                                    Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value < Decimal.Parse(_splitedValues(0)) OrElse r.Test_Value > Decimal.Parse(_splitedValues(1))))

                                Else '若不為range
                                    _result = _result OrElse (_testValues.Any(Function(r) r.Test_Value <> Decimal.Parse(_tmpValues)))
                                End If
                            Next
                            rtnData = _result
                        Case Else
                            rtnData = False
                            CreateTXTLog("G06_ChkSpecificExamTestValueByTestName", True)
                            Return True
                    End Select

                    CreateTXTLog("G06_ChkSpecificExamTestValueByTestName", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("G06_ChkSpecificExamTestValueByTestName", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("G06_ChkSpecificExamTestValueByTestName", False)
            Return False
        End Try
    End Function


    ''' <summary>
    ''' 1.42 G07 X日內,完成醫令 Y數值結果檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function _ChkExamOrderTimesInSpecificDay() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Order_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '天數
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueY") '檢驗項目名稱Test_Name
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData") '規則設定檢核值

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToString("yyyy/MM/dd HH:mm:ss")

                    Dim _Order_code As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Order_Code").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd
                    Dim _valueY As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueY").ToString.TrimEnd
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim _orderEnd_date As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).AddDays(CInt(_valueX)).ToString("yyyy/MM/dd HH:mm:ss")
                    Dim var1 As New System.Text.StringBuilder
                    Dim var2 As New System.Text.StringBuilder
                    '先判斷是否是 range

                    If _valueY.Contains("-") Then
                        rtnData = 0
                        rtnDataUnit = ""
                    Else
                        If Not _valueY.Contains("'") Then
                            _valueY = "('" & _valueY.Replace(",", "','") & "')"
                        End If

                        var1.Append("Select * from EMR_Examine_Num_Report as EENR ")
                        var1.Append(" inner join EMR_Examine_Record as EER  on EER.Chart_no=EENR.Chart_No and EER.Medical_Sn=EENR.Medical_Sn and EER.Request_No =EENR.Request_No")
                        var1.Append(" where EENR.Chart_no='" & _chartNo & "' and EENR.Order_code in " & _valueY & "and     EER.Execute_Time between '" & _orderDate & "' and '" & _orderEnd_date & "'")
                        var1.Append("Select * from EMR_Examine_State_Report as EENR ")
                        var1.Append(" inner join EMR_Examine_Record as EER  on EER.Chart_no=EENR.Chart_No and EER.Medical_Sn=EENR.Medical_Sn and EER.Request_No =EENR.Request_No")
                        var1.Append(" where EENR.Chart_no='" & _chartNo & "' and EENR.Order_code in " & _valueY & "and     EER.Execute_Time between '" & _orderDate & "' and '" & _orderEnd_date & "'")

                        Dim DS1 As DataSet = dynamicQueryEmr(var1.ToString)
                        Dim ds2 As DataSet = dynamicQueryEmr(var2.ToString)
                        rtnData = DS1.Tables(0).Rows.Count + ds2.Tables(0).Rows.Count
                        rtnDataUnit = ""
                    End If
                    CreateTXTLog("G07_ChkExamOrderTimesInSpecificDays", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("G07_ChkExamOrderTimesInSpecificDays", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("G07_ChkExamOrderTimesInSpecificDays", False)
            Return False
        End Try
    End Function
#End Region

#Region "K03 ~ K06, K15 ~ K18"

    ''' <summary>
    ''' 1.52 K03 慢性病檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function K03_ChkChronicDisease() As Boolean
        cleanReturnInfo()
        rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "Diagnosis"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date") '就醫日
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code") 'icd9集合

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _dtDiagnosis As DataTable = pubreapi.Tables("Diagnosis")
                    Dim _dtDiagnosisE As EnumerableRowCollection(Of DataRow) = _dtDiagnosis.AsEnumerable

                    Dim _icdCodes = _dtDiagnosisE.Select(Function(r) r.Field(Of String)("Icd_Code")).ToArray

                    If _icdCodes.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("K03_ChkChronicDisease", True)
                        Return True
                    End If

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT COUNT(Icd_Code) AS [Count] " & vbCrLf)
                    var1.AppendFormat("FROM   PUB_Disease " & vbCrLf)
                    var1.AppendFormat("WHERE  ( '{0}' BETWEEN Effect_Date AND End_Date ) " & vbCrLf, _orderDate)
                    var1.AppendFormat("       AND Icd_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _icdCodes) & "'")
                    var1.AppendFormat("       AND Is_Chronic_Disease = 'Y' " & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)
                    Dim _count As Int32 = _dtResult.Rows(0)("Count")

                    If _count = 0 Then
                        rtnData = False
                    Else
                        rtnData = True
                    End If
                    CreateTXTLog("K03_ChkChronicDisease", True)
                    Return True
                End If
            End If
            rtnData = False
            CreateTXTLog("K03_ChkChronicDisease", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K03_ChkChronicDisease", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.53 K04 重大傷病檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function K04_ChkSevereDisease() As Boolean
        cleanReturnInfo()
        rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "Diagnosis"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date") '就醫日
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code") 'icd9集合

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _dtDiagnosis As DataTable = pubreapi.Tables("Diagnosis")
                    Dim _dtDiagnosisE As EnumerableRowCollection(Of DataRow) = _dtDiagnosis.AsEnumerable

                    Dim _icdCodes = _dtDiagnosisE.Where(Function(r) (Not IsDBNull(r("Icd_Code"))) AndAlso r.Field(Of String)("Icd_Code") <> String.Empty).Select(Function(r) r.Field(Of String)("Icd_Code")).ToArray

                    If _icdCodes.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("K04_ChkSevereDisease", True)
                        Return True
                    End If

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT COUNT(Icd_Code) AS [Count] " & vbCrLf)
                    var1.AppendFormat("FROM   PUB_Disease " & vbCrLf)
                    var1.AppendFormat("WHERE  ( '{0}' BETWEEN Effect_Date AND End_Date ) " & vbCrLf, _orderDate)
                    var1.AppendFormat("       AND Icd_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _icdCodes) & "'")
                    var1.AppendFormat("       AND Is_Severe_Disease = 'Y' " & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)
                    Dim _count As Int32 = _dtResult.Rows(0)("Count")

                    If _count = 0 Then
                        rtnData = False
                    Else
                        rtnData = True
                    End If
                    CreateTXTLog("K04_ChkSevereDisease", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("K04_ChkSevereDisease", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K04_ChkSevereDisease", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.54 K05 病歷記載病史(ICD9=X)時間檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function K05_ChkSpecificIcd9TimeInterval() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                'AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueDataUnit")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.TrimEnd
                    'Dim _valueDataUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueDataUnit").ToString.TrimEnd

                    Dim _icdCodes As String() = _valueX.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

                    If _icdCodes.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("K05_ChkSpecificIcd9TimeInterval", True)
                        Return True
                    End If

                    Dim _icdsRange = _icdCodes.Where(Function(r) Me.IsRangeMatch(r))
                    Dim _icdsNotRange = _icdCodes.Where(Function(r) Not Me.IsRangeMatch(r))

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT MIN(Trans_Time) AS Trans_Time " & vbCrLf)
                    var1.AppendFormat("FROM   EMR_Medical_Diagnosis " & vbCrLf)
                    var1.AppendFormat("WHERE  '{0}' >= Trans_Time " & vbCrLf, _orderDate)
                    var1.AppendFormat("       AND Chart_No = '{0}'  " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND ( 0 = 1  " & vbCrLf, _orderDate)
                    var1.AppendFormat("              OR Icd_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _icdsNotRange.ToArray) & "'")

                    For Each _icdRange As String In _icdsRange
                        Dim _tmpValues As String = _icdRange
                        Dim _splitedValues As String() = Me.ParseRangeValue(_tmpValues)

                        var1.AppendFormat("              OR ( Icd_Code >= '{0}' " & vbCrLf, _splitedValues(0))
                        var1.AppendFormat("                   AND Icd_Code <= '{0}' ) " & vbCrLf, _splitedValues(1))
                    Next
                    var1.Append(" )" & vbCrLf)

                    clearCommandString()

                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQueryEmr(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '==填寫回傳之Table==
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = Me.GenRtnDataTable
                    For Each _drResult As DataRow In _dtResult.Rows
                        Dim _rtnDr As DataRow = _rtnDt.NewRow
                        If IsDBNull(_drResult("Trans_Time")) Then
                            _rtnDr("rtnValueData") = String.Empty
                        Else
                            _rtnDr("rtnValueData") = _drResult.Field(Of Date)("Trans_Time").ToShortDateString
                        End If
                        _rtnDr("rtnValueUnitCode") = String.Empty

                        _rtnDt.Rows.Add(_rtnDr)
                    Next
                    _rtnDs.Tables.Add(_rtnDt)
                    '==========

                    Dim _days As Int32 = 0
                    If _dtResult.Rows.Count = 0 OrElse IsDBNull(_dtResult.Rows(0)("Trans_Time")) Then
                        _days = 0
                    Else
                        Dim _earliestDateX As DateTime = _dtResult.Rows(0).Field(Of DateTime)("Trans_Time")
                        Dim _orderDateX As DateTime = Date.Parse(_orderDate)

                        Dim _span = _orderDateX - _earliestDateX
                        _days = _span.Days
                    End If

                    Select Case _operatorCode
                        Case "01"
                            If _days > _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "04"
                            If _days >= _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "03"
                            If _days < _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "05"
                            If _days <= _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "02"
                            If _days = _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "06"
                            If _days <> _valueData Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case Else
                            rtnData = False
                            CreateTXTLog("K05_ChkSpecificIcd9TimeInterval", True)
                            Return True
                    End Select

                    CreateTXTLog("K05_ChkSpecificIcd9TimeInterval", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("K05_ChkSpecificIcd9TimeInterval", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K05_ChkSpecificIcd9TimeInterval", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.55 K06 慢箋醫令前X適應症檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function K06_ChkChronicOrderBySpecificIcd() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Diagnosis"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Sort_Value")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")


                If checkAllContainColumnIn(CheckTable) Then
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd
                    Dim _dtDiagnosis As DataTable = pubreapi.Tables("Diagnosis")
                    Dim _dtDiagnosisE As EnumerableRowCollection(Of DataRow) = _dtDiagnosis.AsEnumerable

                    Dim _IcdCodes = _dtDiagnosisE.Where(Function(r) Not IsDBNull(r("Icd_Code") AndAlso r.Field(Of String)("Icd_Code") <> String.Empty)).Select(Function(r) New With {.Icd_Code = r("Icd_Code").ToString.TrimEnd, .Icd_Sort_Value = CInt(r("Icd_Sort_Value"))})

                    Dim _result As Boolean = False
                    Dim _x As Int32 = Int32.Parse(_valueX)
                    For Each _icdCode In _IcdCodes
                        If _icdCode.Icd_Sort_Value > _x Then Continue For
                        Dim var1 As New System.Text.StringBuilder
                        var1.AppendFormat("SELECT COUNT(Icd_Code) AS Cnt " & vbCrLf)
                        var1.AppendFormat("FROM   PUB_Disease " & vbCrLf)
                        var1.AppendFormat("WHERE  Icd_Code = '{0}' " & vbCrLf, _icdCode.Icd_Code)
                        var1.AppendFormat("       AND Is_Chronic_Disease = 'Y' " & vbCrLf)
                        var1.AppendFormat("       AND ( '{0}' BETWEEN Effect_Date AND End_Date ) " & vbCrLf, _orderDate)

                        clearCommandString()
                        CommandStr = var1
                        Dim resultDS As DataSet = dynamicQuery(CommandStr.ToString)
                        Dim _dtResult As DataTable = resultDS.Tables(0)

                        Dim _cnt As Int32 = 0
                        If _dtResult.Rows.Count <> 0 Then
                            _cnt = _dtResult.Rows(0).Field(Of Int32)("Cnt")
                        End If

                        If _cnt > 0 Then _result = _result Or True

                        If _result Then
                            Exit For
                        End If
                    Next

                    rtnData = _result
                    CreateTXTLog("K06_ChkChronicOrderBySpecificIcd", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("K06_ChkChronicOrderBySpecificIcd", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K06_ChkChronicOrderBySpecificIcd", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.56 K15 特殊治療項檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function K15_ChkMajorcareCode() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Majorcare_Code1")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Majorcare_Code2")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Majorcare_Code3")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Majorcare_Code4")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _majorcareCode1 As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Majorcare_Code1").ToString.TrimEnd
                    Dim _majorcareCode2 As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Majorcare_Code2").ToString.TrimEnd
                    Dim _majorcareCode3 As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Majorcare_Code3").ToString.TrimEnd
                    Dim _majorcareCode4 As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Majorcare_Code4").ToString.TrimEnd
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.TrimEnd
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim

                    Dim _majorcareCodeList As New List(Of String)
                    If Not (_majorcareCode1 = String.Empty) Then
                        _majorcareCodeList.Add(_majorcareCode1)
                    End If
                    If Not (_majorcareCode2 = String.Empty) Then
                        _majorcareCodeList.Add(_majorcareCode2)
                    End If
                    If Not (_majorcareCode3 = String.Empty) Then
                        _majorcareCodeList.Add(_majorcareCode3)
                    End If
                    If Not (_majorcareCode4 = String.Empty) Then
                        _majorcareCodeList.Add(_majorcareCode4)
                    End If

                    If _majorcareCodeList.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("K15_ChkMajorcareCode", True)
                        Return True
                    End If

                    Dim _valueDatas As String() = _valueData.Replace(" ", "").Split(New Char() {","})

                    Select Case _operatorCode
                        Case "01"
                            If _majorcareCodeList.Any(Function(r) _valueDatas.Any(Function(r2) r > r2)) Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "04"
                            If _majorcareCodeList.Any(Function(r) _valueDatas.Any(Function(r2) r >= r2)) Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "03"
                            If _majorcareCodeList.Any(Function(r) _valueDatas.Any(Function(r2) r < r2)) Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "05"
                            If _majorcareCodeList.Any(Function(r) _valueDatas.Any(Function(r2) r <= r2)) Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "02"
                            If _majorcareCodeList.Any(Function(r) _valueDatas.Any(Function(r2) r = r2)) Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case "06"
                            If _majorcareCodeList.Any(Function(r) _valueDatas.Any(Function(r2) r <> r2)) Then
                                rtnData = True
                            Else
                                rtnData = False
                            End If
                        Case Else
                            rtnData = False
                            CreateTXTLog("K15_ChkMajorcareCode", True)
                            Return True
                    End Select

                    CreateTXTLog("K15_ChkMajorcareCode", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("K15_ChkMajorcareCode", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K15_ChkMajorcareCode", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.57 K16 職業傷害診斷病檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function K16_ChkOccInjuryDisease() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "Diagnosis"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _dtDiagnosis As DataTable = pubreapi.Tables("Diagnosis")

                    Dim _icdCodes As EnumerableRowCollection(Of String) = _dtDiagnosis.AsEnumerable.Where(Function(r) r("Icd_Code").ToString <> String.Empty).Select(Function(r) r.Field(Of String)("Icd_Code"))

                    If _icdCodes.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("K16_ChkOccInjuryDisease", True)
                        Return True
                    End If

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT COUNT(Icd_Code) AS Cnt " & vbCrLf)
                    var1.AppendFormat("FROM   PUB_Disease " & vbCrLf)
                    var1.AppendFormat("WHERE  ( '{0}' BETWEEN Effect_Date AND End_Date ) " & vbCrLf, _orderDate)

                    If _icdCodes.Count <= 3 Then
                        var1.AppendFormat("       AND Icd_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _icdCodes.ToArray) & "'")
                    Else
                        var1.AppendFormat("       AND Icd_Code IN ( '{0}', '{1}', '{2}' ) " & vbCrLf, _icdCodes(0), _icdCodes(1), _icdCodes(2))
                    End If

                    var1.AppendFormat("       AND Is_Occ_Injury = 'Y' " & vbCrLf)


                    clearCommandString()
                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    If _dtResult.Rows.Count = 0 OrElse _dtResult.Rows(0)("Cnt") = 0 Then
                        rtnData = False
                    Else
                        rtnData = True
                    End If
                    CreateTXTLog("K16_ChkOccInjuryDisease", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("K16_ChkOccInjuryDisease", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K16_ChkOccInjuryDisease", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.58 K17 HIV病患身分檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function K17_ChkHIVPatientRecord() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT COUNT(Chart_No) AS Cnt " & vbCrLf)
                    var1.AppendFormat("FROM   PUB_Patient_Health_Card " & vbCrLf)
                    var1.AppendFormat("WHERE  Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND ( '{0}' BETWEEN Effect_Date AND End_Date ) " & vbCrLf, _orderDate)
                    var1.AppendFormat("       AND Health_Card_Class = 'A' " & vbCrLf)

                    clearCommandString()
                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    If _dtResult.Rows.Count = 0 OrElse _dtResult.Rows(0)("Cnt") = 0 Then
                        rtnData = False
                    Else
                        rtnData = True
                    End If

                    CreateTXTLog("K16_ChkOccInjuryDisease", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("K17_ChkHIVPatientRecord", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K17_ChkHIVPatientRecord", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.59 K18 精神重大傷病身分檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function K18_ChkPsySevereDisease() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "Diagnosis"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _dtDiagnosis As DataTable = pubreapi.Tables("Diagnosis")

                    Dim _icdCodes As EnumerableRowCollection(Of String) = _dtDiagnosis.AsEnumerable.Where(Function(r) r("Icd_Code").ToString <> String.Empty).Select(Function(r) r.Field(Of String)("Icd_Code"))

                    If _icdCodes.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("K18_ChkPsySevereDisease", True)
                        Return True
                    End If

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT COUNT(Icd_Code) AS Cnt " & vbCrLf)
                    var1.AppendFormat("FROM   PUB_Disease " & vbCrLf)
                    var1.AppendFormat("WHERE  ( '{0}' BETWEEN Effect_Date AND End_Date ) " & vbCrLf, _orderDate)

                    If _icdCodes.Count <= 3 Then
                        var1.AppendFormat("       AND Icd_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _icdCodes.ToArray) & "'")
                    Else
                        var1.AppendFormat("       AND Icd_Code IN ( '{0}', '{1}', '{2}' ) " & vbCrLf, _icdCodes(0), _icdCodes(1), _icdCodes(2))
                    End If

                    var1.AppendFormat("       AND Is_Psy_Severe_Disease = 'Y' " & vbCrLf)

                    clearCommandString()
                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    If _dtResult.Rows.Count = 0 OrElse _dtResult.Rows(0)("Cnt") = 0 Then
                        rtnData = False
                    Else
                        rtnData = True
                    End If
                    CreateTXTLog("K18_ChkPsySevereDisease", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("K18_ChkPsySevereDisease", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K18_ChkPsySevereDisease", False)
            Return False
        End Try
    End Function

#End Region

#Region "H4, H12, H16, H60"

    ''' <summary>
    ''' 1.45 H04 限藥品累計天數檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function H04_ChkAccumulatedDays() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode") '觸發該規則的項目代碼
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData") '觸發該規則的設定值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountO") '計算門診
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountE") '計算急診
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountI") '計算住院

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.TrimEnd
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.TrimEnd
                    Dim _isCountO As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountO").ToString.TrimEnd
                    Dim _isCountE As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountE").ToString.Trim
                    Dim _isCountI As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountI").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    _dtOrderRecordE = _dtOrderRecordE.Where(Function(r) r("Order_Code") = _triggerValueData And Not IsDBNull(r("Days")))

                    rtnData = 0
                    Dim _tdayNow As Int32 = 0
                    Dim _tdayBefore As Int32 = 0
                    Select Case _triggerItemCode
                        Case "A00004"
                            Dim x = _dtOrderRecordE.Where(Function(r) r("Order_Code") = _triggerValueData)
                            If x.Count > 0 Then
                                _tdayNow += x.Sum(Function(r) r("Days"))
                            End If

                            '查詢歷史資料
                            ' For Each _drOrderRecord As DataRow In _dtOrderRecordE
                            'Dim _orderCode As String = _drOrderRecord("Order_Code").ToString.TrimEnd

                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL(SUM(mm.Days), 0) AS Tday_Now " & vbCrLf)
                            var1.AppendFormat("FROM   EMR_Medicine_Record mm " & vbCrLf)
                            var1.AppendFormat("       LEFT JOIN EMR_Medical_Record ee " & vbCrLf)
                            var1.AppendFormat("         ON ( mm.Chart_No = ee.Chart_No " & vbCrLf)
                            var1.AppendFormat("              AND mm.Medical_Sn = ee.Medical_Sn ) " & vbCrLf)
                            var1.AppendFormat("WHERE  mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("       AND mm.Order_Code = '{0}' " & vbCrLf, _triggerValueData)
                            var1.AppendFormat("       AND mm.Dc = 'N' " & vbCrLf)
                            var1.AppendFormat("       AND ( ee.Source_Type_Id IS NULL " & vbCrLf)
                            If _isCountE = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'E' " & vbCrLf)
                            End If
                            If _isCountI = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'I' " & vbCrLf)
                            End If
                            If _isCountO = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'O' " & vbCrLf)
                            End If
                            var1.AppendFormat("            )  " & vbCrLf)

                            clearCommandString()

                            CommandStr = var1
                            Dim _dsTdayNow As DataSet = dynamicQueryEmr(CommandStr.ToString)
                            _tdayBefore += _dsTdayNow.Tables(0).Rows(0)("Tday_Now")

                            ' Next
                        Case "A00006"
                            Dim x = _dtOrderRecordE.Where(Function(r) r("Insu_Code") = _triggerValueData)
                            If x.Count > 0 Then
                                _tdayNow += x.Sum(Function(r) r("Days"))
                            End If

                            Dim _insuCodesList As New List(Of String)
                            For Each _drOrderRecord As DataRow In _dtOrderRecordE
                                Dim _orderCode As String = _drOrderRecord("Order_Code").ToString.TrimEnd
                                Dim _insuCodes As String() = Me.InsuCodeToOrderCode(_orderCode)

                                _insuCodesList.AddRange(_insuCodes)
                            Next
                            If _insuCodesList.Count = 0 Then Exit Select

                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL(SUM(mm.Days), 0) AS Tday_Before " & vbCrLf)
                            var1.AppendFormat("FROM   EMR_Medicine_Record mm " & vbCrLf)
                            var1.AppendFormat("       LEFT JOIN EMR_Medical_Record ee " & vbCrLf)
                            var1.AppendFormat("         ON ( mm.Chart_No = ee.Chart_No " & vbCrLf)
                            var1.AppendFormat("              AND mm.Medical_Sn = ee.Medical_Sn ) " & vbCrLf)
                            var1.AppendFormat("WHERE  mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("       AND mm.Order_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _insuCodesList.ToArray) & "'")
                            var1.AppendFormat("       AND mm.Dc = 'N' " & vbCrLf)
                            var1.AppendFormat("       AND ( ee.Source_Type_Id IS NULL " & vbCrLf)
                            If _isCountE = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'E' " & vbCrLf)
                            End If
                            If _isCountI = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'I' " & vbCrLf)
                            End If
                            If _isCountO = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'O' " & vbCrLf)
                            End If
                            var1.AppendFormat("            )  " & vbCrLf)

                            clearCommandString()

                            CommandStr = var1
                            Dim _dsTdayBefore As DataSet = dynamicQueryEmr(CommandStr.ToString)
                            _tdayBefore += _dsTdayBefore.Tables(0).Rows(0)("Tday_Before")
                        Case Else
                            'rtnData = 0
                            'CreateTXTLog("H04_ChkAccumulatedDays", True)
                            'Return True
                    End Select

                    rtnData = _tdayNow + _tdayBefore
                    CreateTXTLog("H04_ChkAccumulatedDays", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("H04_ChkAccumulatedDays", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H04_ChkAccumulatedDays", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.46 H16 限藥品總量檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H16_ChkAccumulatedQty() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty_Unit")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode") '觸發該規則的項目代碼
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData") '觸發該規則的設定值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountO") '計算門診
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountE") '計算急診
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountI") '計算住院
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit") '傳入檢核值的單位代碼

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.TrimEnd
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.TrimEnd
                    Dim _isCountO As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountO").ToString.TrimEnd
                    Dim _isCountE As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountE").ToString.Trim
                    Dim _isCountI As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountI").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable
                    Dim transferunit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim


                    _dtOrderRecordE = _dtOrderRecordE.Where(Function(r) r("Order_Code") = _triggerValueData And Not IsDBNull(r("Tqty")))

                    rtnData = 0
                    Dim _tqtyNow As Int32 = 0
                    Dim _tqtyBefore As Int32 = 0
                    Select Case _triggerItemCode
                        Case "A00004"


                            Dim x = _dtOrderRecordE.Where(Function(r) r("Order_Code") = _triggerValueData)
                            If x.Count > 0 Then
                                _tqtyNow += x.Sum(Function(r) Tqty_UnitTransform(r("Order_Code"), r("Tqty_Unit"), r("Tqty"), transferunit))
                            End If

                            '查詢歷史資料
                            'For Each _drOrderRecord As DataRow In _dtOrderRecordE
                            '    Dim _orderCode As String = _drOrderRecord("Order_Code").ToString.TrimEnd

                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL((mm.Tqty), 0) AS Tqty_Now,isnull(mm.Tqty_Unit,'') as Tqty_Unit ,isnull(mm.Order_Code,'') as Order_code" & vbCrLf)
                            var1.AppendFormat("FROM   EMR_Medicine_Record mm " & vbCrLf)
                            var1.AppendFormat("       LEFT JOIN EMR_Medical_Record ee " & vbCrLf)
                            var1.AppendFormat("         ON ( mm.Chart_No = ee.Chart_No " & vbCrLf)
                            var1.AppendFormat("              AND mm.Medical_Sn = ee.Medical_Sn ) " & vbCrLf)
                            var1.AppendFormat("WHERE  mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("       AND mm.Order_Code = '{0}' " & vbCrLf, _triggerValueData)
                            var1.AppendFormat("       AND mm.Dc = 'N' " & vbCrLf)
                            var1.AppendFormat("       AND ( ee.Source_Type_Id IS NULL " & vbCrLf)
                            If _isCountE = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'E' " & vbCrLf)
                            End If
                            If _isCountI = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'I' " & vbCrLf)
                            End If
                            If _isCountO = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'O' " & vbCrLf)
                            End If
                            var1.AppendFormat("            )  " & vbCrLf)

                            clearCommandString()

                            CommandStr = var1
                            Dim _dsTqtyNow As DataSet = dynamicQueryEmr(CommandStr.ToString)
                            For Each d1 As DataRow In _dsTqtyNow.Tables(0).Rows
                                _tqtyBefore += Tqty_UnitTransform(d1.Item("order_code"), d1.Item("Tqty_Unit").ToString, CDbl(d1.Item("Tqty_Now").ToString), transferunit)
                            Next
                            'Next
                        Case "A00006"

                            Dim x = _dtOrderRecordE.Where(Function(r) r("Insu_Code") = _triggerValueData)
                            If x.Count > 0 Then
                                _tqtyNow += x.Sum(Function(r) Tqty_UnitTransform(r("order_code"), r("Tqty_Unit"), r("Tqty"), transferunit))
                            End If
                            Dim _insuCodesList As New List(Of String)
                            For Each _drOrderRecord As DataRow In _dtOrderRecordE
                                Dim _orderCode As String = _drOrderRecord("Order_Code").ToString.TrimEnd
                                Dim _insuCodes As String() = Me.InsuCodeToOrderCode(_orderCode)

                                _insuCodesList.AddRange(_insuCodes)
                            Next
                            If _insuCodesList.Count = 0 Then Exit Select

                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL((mm.Tqty), 0) AS Tqty_Before, mm.Tqty_Unit ,isnull(mm.Order_Code,'') as Order_code" & vbCrLf)
                            var1.AppendFormat("FROM   EMR_Medicine_Record mm " & vbCrLf)
                            var1.AppendFormat("       LEFT JOIN EMR_Medical_Record ee " & vbCrLf)
                            var1.AppendFormat("         ON ( mm.Chart_No = ee.Chart_No " & vbCrLf)
                            var1.AppendFormat("              AND mm.Medical_Sn = ee.Medical_Sn ) " & vbCrLf)
                            var1.AppendFormat("WHERE  mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("       AND mm.Order_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _insuCodesList.ToArray) & "'")
                            var1.AppendFormat("       AND mm.Dc = 'N' " & vbCrLf)
                            var1.AppendFormat("       AND ( ee.Source_Type_Id IS NULL " & vbCrLf)
                            If _isCountE = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'E' " & vbCrLf)
                            End If
                            If _isCountI = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'I' " & vbCrLf)
                            End If
                            If _isCountO = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'O' " & vbCrLf)
                            End If
                            var1.AppendFormat("            )  " & vbCrLf)

                            clearCommandString()

                            CommandStr = var1
                            Dim _dsTqtyBefore As DataSet = dynamicQueryEmr(CommandStr.ToString)
                            For Each d1 As DataRow In _dsTqtyBefore.Tables(0).Rows
                                _tqtyBefore += Tqty_UnitTransform(d1.Item("order_code").ToString, d1.Item("Tqty_Unit").ToString, CDbl(d1.Item("Tqty_Before").ToString), transferunit)
                            Next
                        Case Else
                            rtnData = False
                            CreateTXTLog("H11_ChkAccumulatedQty", True)
                            Return True
                    End Select

                    rtnData = _tqtyNow + _tqtyBefore
                    rtnDataUnit = transferunit
                    CreateTXTLog("H16_ChkAccumulatedQty", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("H16_ChkAccumulatedQty", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H16_ChkAccumulatedQty", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.47 H12 限藥品前X日累積劑量檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function H12_ChkAccumulatedQtyByDays() As Boolean

        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty_Unit")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode") '觸發該規則的項目代碼
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData") '觸發該規則的設定值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '參數 X 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountO") '計算門診
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountE") '計算急診
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "IsCountI") '計算住院
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit") '傳入檢核值的單位代碼

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.TrimEnd
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.TrimEnd
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.TrimEnd
                    Dim _isCountO As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountO").ToString.TrimEnd
                    Dim _isCountE As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountE").ToString.TrimEnd
                    Dim _isCountI As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("IsCountI").ToString.TrimEnd
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable
                    Dim transferunit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    _dtOrderRecordE = _dtOrderRecordE.Where(Function(r) r("Order_Code") = _triggerValueData And Not IsDBNull(r("Tqty")))

                    rtnData = 0
                    rtnDataUnit = transferunit
                    Dim _tqtyNow As Int32 = 0
                    Dim _tqtyBefore As Int32 = 0
                    Select Case _triggerItemCode
                        Case "A00004"
                            Dim x = _dtOrderRecordE.Where(Function(r) r("Order_Code") = _triggerValueData And Not IsDBNull(r("Tqty")))
                            If x.Count > 0 Then
                                _tqtyNow += x.Sum(Function(r) Tqty_UnitTransform(r("Order_Code"), r("Tqty_Unit"), r("Tqty"), transferunit))
                            End If

                            '查詢歷史資料
                            'For Each _drOrderRecord As DataRow In _dtOrderRecordE
                            '    Dim _orderCode As String = _drOrderRecord("Order_Code").ToString.TrimEnd
                            Dim _orderEffectDate As String = CDate(x(0)("Order_Effect_Date")).ToShortDateString

                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL((mm.Tqty), 0) AS Tqty_Now,mm.Tqty_Unit ,mm.Order_Code" & vbCrLf)
                            var1.AppendFormat("FROM   EMR_Medicine_Record mm " & vbCrLf)
                            var1.AppendFormat("       LEFT JOIN EMR_Medical_Record ee " & vbCrLf)
                            var1.AppendFormat("         ON ( mm.Chart_No = ee.Chart_No " & vbCrLf)
                            var1.AppendFormat("              AND mm.Medical_Sn = ee.Medical_Sn ) " & vbCrLf)
                            var1.AppendFormat("WHERE  mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("       AND mm.Order_Code = '{0}' " & vbCrLf, _triggerValueData)
                            var1.AppendFormat("       AND mm.Dc = 'N' " & vbCrLf)
                            var1.AppendFormat("       AND ( mm.Effect_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderEffectDate)
                            var1.AppendFormat("       AND ( ee.Source_Type_Id IS NULL " & vbCrLf)
                            If _isCountE = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'E' " & vbCrLf)
                            End If
                            If _isCountI = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'I' " & vbCrLf)
                            End If
                            If _isCountO = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'O' " & vbCrLf)
                            End If
                            var1.AppendFormat("            )  " & vbCrLf)

                            clearCommandString()

                            CommandStr = var1
                            Dim _dsTqtyNow As DataSet = dynamicQueryEmr(CommandStr.ToString)
                            If _dsTqtyNow.Tables(0).Rows.Count <> 0 Then
                                For Each d1 As DataRow In _dsTqtyNow.Tables(0).Rows
                                    _tqtyBefore += Tqty_UnitTransform(d1("Order_Code"), d1.Item("Tqty_Unit").ToString, CDbl(d1.Item("Tqty_Now").ToString), transferunit)
                                Next
                            End If

                            'Exit For
                            'Next
                        Case "A00006"
                            Dim x = _dtOrderRecordE.Where(Function(r) r("Insu_Code") = _triggerValueData And Not IsDBNull(r("Tqty")))
                            If x.Count > 0 Then
                                _tqtyNow += x.Sum(Function(r) Tqty_UnitTransform(r("Order_Code"), r("Tqty_Unit"), r("Tqty"), transferunit))
                            End If

                            Dim _insuCodesList As New List(Of String)
                            'For Each _drOrderRecord As DataRow In _dtOrderRecordE
                            '    Dim _orderCode As String = _drOrderRecord("Order_Code").ToString.TrimEnd
                            Dim _orderEffectDate As String = CDate(x(0)("Order_Effect_Date")).ToShortDateString
                            Dim _insuCodes As String() = Me.InsuCodeToOrderCode(_triggerValueData)

                            If _insuCodes.Count = 0 Then _insuCodes = New String() {""}

                            '_insuCodesList.AddRange(_insuCodes)

                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL((mm.Tqty), 0) AS Tqty_Before,mm.Tqty_Unit,mm.Order_code " & vbCrLf)
                            var1.AppendFormat("FROM   EMR_Medicine_Record mm " & vbCrLf)
                            var1.AppendFormat("       LEFT JOIN EMR_Medical_Record ee " & vbCrLf)
                            var1.AppendFormat("         ON ( mm.Chart_No = ee.Chart_No " & vbCrLf)
                            var1.AppendFormat("              AND mm.Medical_Sn = ee.Medical_Sn ) " & vbCrLf)
                            var1.AppendFormat("WHERE  mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("       AND mm.Order_Code IN ( {0} ) " & vbCrLf, "'" & String.Join("','", _insuCodes) & "'")
                            var1.AppendFormat("       AND mm.Dc = 'N' " & vbCrLf)
                            var1.AppendFormat("       AND ( mm.Effect_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderEffectDate)
                            var1.AppendFormat("       AND ( ee.Source_Type_Id IS NULL " & vbCrLf)
                            If _isCountE = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'E' " & vbCrLf)
                            End If
                            If _isCountI = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'I' " & vbCrLf)
                            End If
                            If _isCountO = "Y" Then
                                var1.AppendFormat("              OR ee.Source_Type_Id = 'O' " & vbCrLf)
                            End If
                            var1.AppendFormat("            )  " & vbCrLf)

                            clearCommandString()

                            CommandStr = var1
                            Dim _dsTqtyBefore As DataSet = dynamicQueryEmr(CommandStr.ToString)
                            For Each d1 As DataRow In _dsTqtyBefore.Tables(0).Rows
                                _tqtyBefore += Tqty_UnitTransform(d1("Order_Code"), d1.Item("Tqty_Unit").ToString, CDbl(d1.Item("Tqty_Before").ToString), transferunit)
                            Next

                            'Exit For
                            'Next

                        Case Else
                            rtnData = False
                            CreateTXTLog("H12_ChkAccumulatedQtyByDays", True)
                            Return True
                    End Select

                    rtnData = _tqtyNow + _tqtyBefore
                    CreateTXTLog("H12_ChkAccumulatedQtyByDays", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("H12_ChkAccumulatedQtyByDays", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H12_ChkAccumulatedQtyByDays", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.67 H20 每X日執行數量檢核 - 藥劑部專用
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H20_ChkTimesByDayForOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Dosage_Unit")
                'AddTableAndColumnInto(CheckTable, "Order_Record", "Frequency_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                'AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As Decimal = 1 'CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"))
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim ValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim

                    Dim Outpatient_sn As String = ""
                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    ElseIf TriggerItemCode = "A00031" Then
                        OrderInsuCode = "Pharmacy_12_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Order_Code As String = OrderRecordRow.Item("Order_Code").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Dosage As String = OrderRecordRow.Item("Dosage").ToString.Trim
                    Dim Dosage_Unit As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage_Unit") Then
                        Dosage_Unit = OrderRecordRow.Item("Dosage_Unit").ToString.TrimEnd
                    End If
                    Dim Frequency_Code As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Frequency_Code") Then
                        Frequency_Code = OrderRecordRow.Item("Frequency_Code").ToString.Trim
                    End If
                    Dim Cure_Type_Id As String = ""
                    If pubreapi.Tables("Order_Record").Columns.Contains("Cure_Type_Id") Then
                        Cure_Type_Id = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    End If

                    Dim Days As Decimal = CDec(OrderRecordRow.Item("Days"))
                    Dim Tqty As Decimal = CDec(OrderRecordRow.Item("Tqty"))
                    Dim Tqty_Unit As String = OrderRecordRow.Item("Tqty_Unit").ToString.Trim
                    Dim Tqty_Now As Decimal = 0.0
                    Dim Tqty_Before As Decimal = 0.0

                    If ValueUnit.Length = 0 Then
                        ValueUnit = Tqty_Unit
                    End If

                    '20100628 add by Rich, 呼叫OmoServiceManager中計算總量 method 重新計算 ValueX 天的量
                    If Days >= ValueX Then
                        If Dosage <> String.Empty AndAlso Dosage_Unit <> String.Empty AndAlso Frequency_Code <> String.Empty Then
                            Dim caculateResult As DataSet = CalculateTqty(Order_Code, Dosage, Dosage_Unit, Frequency_Code, ValueX)

                            Dim Correct As Boolean = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                            Dim ErrorMessage As String = ""
                            If DataSetUtil.IsContainsData(caculateResult) Then
                                Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                If Correct = True Then
                                    Tqty = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                    Tqty_Unit = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                Else
                                    '**若算不出來，always回傳True
                                    rtnData = True
                                    rtnDataUnit = ""
                                    CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                    Return True
                                End If
                            End If
                        Else
                            Tqty = Math.Ceiling(Tqty * Days / ValueX)
                        End If

                    End If

                    Tqty_Now = Tqty_UnitTransform(Order_Code, Tqty_Unit, Tqty, ValueUnit)

                    If Location = "C" OrElse Location = "P" Then

                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(Dosage, 0) AS [Dosage], ISNULL(RTRIM(Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(Frequency_Code), '') AS [Frequency_Code]")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Dim _days As Int32 = row("Days")
                                    Dim _dosage As Decimal = row("Dosage")
                                    Dim _dosageUnit As String = row("Dosage_Unit").ToString.TrimEnd
                                    Dim _frequencyCode As String = row("Frequency_Code").ToString.TrimEnd

                                    If _days > ValueX Then
                                        '==============================================
                                        Dim _tqtyTmp As Decimal = 0
                                        Dim _tqtyUnitTmp As String = String.Empty
                                        'Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, _days)
                                        Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, ValueX)
                                        Dim Correct As Boolean = True
                                        Dim ErrorMessage As String = ""
                                        If DataSetUtil.IsContainsData(caculateResult) Then
                                            Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                            ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                            If Correct = True Then
                                                _tqtyTmp = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                                _tqtyUnitTmp = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                            Else
                                                '**若算不出來，always回傳True
                                                rtnData = True
                                                rtnDataUnit = ""
                                                CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                                Return True
                                            End If
                                        End If
                                        Tqty_Before += Tqty_UnitTransform(Order_Code, _tqtyUnitTmp, _tqtyTmp, ValueUnit)
                                        '==============================================
                                    Else
                                        Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                    End If

                                Next
                            End If

                            Dim _totalValue As Decimal = Tqty_Now + Tqty_Before
                            Dim _baseValue As Decimal = Decimal.Parse(ValueData)

                            Select Case _operatorCode
                                Case "01"

                                    rtnData = (_totalValue > _baseValue)

                                Case "04"

                                    rtnData = (_totalValue >= _baseValue)

                                Case "03"

                                    rtnData = (_totalValue < _baseValue)

                                Case "05"

                                    rtnData = (_totalValue <= _baseValue)

                                Case "02"

                                    rtnData = (_totalValue = _baseValue)

                                Case "06"

                                    rtnData = (_totalValue <> _baseValue)

                                Case Else
                                    rtnData = False
                                    CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                    Return True
                            End Select

                            rtnDataUnit = ""
                            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(Tqty,0) as Tqty_Before, imp.Tqty_Unit ")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append("     inner join OMO_Medical_Record med ")
                            CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append("             imp.Order_Code in ")
                            CommandStr.Append("                 (Select op.Order_Code ")
                            CommandStr.Append("                  From PUB_Order_Price op ")
                            CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                            CommandStr.Append("                     and op.End_Date) ")
                            CommandStr.Append("                  Union ")
                            CommandStr.Append("                  Select ic.Order_Code ")
                            CommandStr.Append("                  From PUB_Insu_Code ic ")
                            CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                            CommandStr.Append("                     and ic.End_Date) ")
                            CommandStr.Append("                 ) and ")
                            CommandStr.Append("                     (imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("                         and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("                         imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            Dim _totalValue As Decimal = Tqty_Now + Tqty_Before
                            Dim _baseValue As Decimal = Decimal.Parse(ValueData)

                            Select Case _operatorCode
                                Case "01"

                                    rtnData = (_totalValue > _baseValue)

                                Case "04"

                                    rtnData = (_totalValue >= _baseValue)

                                Case "03"

                                    rtnData = (_totalValue < _baseValue)

                                Case "05"

                                    rtnData = (_totalValue <= _baseValue)

                                Case "02"

                                    rtnData = (_totalValue = _baseValue)

                                Case "06"

                                    rtnData = (_totalValue <> _baseValue)

                                Case Else
                                    rtnData = False
                                    CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                    Return True
                            End Select

                            rtnDataUnit = ""
                            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                            Return True
                        ElseIf TriggerItemCode = "A00031" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(imp.Dosage, 0) AS [Dosage], ISNULL(RTRIM(imp.Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(imp.Frequency_Code), '') AS [Frequency_Code]")
                            CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                            CommandStr.Append(" inner join OPH_Pharmacy_Base as OPB on OPB.order_code=imp.Order_Code and  OPB.DC='N' ")
                            CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                            CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                            CommandStr.Append(" 			OPB.pharmacy_12_code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                            CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Dim _days As Int32 = row("Days")
                                    Dim _dosage As Decimal = row("Dosage")
                                    Dim _dosageUnit As String = row("Dosage_Unit").ToString.TrimEnd
                                    Dim _frequencyCode As String = row("Frequency_Code").ToString.TrimEnd

                                    If _days > ValueX Then
                                        '==============================================
                                        Dim _tqtyTmp As Decimal = 0
                                        Dim _tqtyUnitTmp As String = String.Empty
                                        'Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, _days)
                                        Dim caculateResult As DataSet = CalculateTqty(Order_Code, _dosage, _dosageUnit, _frequencyCode, ValueX)
                                        Dim Correct As Boolean = True
                                        Dim ErrorMessage As String = ""
                                        If DataSetUtil.IsContainsData(caculateResult) Then
                                            Correct = CBool(caculateResult.Tables("ReturnValue").Rows(0).Item("Correct"))
                                            ErrorMessage = caculateResult.Tables("ReturnValue").Rows(0).Item("ErrorMessage").ToString.Trim
                                            If Correct = True Then
                                                _tqtyTmp = CDec(caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty"))
                                                _tqtyUnitTmp = caculateResult.Tables("ReturnValue").Rows(0).Item("Tqty_Unit").ToString.Trim
                                            Else
                                                '**若算不出來，always回傳True
                                                rtnData = True
                                                rtnDataUnit = ""
                                                CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                                Return True
                                            End If
                                        End If
                                        Tqty_Before += Tqty_UnitTransform(Order_Code, _tqtyUnitTmp, _tqtyTmp, ValueUnit)
                                        '==============================================
                                    Else
                                        Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                    End If

                                Next
                            End If

                            Dim _totalValue As Decimal = Tqty_Now + Tqty_Before
                            Dim _baseValue As Decimal = Decimal.Parse(ValueData)

                            Select Case _operatorCode
                                Case "01"

                                    rtnData = (_totalValue > _baseValue)

                                Case "04"

                                    rtnData = (_totalValue >= _baseValue)

                                Case "03"

                                    rtnData = (_totalValue < _baseValue)

                                Case "05"

                                    rtnData = (_totalValue <= _baseValue)

                                Case "02"

                                    rtnData = (_totalValue = _baseValue)

                                Case "06"

                                    rtnData = (_totalValue <> _baseValue)

                                Case Else
                                    rtnData = False
                                    CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                    Return True
                            End Select

                            rtnDataUnit = ""
                            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                            Return True

                        Else
                            rtnData = False
                            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                            Return True
                        End If
                    Else
                        If TriggerItemCode = "A00004" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, ord.Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append(" 		) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            Dim _totalValue As Decimal = Tqty_Now + Tqty_Before
                            Dim _baseValue As Decimal = Decimal.Parse(ValueData)

                            Select Case _operatorCode
                                Case "01"

                                    rtnData = (_totalValue > _baseValue)

                                Case "04"

                                    rtnData = (_totalValue >= _baseValue)

                                Case "03"

                                    rtnData = (_totalValue < _baseValue)

                                Case "05"

                                    rtnData = (_totalValue <= _baseValue)

                                Case "02"

                                    rtnData = (_totalValue = _baseValue)

                                Case "06"

                                    rtnData = (_totalValue <> _baseValue)

                                Case Else
                                    rtnData = False
                                    CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                    Return True
                            End Select

                            rtnDataUnit = ""
                            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                            Return True
                        ElseIf TriggerItemCode = "A00006" Then
                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            Dim _totalValue As Decimal = Tqty_Now + Tqty_Before
                            Dim _baseValue As Decimal = Decimal.Parse(ValueData)

                            Select Case _operatorCode
                                Case "01"

                                    rtnData = (_totalValue > _baseValue)

                                Case "04"

                                    rtnData = (_totalValue >= _baseValue)

                                Case "03"

                                    rtnData = (_totalValue < _baseValue)

                                Case "05"

                                    rtnData = (_totalValue <= _baseValue)

                                Case "02"

                                    rtnData = (_totalValue = _baseValue)

                                Case "06"

                                    rtnData = (_totalValue <> _baseValue)

                                Case Else
                                    rtnData = False
                                    CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                    Return True
                            End Select

                            rtnDataUnit = ""
                            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                            Return True
                        ElseIf TriggerItemCode = "A00031" Then

                            clearCommandString()
                            CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, ord.Tqty_Unit ")
                            CommandStr.Append(" From OHD_Order_Record ord ")
                            CommandStr.Append("     inner join OPH_Pharmacy_Base as OPB on OPB.order_code=Ord.Order_code and OPB.DC='N' ")
                            CommandStr.Append("     inner join OHD_Medical_Record med ")
                            CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                            CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                            CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                            CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                            CommandStr.Append("             OPB.Pharmacy_12_code = '").Append(TriggerValueData).Append("' and ")
                            CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                            CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                            CommandStr.Append("             ord.[Cancel] = 'N' ")
                            CommandStr.Append(" 		) ")

                            Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                            If DataSetUtil.IsContainsData(tempDS) Then
                                For Each row As DataRow In tempDS.Tables(0).Rows
                                    Tqty_Before += Tqty_UnitTransform(Order_Code, row.Item("Tqty_Unit").ToString.Trim, CDec(row.Item("Tqty")), ValueUnit)
                                Next
                            End If

                            Dim _totalValue As Decimal = Tqty_Now + Tqty_Before
                            Dim _baseValue As Decimal = Decimal.Parse(ValueData)

                            Select Case _operatorCode
                                Case "01"

                                    rtnData = (_totalValue > _baseValue)

                                Case "04"

                                    rtnData = (_totalValue >= _baseValue)

                                Case "03"

                                    rtnData = (_totalValue < _baseValue)

                                Case "05"

                                    rtnData = (_totalValue <= _baseValue)

                                Case "02"

                                    rtnData = (_totalValue = _baseValue)

                                Case "06"

                                    rtnData = (_totalValue <> _baseValue)

                                Case Else
                                    rtnData = False
                                    CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                                    Return True
                            End Select

                            rtnDataUnit = ""
                            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                            Return True
                        Else
                            rtnData = False
                            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
                            Return True
                        End If
                    End If
                End If
            End If

            rtnData = False
            CreateTXTLog("H20_ChkTimesByDayForOPH", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H20_ChkTimesByDayForOPH", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.71 H60 門急住抗生素醫令檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H60_ChkAntibioticsByOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Pharmacy_12_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_End_Date")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim Outpatient_Sn As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim Source_Type As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Source_Type").ToString.Trim.ToUpper
                    Dim Pharmacy_12_Code As String = pubreapi.Tables("Order_Record").Rows(0).Item("Pharmacy_12_Code").ToString.Trim
                    Dim Order_Doctor_Code As String = pubreapi.Tables("Order_Record").Rows(0).Item("Order_Doctor_Code").ToString.Trim

                    Dim var0 As New System.Text.StringBuilder
                    var0.AppendFormat("SELECT COUNT(Pharmacy_12_Code) AS Cnt " & vbCrLf)
                    var0.AppendFormat("FROM   OPH_Open_Restrict " & vbCrLf)
                    var0.AppendFormat("WHERE  Pharmacy_12_Code = '{0}' " & vbCrLf, Pharmacy_12_Code)
                    var0.AppendFormat("       AND Chart_No = '{0}' " & vbCrLf, Order_Doctor_Code)
                    var0.AppendFormat("       AND Item_Code = 'D00002' " & vbCrLf)
                    Dim _ophOpenRestrict As DataTable = dynamicQueryNotPub(var0.ToString).Tables(0)
                    Dim _cnt0 As Int32 = _ophOpenRestrict.Rows(0)("Cnt")

                    If _cnt0 > 0 Then
                        rtnData = True
                        CreateTXTLog("H60_ChkAntibioticsByOPH", True)
                        Return True
                    End If

                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")

                    rtnDS = New DataSet
                    Dim _dtReturn As New DataTable
                    _dtReturn.TableName = "rtnTable"
                    _dtReturn.Columns.Add("rtnOrderCode", GetType(String))
                    _dtReturn.Columns.Add("rtnP12Code", GetType(String))
                    _dtReturn.Columns.Add("rtnValueData", GetType(String))
                    _dtReturn.Columns.Add("rtnOrderName", GetType(String))
                    _dtReturn.Columns.Add("rtnLimitAlertLevel", GetType(Int32))
                    rtnDS.Tables.Add(_dtReturn)

                    If _dtOrderRecord.Rows.Count = 0 Then
                        rtnData = True
                        CreateTXTLog("H60_ChkAntibioticsByOPH", True)
                        Return True
                    End If

                    Dim _dtOrderRecordE As EnumerableRowCollection(Of DataRow) = _dtOrderRecord.AsEnumerable

                    Dim _records = _dtOrderRecordE.Select(Function(r) New With {.Order_Code = r("Order_Code").ToString.Trim, .Order_Name = r("Order_Name").ToString.Trim, .Pharmacy_12_Code = r("Pharmacy_12_Code").ToString.Trim, .Order_Record_No = CInt(r("Order_Record_No")), .Order_End_Date = r("Order_End_Date"), .Order_Effect_Date = r("Order_Effect_Date"), .Flag = False, .Content = String.Empty})

                    Dim _pharmacy12CodeL = _records.Select(Function(r) r.Pharmacy_12_Code).ToArray

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT DISTINCT RTRIM(Pharmacy_12_Code) AS Pharmacy_12_Code " & vbCrLf)
                    var1.AppendFormat("FROM   OPH_Property " & vbCrLf)
                    var1.AppendFormat("WHERE  1 = 1 " & vbCrLf)
                    var1.AppendFormat("       AND Pharmacy_12_Code IN ( '{0}' ) " & vbCrLf, String.Join("','", _pharmacy12CodeL))
                    var1.AppendFormat("       AND Property_Id = '11E' " & vbCrLf)

                    clearCommandString()
                    CommandStr = var1
                    Dim _ophProperty As DataTable = dynamicQueryNotPub(CommandStr.ToString).Tables(0) 'Query Oph_Property.
                    Dim _ophPropertyE As EnumerableRowCollection(Of DataRow) = _ophProperty.AsEnumerable

                    _records = _records.Where(Function(r) _ophPropertyE.Any(Function(r2) r2("Pharmacy_12_Code") = r.Pharmacy_12_Code))

                    If _records.Count = 0 Then
                        rtnData = True
                        CreateTXTLog("H60_ChkAntibioticsByOPH", True)
                        Return True
                    End If

                    _pharmacy12CodeL = _records.Select(Function(r) r.Pharmacy_12_Code).ToArray

                    Dim var2 As New System.Text.StringBuilder
                    var2.AppendFormat("SELECT RTRIM(Chart_No)                  AS Chart_No, " & vbCrLf)
                    var2.AppendFormat("       RTRIM(Pharmacy_12_Code)          AS Pharmacy_12_Code, " & vbCrLf)
                    var2.AppendFormat("       RTRIM(Order_Code)                AS Order_Code, " & vbCrLf)
                    var2.AppendFormat("       ISNULL(RTRIM(Approve_Sign), '')  AS Approve_Sign, " & vbCrLf)
                    var2.AppendFormat("       MAX(Term_date)                   AS Term_date " & vbCrLf)
                    var2.Append("FROM   OPH_Antibiotics_Confirm " & vbCrLf)
                    var2.AppendFormat("WHERE  1 = 1 " & vbCrLf)
                    var2.AppendFormat("       AND Chart_No = '{0}' " & vbCrLf, Chart_No)
                    var2.AppendFormat("       AND Pharmacy_12_Code IN ( '{0}' ) " & vbCrLf, String.Join("','", _pharmacy12CodeL))
                    var2.AppendFormat("GROUP  BY Chart_No, " & vbCrLf)
                    var2.AppendFormat("          Pharmacy_12_Code, " & vbCrLf)
                    var2.AppendFormat("          Order_Code, " & vbCrLf)
                    var2.AppendFormat("          Approve_Sign " & vbCrLf)

                    clearCommandString()
                    CommandStr = var2
                    Dim _ophAntibioticsConfirm As DataTable = dynamicQueryNotPub(CommandStr.ToString).Tables(0) 'Query OPH_Antibiotics_Confirm.
                    Dim _ophAntibioticsConfirmE = _ophAntibioticsConfirm.AsEnumerable.Select(Function(r) New With {.Chart_No = r("Chart_No").ToString.Trim, .Pharmacy_12_Code = r("Pharmacy_12_Code").ToString.Trim, .Order_Code = r("Order_Code").ToString.Trim, .Term_date = r("Term_date"), .Approve_Sign = r("Approve_Sign").ToString.ToUpper})

                    For Each _record In _records
                        Dim _pharmacy12Code As String = _record.Pharmacy_12_Code
                        Dim _orderCode As String = _record.Order_Code
                        Dim _orderName As String = Me.GetPharmacyName(_pharmacy12Code)

                        Dim _contentA As String = "【内容A】"
                        Dim _contentB As String = "【内容B】"

                        Dim _rtnLimitAlertLevel As Int32 = 0
                        Select Case Source_Type
                            Case "O"
                                _rtnLimitAlertLevel = 3
                            Case "E"
                                _rtnLimitAlertLevel = 2
                            Case "I"
                                _rtnLimitAlertLevel = 2
                            Case Else
                                _rtnLimitAlertLevel = 3
                        End Select

                        Dim _drAntibioticsConfirm = _ophAntibioticsConfirmE.Where(Function(r) r.Order_Code = _orderCode AndAlso r.Pharmacy_12_Code = _pharmacy12Code).FirstOrDefault
                        If _drAntibioticsConfirm IsNot Nothing Then
                            'B
                            If _drAntibioticsConfirm.Approve_Sign = "N" Then
                                _contentB = _orderName + " 感染科醫師不建議使用，請改用其它抗生素。"

                                Dim _newRtnRow As DataRow = _dtReturn.NewRow
                                _newRtnRow("rtnOrderCode") = _orderCode
                                _newRtnRow("rtnP12Code") = _pharmacy12Code
                                _newRtnRow("rtnValueData") = _contentB
                                _newRtnRow("rtnOrderName") = _orderName
                                _newRtnRow("rtnLimitAlertLevel") = _rtnLimitAlertLevel
                                _dtReturn.Rows.Add(_newRtnRow)

                                _record.Flag = True
                                _record.Content = _contentB
                            ElseIf IsDBNull(_record.Order_End_Date) OrElse IsDBNull(_drAntibioticsConfirm.Term_date) OrElse (CDate(_record.Order_End_Date) > CDate(_drAntibioticsConfirm.Term_date)) Then

                                _contentB = _orderName + " 處方天數超過核用日期，請聯絡感染科醫師。"

                                Dim _newRtnRow As DataRow = _dtReturn.NewRow
                                _newRtnRow("rtnOrderCode") = _orderCode
                                _newRtnRow("rtnP12Code") = _pharmacy12Code
                                _newRtnRow("rtnValueData") = _contentB
                                _newRtnRow("rtnOrderName") = _orderName
                                _newRtnRow("rtnLimitAlertLevel") = _rtnLimitAlertLevel
                                _dtReturn.Rows.Add(_newRtnRow)

                                _record.Flag = True
                                _record.Content = _contentB
                            ElseIf IsDBNull(_record.Order_Effect_Date) OrElse IsDBNull(_drAntibioticsConfirm.Term_date) OrElse (CDate(_record.Order_Effect_Date) >= CDate(_drAntibioticsConfirm.Term_date)) Then

                                _contentB = _orderName + " 核用天數已到期，請聯絡感染科醫師。"

                                Dim _newRtnRow As DataRow = _dtReturn.NewRow
                                _newRtnRow("rtnOrderCode") = _orderCode
                                _newRtnRow("rtnP12Code") = _pharmacy12Code
                                _newRtnRow("rtnValueData") = _contentB
                                _newRtnRow("rtnOrderName") = _orderName
                                _newRtnRow("rtnLimitAlertLevel") = _rtnLimitAlertLevel
                                _dtReturn.Rows.Add(_newRtnRow)

                                _record.Flag = True
                                _record.Content = _contentB
                            End If
                        Else
                            'A
                            _contentA = _orderName + " 屬須事先審查抗生素，請聯絡感染科醫師。"

                            Dim _newRtnRow As DataRow = _dtReturn.NewRow
                            _newRtnRow("rtnOrderCode") = _orderCode
                            _newRtnRow("rtnP12Code") = _pharmacy12Code
                            _newRtnRow("rtnValueData") = _contentA
                            _newRtnRow("rtnOrderName") = _orderName
                            _newRtnRow("rtnLimitAlertLevel") = _rtnLimitAlertLevel
                            _dtReturn.Rows.Add(_newRtnRow)

                            _record.Flag = True
                            _record.Content = _contentA
                        End If
                    Next 'Next _records

                    'TODO: Do Insert OPH_Alert_Record 
                    '----------------------------------------
                    'Assemble DataSet

                    Dim _newDs As New DataSet
                    Dim _newDt As DataTable = OphAlertRecordDataTableFactory.getDataTableWithSchema
                    For Each _record In _records
                        If _record.Flag Then
                            Dim _newDr As DataRow = _newDt.NewRow
                            _newDr("Medicial_Sn") = Outpatient_Sn
                            _newDr("Item_Code") = "H00060"
                            _newDr("Order_Code1") = _record.Order_Code
                            _newDr("Order_Sn") = _record.Order_Record_No
                            _newDr("Order_Record_No") = _record.Order_Record_No
                            _newDr("Pharmacy_12_Code1") = _record.Pharmacy_12_Code
                            _newDr("Order_Doctor_Code") = Order_Doctor_Code
                            _newDr("Doubt_Content") = _record.Content
                            _newDt.Rows.Add(_newDr)
                        End If
                    Next

                    _newDs.Tables.Add(_newDt)

                    Try
                        Me.InsertOPH_Alert_Record(_newDs)
                    Catch ex As Exception
                        Throw ex
                    End Try
                    '----------------------------------------

                    If _dtReturn.Rows.Count = 0 Then

                        rtnData = True
                        CreateTXTLog("H60_ChkAntibioticsByOPH", True)
                        Return True
                    Else
                        rtnData = False
                        CreateTXTLog("H60_ChkAntibioticsByOPH", True)
                        Return True
                    End If

                End If 'END checkAllContainColumnIn(CheckTable)
            End If 'END isContainsDataTable(DataTableName)

            rtnData = False
            CreateTXTLog("H60_ChkAntibioticsByOPH", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H60_ChkAntibioticsByOPH", False)
            Return False
        End Try
    End Function
    '暫時不檢核
    Public Function H65_ChkCloudDrugs() As Boolean
        Try
            Return True
        Catch ex As Exception
            Return False
        End Try
    End Function

    ' ''' <summary>
    ' ''' H65 雲端藥歷檢核
    ' ''' </summary>
    ' ''' <returns></returns>
    ' ''' <remarks></remarks>
    '暫時 Disable 20161022 by Lits 
    'Public Function H65_ChkCloudDrugs() As Boolean 
    '    Try
    '        cleanReturnInfo()

    '        Dim DataTableName() As String = {"Medical_Record", "Order_Record"}
    '        If isContainsDataTable(DataTableName) Then
    '            Dim CheckTable As DataTable = getCheckTable()
    '            'ID_No,              -->Operation.Ds.Table(Medical_Record).[Id_No]
    '            'Drug_No,            -->需要加工: 9000+Operation.Ds.Table(Order_Record).[Order_Sno]
    '            'ATC5_Code,          -->Operation.Ds.Table(Order_Record).[ATC5_Code]
    '            'ATC5_Id,            -->自行加工: ATC5_Code前5碼 
    '            'INSU_Code,          -->Operation.Ds.Table(Order_Record).[Insu_Code]
    '            'Drug_Name,          -->Operation.Ds.Table(Order_Record).[Order_Name]
    '            'Order_Effect_Date,  -->Operation.Ds.Table(Order_Record).[Order_Effect_Date]
    '            'Order_End_Date,     -->Operation.Ds.Table(Order_Record).[Order_End_Date]
    '            'Is_Current_Order,   -->固定值='Y'
    '            'Order_Code,         -->Operation.Ds.Table(Order_Record).[Order_Code]
    '            'Chart_No            -->Operation.Ds.Table(Medical_Record).[Chart_No]
    '            'Dept_Code           -->Operation.Ds.Table(Medical_Record).[Dept_Code]
    '            'Form_Kind_Id        -->Operation.Ds.Table(Order_Record).[Form_Kind_Id]
    '            'Is_Powder           -->Operation.Ds.Table(Order_Record).[Is_Powder]
    '            'Is_Chronic_Card     -->Operation.Ds.Table(Order_Record).[Is_Chronic_Card]  -add@2015/12/04
    '            AddTableAndColumnInto(CheckTable, "Medical_Record", "Id_No")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Sno")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "ATC5_Code")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "ATC5_Code")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Name")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_End_Date")
    '            'AddTableAndColumnInto(CheckTable, "Order_Record", "Is_Current_Order")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
    '            AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")

    '            AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Form_Kind_Id")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Is_Powder")
    '            AddTableAndColumnInto(CheckTable, "Order_Record", "Is_Chronic_Card")

    '            If checkAllContainColumnIn(CheckTable) Then
    '                Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
    '                Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable


    '                Dim Content As New StringBuilder
    '                Content.AppendFormat(" declare @chartno as varchar(20)  = '{0}' " & vbCrLf, pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim)  '-->要換成Operation.Ds.Table(Medical_Record).(Chart_No)
    '                Content.AppendFormat(" declare @idno as varchar(20) = '{0}' " & vbCrLf, pubreapi.Tables("Medical_Record").Rows(0).Item("Id_No").ToString.Trim)         '-->要換成Operation.Ds.Table(Medical_Record).(Id_No)
    '                Content.AppendLine(" declare @today as date = convert(date,getdate()) ")
    '                Content.AppendFormat(" declare @medicalsn as varchar(20) = '{0}' " & vbCrLf, pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim) '-->要換成Operation.Ds.Table(Medical_Record).(Medical_Sn)")
    '                Content.AppendFormat(" declare @deptcode as varchar(10) = '{0}' " & vbCrLf, pubreapi.Tables("Medical_Record").Rows(0).Item("Dept_Code").ToString.Trim)                                                                                        '-->要換成Operation.Ds.Table(Medical_Record).(Dept_Code)
    '                Content.AppendLine(";")
    '                '--重複排除ATC
    '                Content.AppendLine(" declare @BypassTable as table (ATC5_Pat varchar(20) null)")
    '                '2015/12/04 Eddie,Lu
    '                Content.AppendLine(" insert into @BypassTable select Code_En_Name from [OPH_Code] where [Type_Id]='305' ")
    '                'Content.AppendLine("insert into @BypassTable values ")
    '                'Content.AppendLine("('D01A'),('D02A'),('D04A'),('D05A'),('D06A'),('D07A'),('D07C'),('D07X'),('D08A'),('D10A'),('D11A'),")   '--皮膚科外用藥膏
    '                'Content.AppendLine("('B05BA'),('B05AA'),('B05BB'),('A11'),('B05D'),('B05XA'),('B03BA'),")                                   '--點滴或電解質製劑
    '                'Content.AppendLine("('C08CA05'),")                                                                                          '--合理之臨床併用
    '                'Content.AppendLine("('S01A'),('S01B'),('S01C'),('S01E'),('S01F'),('S01G'),('S01X')")                                        '--眼用藥水
    '                'Content.AppendLine(",('A02B')")                                                                                             '--Only for test 
    '                'Content.AppendLine(",('A03AX'),('V03AB'),('J04AK')")                                                                        '--('J04AK01'),('J04AK02')
    '                Content.AppendLine(";")
    '                '--雲端藥歷資料
    '                Content.AppendLine("select --R.Outpatient_Sn , R.Order_Record_No , ")
    '                Content.AppendLine("       IDENTITY(int,1,1) as sno")
    '                Content.AppendLine("      ,[ID_No]")
    '                Content.AppendLine("      ,[Drug_No]")
    '                Content.AppendLine("      ,[Source]")
    '                Content.AppendLine("      ,[Icd_Code]")
    '                Content.AppendLine("      ,[Icd_Name]")
    '                Content.AppendLine("      ,[ATC5_Code]")
    '                Content.AppendLine("      ,[ATC5_Name]")
    '                Content.AppendLine("      ,[Element_Code]")
    '                Content.AppendLine("      ,[Element_Name]")
    '                Content.AppendLine("      ,[Insu_Code]")
    '                Content.AppendLine("      ,[Drug_Name]")
    '                Content.AppendLine("      ,[Spec_Qty]")
    '                Content.AppendLine("      ,[Spec_Qty_Unit]")
    '                Content.AppendLine("      ,[Dosage_Method]")
    '                Content.AppendLine("      ,[Medical_Date]")
    '                Content.AppendLine("      ,[Chronic_Receive_Date]")
    '                Content.AppendLine("      ,[Dosage]")
    '                Content.AppendLine("      ,[Days]")
    '                Content.AppendLine("      ,[Left_Days]")
    '                Content.AppendLine("      ,[Download_Time]")
    '                '2015/12/04 Eddie,Lu-------------------------------------------------------------------------------------------------------------------------------------
    '                Content.AppendLine("      ,case when (M.[Chronic_Receive_Date] is null) then M.[Medical_Date] ")
    '                Content.AppendLine("            else case when M.[Chronic_Receive_Date]>M.[Medical_Date] then M.[Chronic_Receive_Date]")
    '                Content.AppendLine("                      else M.[Medical_Date] end")
    '                Content.AppendLine("       end as Order_Effect_Date")
    '                '--refined @2015/12/10 for 如果為慢箋領藥會改用【餘藥日】去算迄日
    '                Content.AppendLine("      ,case when (M.[Chronic_Receive_Date] is null) then dateadd(DAY,M.[Days]-1,M.[Medical_Date]) ")
    '                Content.AppendLine("            else case when M.[Chronic_Receive_Date]>M.[Medical_Date] then dateadd(DAY,M.[Left_Days]-1,M.[Chronic_Receive_Date])")
    '                Content.AppendLine("                                             else dateadd(DAY,M.[Days]-1,M.[Medical_Date]) end ")
    '                Content.AppendLine("                 end as Order_End_Date ")
    '                '--------------------------------------------------------------------------------------------------------------------------------------------------------
    '                Content.AppendLine("      ,left(ATC5_Code,5) as ATC5_Id")
    '                Content.AppendLine("      ,'N' as [Is_Current_Order]")
    '                Content.AppendLine("      ,convert(varchar(20),'') as [Order_Code]")
    '                Content.AppendLine("      ,[Chart_No]")
    '                Content.AppendLine("      ,convert(varchar(20),'') as [Form_Kind_Id]")
    '                Content.AppendLine("      ,convert(varchar(10),'') as [Is_Powder] ")
    '                Content.AppendLine("      ,convert(varchar(10),'N') as [Is_Chronic_Card] ") '--add@2015/12/04
    '                Content.AppendLine("into #h65_TmpTbl")
    '                Content.AppendLine("from ICC_Cloud_Drugs M ")
    '                Content.AppendLine("where M.Id_No = @idno and M.Left_Days > 0")
    '                Content.AppendLine(";")
    '                '--加轉當日已看醫令
    '                Content.AppendLine("insert into #h65_TmpTbl")
    '                Content.AppendLine("(ID_No, Drug_No, [Source],  ATC5_Code, ATC5_Id, INSU_Code, ")
    '                Content.AppendLine(" Drug_Name, Order_Effect_Date, Order_End_Date, Is_Current_Order, Order_Code, Chart_No, Form_Kind_Id, Is_Powder, Is_Chronic_Card) ")
    '                Content.AppendLine("select @idno, 80000+R.Order_Record_No, '本院今日門診', B.ATC_Code, left(isnull(B.ATC_Code,''),5), P.Insu_Code, ")
    '                Content.AppendLine("       B.Pharmacy_Name, R.Order_Effect_Date, r.Order_End_Date, 'N', R.Order_Code, @chartno  ,B.Form_Kind_Id , R.Is_Powder  , R.Is_Chronic_Card   ") '--add R.Is_Chronic_Card 2015/12/04
    '                Content.AppendLine("from OMO_Medical_Record M inner join OMO_Order_Record_Impl R")
    '                Content.AppendLine("        on M.Outpatient_Sn = R.Outpatient_Sn ")
    '                Content.AppendLine("           and M.Cancel ='N'")
    '                Content.AppendLine("           and R.Dc='N' and R.Cancel ='N'")
    '                Content.AppendLine("           and ((M.Dept_Code ='04' and R.Is_Powder ='N') or (M.Dept_Code <> '04'))")  '--add@2015/11/26")
    '                'Content.AppendLine("           --and R.Is_Force ='N'  ")
    '                Content.AppendLine("     left outer join OPH_Pharmacy_Base B")
    '                Content.AppendLine("        on R.Order_Code = B.Order_Code ")
    '                Content.AppendLine("           and R.Charge_Date between B.Effect_Date and B.End_Date      ")
    '                Content.AppendLine("     left outer join PUB_Order_Price P")
    '                Content.AppendLine("        on R.Order_Code = P.Order_Code ")
    '                Content.AppendLine("           and P.Main_Identity_Id =2")
    '                Content.AppendLine("           and R.Charge_Date between P.Effect_Date and P.End_Date ")
    '                Content.AppendLine(" where M.Chart_No = @chartno and M.Opd_Visit_Date = @today")
    '                Content.AppendLine(" and M.Outpatient_Sn <> @medicalsn")
    '                Content.AppendLine(" and B.ATC_Code <> ''")
    '                Content.AppendLine(";")
    '                '--加轉目前待檢核之開立醫令
    '                Content.AppendLine("insert into #h65_TmpTbl ")
    '                Content.AppendLine("(ID_No, Drug_No,  ATC5_Code, ATC5_Id, INSU_Code, Drug_Name, Order_Effect_Date, Order_End_Date, Is_Current_Order, Order_Code, Chart_No, Form_Kind_Id, Is_Powder, Is_Chronic_Card) ") '--add R.Is_Chronic_Card 2015/12/04
    '                Content.AppendLine("values ")
    '                '--以下字串為 Operation.Ds.Table(Order_Record)中的欄位

    '                'ID_No,              -->Operation.Ds.Table(Medical_Record).[Id_No]
    '                'Drug_No,            -->需要加工: 9000+Operation.Ds.Table(Order_Record).[Order_Sno]
    '                'ATC5_Code,          -->Operation.Ds.Table(Order_Record).[ATC5_Code]
    '                'ATC5_Id,            -->自行加工: ATC5_Code前5碼 
    '                'INSU_Code,          -->Operation.Ds.Table(Order_Record).[Insu_Code]
    '                'Drug_Name,          -->Operation.Ds.Table(Order_Record).[Order_Name]
    '                'Order_Effect_Date,  -->Operation.Ds.Table(Order_Record).[Order_Effect_Date]
    '                'Order_End_Date,     -->Operation.Ds.Table(Order_Record).[Order_End_Date]
    '                'Is_Current_Order,   -->固定值='Y'
    '                'Order_Code,         -->Operation.Ds.Table(Order_Record).[Order_Code]
    '                'Chart_No            -->Operation.Ds.Table(Medical_Record).[Chart_No]
    '                'Form_Kind_Id        -->Operation.Ds.Table(Order_Record).[Form_Kind_Id]
    '                'Is_Powder           -->Operation.Ds.Table(Order_Record).[Is_Powder]
    '                'Is_Chronic_Card     -->Operation.Ds.Table(Order_Record).[Is_Chronic_Card]  -add@2015/12/04

    '                Dim count As Integer = 0
    '                Dim drMedical As DataRowCollection = pubreapi.Tables("Medical_Record").Rows
    '                For Each drOrder As DataRow In pubreapi.Tables("Order_Record").Rows
    '                    '(Note:如果 ATC5_Code 等於空白就不要轉)
    '                    If drOrder.Item("ATC5_Code").ToString.Trim <> "" Then
    '                        If count > 0 Then
    '                            Content.AppendLine(" , ")
    '                        End If
    '                        Content.AppendLine("( @idno,")
    '                        'Content.AppendFormat(" '{0}',", drOrder.Item("Order_Sno").ToString.Trim)
    '                        Content.AppendFormat(" '{0}',", (9000 + CInt(drOrder.Item("Order_Sno").ToString.Trim)).ToString)
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("ATC5_Code").ToString.Trim)
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("ATC5_Code").ToString.Substring(0, 5))
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("Insu_Code").ToString.Trim)
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("Order_Name").ToString.Trim)
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("Order_Effect_Date").ToString.Trim)
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("Order_End_Date").ToString.Trim)
    '                        Content.AppendLine(" 'Y',")
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("Order_Code").ToString.Trim)
    '                        Content.AppendLine(" @chartno,")
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("Form_Kind_Id").ToString.Trim)
    '                        Content.AppendFormat(" '{0}',", drOrder.Item("Is_Powder").ToString.Trim)
    '                        Content.AppendFormat(" '{0}')", drOrder.Item("Is_Chronic_Card").ToString.Trim)
    '                        count += 1
    '                    End If
    '                Next

    '                Content.AppendLine(";")
    '                '--將符合排除 ATC Code 的醫令自 #tmp513 中移除另存 #tmp514
    '                '--新增加 DP_S_Date(顯示起日)、DP_E_Date(顯示迄日)，因應慢箋提前10天可領 @2015/12/04
    '                Content.AppendLine("select *, Order_Effect_Date as DP_S_Date, Order_End_Date as DP_E_Date into #tmp514 from #h65_TmpTbl ")
    '                Content.AppendLine("where not EXISTS")  '-->若為排除: not exists;")
    '                Content.AppendLine("     (SELECT * FROM @BypassTable WHERE ATC5_Code LIKE ATC5_Pat+'%')")
    '                Content.AppendLine(";")
    '                '--排除小兒科(Dept_Code='04')磨粉(Is_Powder='Y')的藥品
    '                Content.AppendLine("delete from #tmp514 where @deptcode ='04' and Is_Powder ='Y'") '  --add@2015/11/26;
    '                Content.AppendLine(";")
    '                '--增加第一次慢箋領藥可提前10天領藥不計算重複用藥(程式邏輯為將有效日期+10天判斷) @2015/12/04
    '                Content.AppendLine("update #tmp514 set Order_Effect_Date =dateadd(day,10,Order_Effect_Date), Order_End_Date =dateadd(day,10,Order_End_Date) where")
    '                Content.AppendLine("    Is_Current_Order='Y' and Is_Chronic_Card = 'Y'")
    '                Content.AppendLine(";")

    '                Content.AppendLine("with Base as (")
    '                Content.AppendLine("    Select sno, Insu_Code, ATC5_Id, Order_Effect_Date as Order_Date, Order_End_Date, Form_Kind_Id, Is_Current_Order from #tmp514") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine("    Union All")
    '                Content.AppendLine("    Select sno, Insu_Code, ATC5_Id, dateadd(day,1,Order_Date), Order_End_Date, Form_Kind_Id, Is_Current_Order From Base ") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine("        Where Order_Date < Order_End_Date")
    '                Content.AppendLine("), ")
    '                '--@2015/12/07 增加 [Has_Current_Order] 的判斷，利用目前醫令='Y', 歷史醫令='N' (Y>N)，若有包含目前醫令時Max()就會是Y
    '                Content.AppendLine("Extend as (")
    '                Content.AppendLine("select B.ATC5_Id, B.Order_Date, max(B.Is_Current_Order) as Has_Current_Order,")
    '                Content.AppendLine("       (select '%'+convert(varchar,case when Is_Current_Order='Y' then sno else '' end)  ")
    '                '--增加<MapSno>的目的是在排除當次開立2筆相同成分藥品，其中一筆藥日期與雲端用藥成分重複，但是另一筆的日期不會，必須排除沒有重複的藥品")
    '                Content.AppendLine("            from base where ATC5_Id=B.ATC5_Id and Order_Date=B.Order_Date ")
    '                Content.AppendLine("            FOR XML PATH('')) as [MapSno]")
    '                Content.AppendLine("from base as B ")
    '                Content.AppendLine("group by B.ATC5_Id, B.Order_Date")
    '                Content.AppendLine("having count(B.Order_Date)>1 ) ")

    '                '----將同一筆藥的訊息合併, X.Drug_No, X.ATC5_Id,
    '                Content.AppendLine(" select distinct ") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine(" rtnTable1.Order_Code1 as [OrderCode], ")
    '                Content.AppendLine("       rtnTable1.Order_Code1 as [ValueData], ")
    '                Content.AppendLine("       'H65_雲端藥品檢核' as [RuleCode], ")
    '                Content.AppendLine("       '雲端藥品檢核' as [ExpressionStr1],")
    '                Content.AppendLine("       '2' as [LimitAlertLevel],")
    '                '--'請確認目前醫令中 【'+rtrim(rtnTable.Drug_Name)+'】'+'('+dbo.ADToROCDate(rtnTable.Order_Effect_Date)+'~'+dbo.ADToROCDate(rtnTable.Order_End_Date)+')',
    '                '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine("       '有重複用藥疑慮，與該病人於' + (select ';' +'{'+convert(nvarchar(max),rtrim(isnull(Source,'')))+'}已開立 ('+dbo.ADToROCDate(DP_S_Date)+'~'+dbo.ADToROCDate(DP_E_Date)+')'+'【'+rtrim(isnull(Drug_Name,''))+'】'")
    '                Content.AppendLine("                                    from #tmp514")
    '                Content.AppendLine("                                    where ATC5_Id = rtnTable1.ATC5_Id and Is_Current_Order <> 'Y' for XML Path(''))")

    '                Content.AppendLine("       as [Message],")
    '                Content.AppendLine("       'H00065' as [ItemCode],")
    '                Content.AppendLine("       '雲端藥品檢核' as [ExpressionStr2],")
    '                Content.AppendLine("       rtnTable1.Drug_Name as [OrderName],")
    '                Content.AppendLine("       stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '65' ")
    '                Content.AppendLine("                order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
    '                Content.AppendLine("       'H00065' as [ItemCodeForOPH]")
    '                Content.AppendLine("from (select isnull(Order_Code,Insu_Code) as Order_Code1, * from #tmp514 where Is_Current_Order ='Y') rtnTable1 ")
    '                Content.AppendLine("     inner join ")
    '                Content.AppendLine("     (")
    '                Content.AppendLine("        select distinct B.MapSno, C.* ") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine("        from #tmp514 C left outer join [Extend] B")
    '                Content.AppendLine("                on B.ATC5_Id = C.ATC5_Id ")
    '                Content.AppendLine("                    and B.Order_Date >= C.Order_Effect_Date ")
    '                Content.AppendLine("                    and B.Order_Date <= C.Order_End_Date ")
    '                Content.AppendLine("                    and C.Is_Current_Order ='N'  ")
    '                Content.AppendLine("        where B.ATC5_Id is not null and B.Has_Current_Order='Y'                     ") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine("     ) Y1")
    '                Content.AppendLine("     on rtnTable1.ATC5_Id = Y1.ATC5_Id and rtnTable1.Drug_No <> Y1.Drug_No ")
    '                Content.AppendLine(" and charindex('%'+convert(varchar,rtnTable1.sno),Y1.MapSno)>0 ") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine(" group by rtnTable1.Order_Code1, rtnTable1.Drug_No, rtnTable1.ATC5_Id, rtnTable1.Drug_Name, rtnTable1.Order_Effect_Date, rtnTable1.Order_End_Date  ")
    '                Content.AppendLine(" union ")
    '                Content.AppendLine(" select DISTINCT ") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine(" rtnTable2.Order_Code1 as [OrderCode], ")
    '                Content.AppendLine("       rtnTable2.Order_Code1 as [ValueData], ")
    '                Content.AppendLine("       'H65_雲端藥品檢核' as [RuleCode], ")
    '                Content.AppendLine("       '雲端藥品檢核' as [ExpressionStr1],")
    '                Content.AppendLine("       '2' as [LimitAlertLevel],")
    '                '--'請確認目前醫令中 【'+rtrim(rtnTable.Drug_Name)+'】'+'('+dbo.ADToROCDate(rtnTable.Order_Effect_Date)+'~'+dbo.ADToROCDate(rtnTable.Order_End_Date)+')',
    '                '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine("       '有重複用藥疑慮，與該病人於' + (select ';' +'本次同時開立 ('+dbo.ADToROCDate(DP_S_Date)+'~'+dbo.ADToROCDate(DP_E_Date)+')'+'【'+rtrim(isnull(Drug_Name,''))+'】'")
    '                Content.AppendLine("                                    from #tmp514  ")
    '                Content.AppendLine("                                    where ATC5_Id = rtnTable2.ATC5_Id and Is_Current_Order = 'Y' ")
    '                Content.AppendLine("                                          and Order_Code <> rtnTable2.Order_Code1 ")
    '                Content.AppendLine("                                    for XML Path(''))")

    '                Content.AppendLine("       as [Message],")
    '                Content.AppendLine("       'H00065' as [ItemCode],")
    '                Content.AppendLine("       '雲端藥品檢核' as [ExpressionStr2],")
    '                Content.AppendLine("       rtnTable2.Drug_Name as [OrderName],")
    '                Content.AppendLine("       stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '65' ")
    '                Content.AppendLine("                order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
    '                Content.AppendLine("       'H00065' as [ItemCodeForOPH]")
    '                Content.AppendLine("from (select isnull(Order_Code,Insu_Code) as Order_Code1, * from #tmp514 where Is_Current_Order ='Y') rtnTable2 ")
    '                Content.AppendLine("     inner join ")
    '                Content.AppendLine("     (")
    '                Content.AppendLine("        select distinct B.MapSno, C.* ") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine("        from #tmp514 C left outer join [Extend] B")
    '                Content.AppendLine("                on B.ATC5_Id = C.ATC5_Id ")
    '                Content.AppendLine("                    and B.Order_Date >= C.Order_Effect_Date ")
    '                Content.AppendLine("                    and B.Order_Date <= C.Order_End_Date ")
    '                Content.AppendLine("                    and C.Is_Current_Order ='Y'  ")
    '                Content.AppendLine("        where B.ATC5_Id is not null and B.Has_Current_Order='Y'                  ") '2015/12/07 Eddie,Lu:調整SQL
    '                Content.AppendLine("     ) Y2")
    '                Content.AppendLine("     on rtnTable2.ATC5_Id = Y2.ATC5_Id and rtnTable2.Form_Kind_Id = Y2.Form_Kind_Id ")
    '                Content.AppendLine("    and rtnTable2.Drug_No <> Y2.Drug_No and rtnTable2.Order_Code <> Y2.Order_Code")
    '                Content.AppendLine("group by rtnTable2.Order_Code1, rtnTable2.Drug_No, rtnTable2.ATC5_Id, rtnTable2.Drug_Name, rtnTable2.Order_Effect_Date, rtnTable2.Order_End_Date  ")
    '                Content.AppendLine("; ")
    '                Content.AppendLine("drop table #h65_TmpTbl;")
    '                Content.AppendLine("drop table #tmp514")
    '                Content.AppendLine(";")



    '                clearCommandString()

    '                CommandStr = Content

    '                Dim resultDS As DataSet = dynamicQueryWithTempTable(CommandStr.ToString)
    '                Dim _dtResult As DataTable = resultDS.Tables(0)

    '                '設定rtnDS
    '                Dim _rtnDs As New DataSet
    '                Dim _rtnDt As DataTable = _dtResult.Copy
    '                _rtnDt.TableName = "rtnTable"
    '                _rtnDs.Tables.Add(_rtnDt)
    '                Me.rtnDS = _rtnDs

    '            End If
    '        End If

    '        'CreateTXTLog("H65_ChkCloudDrugs", True)
    '        Return True

    '    Catch ex As Exception
    '        log.dbErrorMsg(ex.StackTrace & "    CommandStr：" & CommandStr.ToString, ex)
    '        rtnData = False
    '        'CreateTXTLog("H65_ChkCloudDrugs", False)

    '        Return False

    '    End Try
    'End Function

    ''' <summary>
    ''' H66 管制藥天數檢核
    ''' 011A        麻醉管制藥品(一級口服)                                      
    ''' 011B        麻醉管制藥品( 一級針劑)                                     
    ''' 012C        麻醉管制藥品(二級口服)                                      
    ''' 012D        麻醉管制藥品( 二級針劑)                                     
    ''' 012E        麻醉管制藥品( 二級Fentanyl) (貼片)                            
    ''' 013F        麻醉管制藥品( 三級Temgesic) (舌下錠)                              
    ''' 013G        麻醉管制藥品( 三級其他)                                     
    ''' 014H        麻醉管制藥品(四級所有劑型)   
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H66_ChkRestrictedDrugsDaysByOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Name")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Date")

                If checkAllContainColumnIn(CheckTable) Then
                    'Dim Order_Code As String = ""
                    'Dim Order_Name As String = ""
                    'Dim Order_Dr As String = ""
                    'Dim Order_Days As Integer = 0
                    'Dim Order_Date As Date = Nothing
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    'Initial DataTable
                    Dim Content As New StringBuilder
                    Content.AppendLine(" declare @h66_tmptbl as table(Order_Code varchar(20), Order_Name nvarchar(200),")
                    Content.AppendLine("                             Order_Dr varchar(20), Order_Days int, Order_Date date) ")

                    'Insert
                    Content.AppendLine(" insert into @h66_TmpTbl values ")
                    Dim count As Integer = 0
                    For Each drOrder As DataRow In pubreapi.Tables("Order_Record").Rows
                        'Order_Code = drOrder.Item("Order_Code").ToString.Trim
                        'Order_Name = drOrder.Item("Order_Name").ToString.Trim
                        'Order_Dr = drOrder.Item("Order_Doctor_Code").ToString.Trim.ToUpper
                        'Order_Days = drOrder.Item("Days").ToString.Trim
                        'Order_Date = drOrder.Item("Order_Date").ToString.Trim
                        If count > 0 Then
                            Content.AppendLine(" , ")
                        End If
                        Content.AppendFormat(" ( '{0}' " & vbCrLf, drOrder.Item("Order_Code").ToString.Trim)
                        Content.AppendFormat(" , '{0}' " & vbCrLf, drOrder.Item("Order_Name").ToString.Trim)
                        Content.AppendFormat(" , '{0}' " & vbCrLf, drOrder.Item("Order_Doctor_Code").ToString.Trim.ToUpper)
                        Content.AppendFormat(" ,  {0}  " & vbCrLf, drOrder.Item("Days").ToString.Trim)
                        Content.AppendFormat(" , '{0}' )" & vbCrLf, drOrder.Item("Order_Date").ToString.Trim)
                        count += 1
                    Next


                    '--rtnDs("Order_Record")中每一筆的Order_Code 去 
                    Content.AppendLine(" select H.Order_Code, H.Order_Name, H.Order_Dr, H.Order_Days, P.Property_Id,")
                    Content.AppendLine("       isnull(D.Code_EN_Name,999) as Ctrl_Days, ")  ' E.License_No, ")
                    Content.AppendLine("       convert(nvarchar(500),'') as False_Message,rtrim(D.Code_Name) as Drug_Type  ")
                    Content.AppendLine(" into #h66_results")
                    Content.AppendLine(" from @h66_TmpTbl H ")
                    Content.AppendLine("     inner join OPH_Pharmacy_Base B ")
                    Content.AppendLine("        on H.Order_Code =B.Pharmacy_12_Code")
                    Content.AppendLine("     inner join OPH_Property P  --> P.[Property_Id]")
                    Content.AppendLine("        on P.Pharmacy_12_Code= B.Pharmacy_12_Code")
                    Content.AppendLine("           and P.Property_Id like '01[1-4]%'  ")   '--目前僅控管(第一級至第四級)
                    Content.AppendLine("     left outer join OPH_Code D")
                    Content.AppendLine("        on D.Code_Id = CASE WHEN LEN(P.[Property_Id])>3 THEN P.[Property_Id] ELSE SUBSTRING(P.[Property_Id],1,3)+left(isnull(B.Form_Kind_Id,''),1) END    --substring(P.Property_Id,3,1)=D.[Code_Id]")
                    Content.AppendLine("           and D.[Type_Id]='304' and D.Dc='N'")
                    Content.AppendLine(";")
                    'Content.AppendLine(" SELECT * FROM #h66_results")
                    'Content.AppendLine("     left outer join PMS_Emp_License E")
                    'Content.AppendLine("        on H.Order_Dr = E.Employee_Code")
                    'Content.AppendLine("           and E.License_Id='CTRL'")
                    'Content.AppendLine("           and H.Order_Date >= E.License_Effect_Date") 
                    'Content.AppendLine("           and H.Order_Date <= E.License_End_Date")

                    'update
                    Content.AppendLine(" update #h66_results set False_Message = Drug_Type ")
                    Content.AppendLine("    +'類管制藥品最高開立天數為'+convert(varchar(10),Ctrl_Days)+'天' where Order_Days >")
                    Content.AppendLine("    Ctrl_Days")

                    '--組合 rtnDs
                    Content.AppendLine(" select Order_Code as [OrderCode], ")
                    Content.AppendLine("       Order_Code as [ValueData], ")
                    Content.AppendLine("       'H66_管制藥天數檢核' as [RuleCode], ")
                    Content.AppendLine("       '有管制藥品' as [ExpressionStr1],")
                    Content.AppendLine("       '2' as [LimitAlertLevel],")
                    Content.AppendLine("       False_Message as [Message],")
                    Content.AppendLine("       'H00066' as [ItemCode],")
                    Content.AppendLine("       '管制藥品開立天數限制' as [ExpressionStr2],")
                    Content.AppendLine("       Order_Name as [OrderName],")
                    Content.AppendLine("        stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '66' order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
                    Content.AppendLine("       'H00066' as [ItemCodeForOPH]")
                    Content.AppendLine(" from #h66_results as rtnTable where False_Message <> ''")
                    Content.AppendLine(" ;")
                    Content.AppendLine(" drop table #h66_results")
                    Content.AppendLine(" ;")
                    '--return [False_Message] <>'' 的
                    'Content.AppendLine(" go")

                    clearCommandString()

                    CommandStr = Content

                    Dim resultDS As DataSet = dynamicQueryWithTempTable(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = _dtResult.Copy
                    _rtnDt.TableName = "rtnTable"
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                End If
            End If

            CreateTXTLog("H66_ChkRestrictedDrugsDaysByOPH", True)
            Return True

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H66_ChkRestrictedDrugsDaysByOPH", False)
            Return False

        End Try
    End Function

    ''' <summary>
    ''' H67 管制藥自費檢核
    ''' 05 婦產科 Obstetrics and Gynecology     婦產科
    ''' 泌尿科
    ''' 10120001                硬膜外麻醉穿刺針組 100/394/
    ''' 10120002                硬膜外穿刺導管             
    ''' 41017                   PCA 病患自控式止痛(一天) 
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H67_ChkRestrictedDrugsBuyByself() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "Diagnosis"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                '--以下字串為 Operation.Ds.Table(Order_Record)中的欄位
                'Order_Code,         -->Operation.Ds.Table(Order_Record).[Order_Code]
                'Order_Name,         -->Operation.Ds.Table(Order_Record).[Order_Name]
                'Order_Dr,           -->Operation.Ds.Table(Medical_Record).[Doctor_Code]
                'Order_Days,         -->Operation.Ds.Table(Order_Record).[Days]
                'Order_Date,         -->Operation.Ds.Table(Order_Record).[Order_Date]
                'Main_Identity_Id    -->Operation.Ds.Table(Medical_Record).[Main_Identity_Id]
                'Is_Force            -->Operation.Ds.Table(Order_Record).[IS_Force]
                'Dept_Code           -->Operation.Ds.Table(Medical_Record).[Dept_Code]

                'Icd_Code,           -->Operation.Ds.Table(Diagnosis).[Icd_Code]
                'Icd_Sort_Value,     -->Operation.Ds.Table(Diagnosis).[Icd_Sort_Value]
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Name")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Main_Identity_Id")
                AddTableAndColumnInto(CheckTable, "Order_Record", "IS_Force")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Dept_Code")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")

                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Sort_Value")
                If checkAllContainColumnIn(CheckTable) Then
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Try
                        Dim Source_Type As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Source_Type").ToString.Trim.ToUpper
                        If Source_Type = "E" OrElse Source_Type = "I" Then
                            Return True
                        End If
                    Catch ex As Exception
                    End Try

                    Dim Content As New StringBuilder
                     
                    Content.AppendLine("declare @h67_tmptbl as table(Order_Code varchar(20), Order_Name nvarchar(200), Order_Dr varchar(20), Order_Days int, Order_Date date, ")
                    Content.AppendLine("                             Main_Identity_Id varchar(5), Is_Force varchar(5), Dept_Code varchar(20), Chart_No varchar(10))")
                    Content.AppendLine("insert into @h67_TmpTbl values ")

                    '--以下字串為 Operation.Ds.Table(Order_Record)中的欄位
                    'Order_Code,         -->Operation.Ds.Table(Order_Record).[Order_Code]
                    'Order_Name,         -->Operation.Ds.Table(Order_Record).[Order_Name]
                    'Order_Dr,           -->Operation.Ds.Table(Medical_Record).[Doctor_Code]
                    'Order_Days,         -->Operation.Ds.Table(Order_Record).[Days]
                    'Order_Date,         -->Operation.Ds.Table(Order_Record).[Order_Date]
                    'Main_Identity_Id    -->Operation.Ds.Table(Medical_Record).[Main_Identity_Id]
                    'Is_Force            -->Operation.Ds.Table(Order_Record).[IS_Force]
                    'Dept_Code           -->Operation.Ds.Table(Medical_Record).[Dept_Code]
                    'Chart_No            -->Operation.Ds.Table(Medical_Record).[Chart_No]

                    Dim count As Integer = 0
                    Dim drMedical As DataRowCollection = pubreapi.Tables("Medical_Record").Rows
                    For Each drOrder As DataRow In pubreapi.Tables("Order_Record").Rows
                        If count > 0 Then
                            Content.AppendLine(" , ")
                        End If
                        Content.AppendFormat("( '{0}' ,", drOrder.Item("Order_Code").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("Order_Name").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drMedical(0).Item("Doctor_Code").ToString.Trim)
                        Content.AppendFormat("   {0}  ,", drOrder.Item("Days").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("Order_Date").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drMedical(0).Item("Main_Identity_Id").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("IS_Force").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drMedical(0).Item("Dept_Code").ToString.Trim)
                        Content.AppendFormat("  '{0}' )", drMedical(0).Item("Chart_No").ToString.Trim)
                        count += 1
                    Next

                    Content.AppendLine("declare @h67_diag as table (Icd_Code varchar(20), Icd_Sort_Value int)")
                    Content.AppendLine("insert into @h67_diag values ")
                    '--以下字串為 Operation.Ds.Table(Order_Record)中的欄位
                    'Icd_Code,           -->Operation.Ds.Table(Diagnosis).[Icd_Code]
                    'Icd_Sort_Value,     -->Operation.Ds.Table(Diagnosis).[Icd_Sort_Value]

                    count = 0
                    For Each drDiagnosis As DataRow In pubreapi.Tables("Diagnosis").Rows

                        If drDiagnosis.Item("Icd_Code").ToString.Trim = "" Or drDiagnosis.Item("Icd_Sort_Value").ToString.Trim = "" Then
                            Continue For
                        End If

                        If count > 0 Then
                            Content.AppendLine(" , ")
                        End If
                        Content.AppendFormat("( '{0}' ,", drDiagnosis.Item("Icd_Code").ToString.Trim)
                        Content.AppendFormat("   {0}  )", drDiagnosis.Item("Icd_Sort_Value").ToString.Trim)
                        count += 1
                    Next
                    '--PUB_Syscode Type_Id =[810]
                    Content.AppendLine(";")
                    Content.AppendLine("declare @h67_bypass_icd as table (Icd_Code_Bypass varchar(20)) ")
                    Content.AppendLine("insert into @h67_bypass_icd select Code_En_Name from PUB_Syscode where")
                    Content.AppendLine("[Type_Id]='810'")
                    Content.AppendLine(";")

                    '--rtnDs(""Order_Record"")中每一筆的Order_Code 去
                    Content.AppendLine("select H.Order_Code, H.Order_Name, H.Order_Dr, H.Order_Days, B.Form_Kind_Id as Dosage_Form, ") 'substring(P.Property_Id,4,1) as Dosage_Form, ")
                    Content.AppendLine("       Main_Identity_Id, Is_Force, convert(nvarchar(500),'') as False_Message, '2' as Limit_Alert_Level, Chart_No  ") ''3' 改 '2' 2016/12/5
                    Content.AppendLine("into #h67_results")
                    Content.AppendLine("from @h67_TmpTbl H ")
                    Content.AppendLine("     inner join OPH_Pharmacy_Base B ")
                    Content.AppendLine("        on H.Order_Code =B.Pharmacy_12_Code")
                    Content.AppendLine("     inner join OPH_Property P  --> P.[Property_Id]")
                    Content.AppendLine("        on P.Pharmacy_12_Code= B.Pharmacy_12_Code")
                    Content.AppendLine("           and P.Property_Id like '01[1-4]%'")  '--目前僅控管(第一級至第三級)")
                    Content.AppendLine(";")
                    '--口服 : A).健保身份不可自費購買。B).自費身份可自費購買，但限3天並須點選原因。
                    'Content.AppendLine("update #h67_results set False_Message = ")
                    'Content.AppendLine("    '口服管制藥品(第一級至第四級): 健保身份不可自費購買' ")
                    'Content.AppendLine("    where Dosage_Form not in ('B','I') and ")
                    'Content.AppendLine("          ((Main_Identity_Id='2' and Is_Force='Y')) ") ' or (Main_Identity_Id='1' and Order_Days>3))")
                    Content.AppendLine(";")
                    '--口服 : 符合 自費身份可自費購買，但--> 限3天並須點選原因。 --排除 PCA,產科無痛分娩
                    'Content.AppendLine("update #h67_results set Limit_Alert_Level='2', False_Message = ")
                    'Content.AppendLine("    '口服管制藥品(第一級至第四級) 自費身份自費購買限3天，請輸入原因。' ")
                    'Content.AppendLine("    from #h67_results B ")
                    'Content.AppendLine("    where Dosage_Form not in ('B','I') and Main_Identity_Id='1' and ")
                    'Content.AppendLine("          ( Order_Days>3")
                    'Content.AppendLine("            and ( (select count(Order_Code) from @h67_tmptbl where Order_Code in ('96037','41017')) +")
                    'Content.AppendLine("                  (select count(Order_Code) from @h67_tmptbl where Dept_Code ='05' and Order_Code in ('10120001','10120002')) +")
                    'Content.AppendLine("                  (select count(Dr_Employee_Code) from OMO_Doctor_Patient_Relation  ")
                    'Content.AppendLine("                        where Dr_Employee_Code = B.Order_Dr and Chart_No = B.Chart_No ))=0") 'and A.Order_Code = Order_Code))=0")
                    'Content.AppendLine("          )")

                    '--針劑 : A).健保身份不可自費購買。B).自費身份可自費購買，但限1天並須點選原因。
                    Content.AppendLine("update #h67_results set False_Message = ")
                    Content.AppendLine("    '針劑管制藥品(第一級至第四級): A)健保身份不可自費購買。'") 'B)自費身份可自費購買，但限1天。' ")
                    Content.AppendLine("    where Dosage_Form in ('B','I') and ")
                    Content.AppendLine("          ((Main_Identity_Id='2' and Is_Force='Y')) ") ' or (Main_Identity_Id='1' and Order_Days>1))")
                    Content.AppendLine(";")
                    '--針劑 : 符合 自費身份可自費購買，但--> 限1天並須點選原因。 --排除 PCA,產科無痛分娩
                    'Content.AppendLine("update #h67_results set Limit_Alert_Level='2', False_Message = ")
                    'Content.AppendLine("    '針劑管制藥品(第一級至第四級) 自費身份自費購買限1天，請輸入原因。' ")
                    'Content.AppendLine("    where Dosage_Form in ('B','I') and Main_Identity_Id='1' and")
                    'Content.AppendLine("          ( Order_Days > 1")
                    'Content.AppendLine("            and (select count(AA.Icd_Code) from @h67_diag AA inner join @h67_bypass_icd BB")
                    'Content.AppendLine("                         on AA.Icd_Code = BB.Icd_Code_Bypass and AA.Icd_Sort_Value <= 3)=0")
                    'Content.AppendLine("          )")
                    Content.AppendLine(";")
                    Content.AppendLine("select Order_Code as [OrderCode], ")
                    Content.AppendLine("       Order_Code as [ValueData], ")
                    Content.AppendLine("       'H67_管制藥自費檢核' as [RuleCode], ")
                    Content.AppendLine("       '有管制藥品' as [ExpressionStr1],")
                    Content.AppendLine("       '2' as [LimitAlertLevel],") '4改成2
                    Content.AppendLine("       False_Message as [Message],")
                    Content.AppendLine("       'H00067' as [ItemCode],")
                    Content.AppendLine("       'H67_管制藥自費檢核' as [ExpressionStr2],")
                    Content.AppendLine("       Order_Name as [OrderName],")
                    Content.AppendLine("       stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '67' ")
                    Content.AppendLine("                order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
                    Content.AppendLine("       'H00067' as [ItemCodeForOPH]")
                    Content.AppendLine("from #h67_results as rtnTable where False_Message <> ''")
                    Content.AppendLine(";")
                    Content.AppendLine("drop table #h67_results")
                    Content.AppendLine(";")



                    clearCommandString()

                    CommandStr = Content

                    Dim resultDS As DataSet = dynamicQueryWithTempTable(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = _dtResult.Copy
                    _rtnDt.TableName = "rtnTable"
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                End If
            End If

            CreateTXTLog("H67_ChkRestrictedDrugsBuyByself", True)
            Return True

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace & "   CommandStr：" & CommandStr.ToString, ex)
            rtnData = False
            CreateTXTLog("H67_ChkRestrictedDrugsBuyByself", False)
            Return False

        End Try
    End Function

    ''' <summary>
    ''' H68 懷孕分級檢核
    ''' 1.藥品之懷孕婦女分級 (B/D  B* /D  C/D  C* /D) 。
    ''' 2.醫師開立 :註明懷孕婦女分級(D and X 級) 。
    ''' 3.排除條件 :男性、年齡>46之婦女。
    ''' D   IALE          IALE                    AC45701221              Phenytoin 250mg/5ml
    ''' D   IANX          IANX                    AC39626209              Lorazepam 2mg/ml
    ''' D   IBCGI         IBCGI                   KC003692BC              感BCG Immunotherapeutic
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H68_ChkPregnancyByOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "Patient"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Name")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Dept_Section_Id")
                AddTableAndColumnInto(CheckTable, "Patient", "Sex_Id")
                AddTableAndColumnInto(CheckTable, "Patient", "Birth_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Pregnancy_Level_Id")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtMedicalRecord As DataTable = pubreapi.Tables("Medical_Record")
                    Dim _dtPatient As DataTable = pubreapi.Tables("Patient")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable


                    Dim Content As New StringBuilder
                    Content.AppendLine("declare @h68_tmptbl as table(Order_Code varchar(20), Order_Name nvarchar(200), Order_Date date, ")
                    Content.AppendLine("                             Dept_Section_Id varchar(20), Sex_Id varchar(10), Birth_Date date,")
                    Content.AppendLine("                             Pregnancy_Level_Id varchar(10))")
                    Content.AppendLine("insert into @h68_TmpTbl values  ")
                    '--以下字串為 Operation.Ds.Table(Order_Record)中的欄位
                    'Order_Code,         -->Operation.Ds.Table(Order_Record).[Order_Code]
                    'Order_Name,         -->Operation.Ds.Table(Order_Record).[Order_Name]
                    'Order_Date,         -->Operation.Ds.Table(Order_Record).[Order_Date]
                    'Dept_Section_Id           -->Operation.Ds.Table(Medical_Record).[Dept_Section_Id]
                    'Sex_Id,             -->Operation.Ds.Table(Patient).[Sex_Id]     --性別代碼 { 1男 | 2女 | 3其他 }
                    'Birth_Date          -->Operation.Ds.Table(Patient).[Birth_Date]
                    'Pregnancy_Level_Id  -->Operation.Ds.Table(Medical_Record).[Pregnancy_Level_Id]

                    Dim count As Integer = 0
                    Dim drMedical As DataRowCollection = _dtMedicalRecord.Rows
                    Dim drPatient As DataRowCollection = _dtPatient.Rows
                    For Each drOrder As DataRow In pubreapi.Tables("Order_Record").Rows
                        If count > 0 Then
                            Content.AppendLine(" , ")
                        End If
                        Content.AppendFormat("( '{0}' ,", drOrder.Item("Order_Code").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("Order_Name").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("Order_Date").ToString.Trim)
                        Content.AppendFormat("   {0}  ,", drMedical(0).Item("Dept_Section_Id").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drPatient(0).Item("Sex_Id").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drPatient(0).Item("Birth_Date").ToString.Substring(0, 4) & "/" & drPatient(0).Item("Birth_Date").ToString.Substring(4, 2) & "/" & drPatient(0).Item("Birth_Date").ToString.Substring(6, 2))
                        Content.AppendFormat("  '{0}' )", drMedical(0).Item("Pregnancy_Level_Id").ToString.Trim)
                        count += 1
                    Next

                    '--rtnDs(""Order_Record"")中每一筆的Order_Code 去
                    Content.AppendLine("select rtnTable.Order_Code as [OrderCode], ")
                    Content.AppendLine("       rtnTable.Order_Code as [ValueData], ")
                    Content.AppendLine("       'H68_懷孕分級檢核' as [RuleCode], ")
                    Content.AppendLine("       '懷孕分級檢核' as [ExpressionStr1],")
                    Content.AppendLine("       '2' as [LimitAlertLevel],")
                    Content.AppendLine("       '該藥品懷孕分級註記為 '+rtrim(B.[Pregnancy_Class_Id]) + ' 請確認病人懷孕狀況!' as [Message],")
                    Content.AppendLine("       'H00068' as [ItemCode],")
                    Content.AppendLine("       'H68_懷孕分級檢核' as [ExpressionStr2],")
                    Content.AppendLine("       rtnTable.Order_Name as [OrderName],")
                    Content.AppendLine("        stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '68' order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
                    Content.AppendLine("       'H00068' as [ItemCodeForOPH]")
                    Content.AppendLine("from @h68_TmpTbl as rtnTable")
                    Content.AppendLine("     inner join OPH_Pharmacy_Base B ")
                    Content.AppendLine("        on rtnTable.Order_Code =B.Pharmacy_12_Code and B.Dc='N'   ")
                    Content.AppendLine("     inner join PUB_Syscode S")
                    Content.AppendLine("        on B.Pregnancy_Class_Id = S.Code_En_Name and S.[Type_Id]='811' and S.Dc='N'")
                    Content.AppendLine("where Pregnancy_Level_Id in ('D','X') ")
                    Content.AppendLine("      and Sex_Id = '2'")
                    Content.AppendLine("      and datediff(year,Birth_Date, Order_Date)<=46")
                    Content.AppendLine("      and datediff(year,Birth_Date, Order_Date)>=10")
                    Content.AppendLine(";")
                    'Content.AppendLine("go")




                    clearCommandString()

                    CommandStr = Content

                    Dim resultDS As DataSet = dynamicQueryWithTempTable(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = _dtResult.Copy
                    _rtnDt.TableName = "rtnTable"
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                End If
            End If

            CreateTXTLog("H68_ChkPregnancyByOPH", True)
            Return True

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H68_ChkPregnancyByOPH", False)
            Return False

        End Try
    End Function

    ''' <summary>
    ''' H69 藥品(成人)磨粉檢核
    ''' 成人不可磨粉之管控 ：
    ''' 1.設定範圍 :1).門診、急診。2).健保給付、自費項目。3).可磨粉科診(目前定義為成人不可磨粉;即非兒科(04)不可磨粉)。4).可磨粉年齡。
    ''' 2.控制方式 :警訊、限制不可開立、點選原因可開立。原因:1.管灌2.轉介藥師衛教3.獨居
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H69_ChkDrugsGrindableByOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "Patient"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Name")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Is_Powder")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Dept_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Patient", "Age_Year")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtMedicalRecord As DataTable = pubreapi.Tables("Medical_Record")
                    Dim _dtPatient As DataTable = pubreapi.Tables("Patient")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable


                    Dim Content As New StringBuilder

                    Content.AppendLine(" declare @Powder_Max_Age as int = 10 --最大磨粉年齡(歲)")
                    Content.AppendLine(" declare @AllowPowderDept as table (Dept_Code varchar(10))  --可磨粉科(診)")
                    Content.AppendLine(" insert into @AllowPowderDept Values ('04')")
                    Content.AppendLine(" declare @h69_tmptbl as table(Order_Code varchar(20), Order_Name nvarchar(200), Is_Power char(1), ")
                    Content.AppendLine("                             Dept_Code varchar(20), Order_Date date,  Age_Year int)")
                    Content.AppendLine(" insert into @h69_TmpTbl values  ")
                    '--以下字串為 Operation.Ds.Table(Order_Record)中的欄位
                    'Order_Code,         -->Operation.Ds.Table(Order_Record).[Order_Code]
                    'Order_Name,         -->Operation.Ds.Table(Order_Record).[Order_Name]
                    'Is_Powder,          -->Operation.Ds.Table(Order_Record).[Is_Powder]
                    'Dept_Code           -->Operation.Ds.Table(Medical_Record).[Dept_Code]
                    'Order_Date,         -->Operation.Ds.Table(Order_Record).[Order_Date]
                    'Age_Year          -->Operation.Ds.Table(Patient).[Age_Year]

                    Dim count As Integer = 0
                    Dim drMedical As DataRowCollection = _dtMedicalRecord.Rows
                    Dim drPatient As DataRowCollection = _dtPatient.Rows
                    For Each drOrder As DataRow In pubreapi.Tables("Order_Record").Rows
                        If count > 0 Then
                            Content.AppendLine(" , ")
                        End If
                        Content.AppendFormat("( '{0}' ,", drOrder.Item("Order_Code").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("Order_Name").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("Is_Powder").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drMedical(0).Item("Dept_Code").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("Order_Date").ToString.Trim)
                        Content.AppendFormat("   {0}  )", drPatient(0).Item("Age_Year"))
                        count += 1
                    Next
                    Content.AppendLine(";")
                    Content.AppendLine("select Order_Code as [OrderCode], ")
                    Content.AppendLine("       Order_Code as [ValueData], ")
                    Content.AppendLine("       'H69_藥品成人磨粉檢核' as [RuleCode], ")
                    Content.AppendLine("       '有藥品磨粉' as [ExpressionStr1],")
                    Content.AppendLine("       '2' as [LimitAlertLevel],")
                    Content.AppendLine("       '藥品磨粉請輸入原因!' as [Message],")
                    Content.AppendLine("       'H00069' as [ItemCode],")
                    Content.AppendLine("       'H69_藥品成人磨粉檢核' as [ExpressionStr2],")
                    Content.AppendLine("       Order_Name as [OrderName],")
                    Content.AppendLine("        stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '69' order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
                    Content.AppendLine("       'H00069' as [ItemCodeForOPH]")
                    Content.AppendLine(" from @h69_TmpTbl as rtnTable ")
                    Content.AppendLine(" where Is_Power ='Y' ")
                    Content.AppendLine("      and ( Age_Year > @Powder_Max_Age or ")
                    Content.AppendLine("           (rtnTable.Dept_Code not in (select Dept_Code from @AllowPowderDept)) ) ")
                    Content.AppendLine(";")
                    'Content.AppendLine("go")





                    clearCommandString()

                    CommandStr = Content

                    Dim resultDS As DataSet = dynamicQueryWithTempTable(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = _dtResult.Copy
                    _rtnDt.TableName = "rtnTable"
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                End If
            End If

            CreateTXTLog("H69_ChkDrugsGrindableByOPH", True)
            Return True

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H69_ChkDrugsGrindableByOPH", False)
            Return False

        End Try
    End Function

    ''' <summary>
    ''' H70 藥物過敏反應 ADR 檢核
    ''' 醫師開立處方時，有藥物過敏反應ADR : SJS、TEN、Anaphylactic Shock，限制不可開立。
    ''' Stevens Johnson Syndrome (SJS)；Toxic Epidermal Necrolysis (TEN)；Anaphylactic Shock
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H70_ChkSpecicalAllergyADRByOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Name")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable


                    Dim Content As New StringBuilder


                    Content.AppendFormat("declare @chartno as varchar(20) = '{0}'", pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim) '-->要換成Operation.Ds.Table(Medical_Record).(Chart_No)")
                    Content.AppendLine("declare @h70_TmpTbl as table(Order_Code varchar(20), Order_Name nvarchar(200), Order_Dr varchar(20))")
                    Content.AppendLine("insert into @h70_TmpTbl values ")
                    '--以下字串為 Operation.Ds.Table(Order_Record)中的欄位
                    'Order_Code,         -->Operation.Ds.Table(Order_Record).[Order_Code]
                    'Order_Name,         -->Operation.Ds.Table(Order_Record).[Order_Name]
                    'Order_Dr,           -->Operation.Ds.Table(Medical_Record).[Doctor_Code]
                    Dim count As Integer = 0
                    Dim drMedical As DataRowCollection = pubreapi.Tables("Medical_Record").Rows
                    For Each drOrder As DataRow In pubreapi.Tables("Order_Record").Rows
                        If count > 0 Then
                            Content.AppendLine(" , ")
                        End If
                        Content.AppendFormat("( '{0}' ,", drOrder.Item("Order_Code").ToString.Trim)
                        Content.AppendFormat("  '{0}' ,", drOrder.Item("Order_Name").ToString.Trim)
                        Content.AppendFormat("  '{0}' )", drMedical(0).Item("Doctor_Code").ToString.Trim)
                        count += 1
                    Next
                    '--比對 ADR Results
                    Content.AppendLine("declare @BypassTable as table (ADR_Pat nvarchar(200) null)")
                    Content.AppendLine("insert into @BypassTable values ")
                    Content.AppendLine("('(SJS)'),('(TEN)'),('Anaphylactic Shock')")
                    Content.AppendLine(";")
                    Content.AppendLine("select Order_Code as [OrderCode], ")
                    Content.AppendLine("       Order_Code as [ValueData], ")
                    Content.AppendLine("       'H70_藥物過敏反應/ADR檢核' as [RuleCode], ")
                    Content.AppendLine("       '有藥品' as [ExpressionStr1],")
                    Content.AppendLine("       '2' as [LimitAlertLevel],")
                    Content.AppendLine("       '病人有該藥品過敏反應記錄ADR: '+rtrim(ADR_Results.Allergy_Reaction)+'，限制不可開立!' as [Message],")
                    Content.AppendLine("       'H00070' as [ItemCode],")
                    Content.AppendLine("       'H70_藥物過敏反應/ADR檢核' as [ExpressionStr2],")
                    Content.AppendLine("       Order_Name as [OrderName],")
                    Content.AppendLine("        stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '70' order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
                    Content.AppendLine("       'H00070' as [ItemCodeForOPH]")
                    Content.AppendLine("from @h70_TmpTbl as rtnTable ")
                    Content.AppendLine("     inner join (select Allergy_Code, Allergy_Reaction from PUB_Patient_Allergy where ")
                    Content.AppendLine("                    Exists (select * from  @BypassTable WHERE Allergy_Reaction LIKE '%'+ADR_Pat+'%')")
                    Content.AppendLine("                    and Chart_No = @chartno ")
                    Content.AppendLine("                ) ADR_Results")
                    Content.AppendLine("        on rtnTable.Order_Code = ADR_Results.Allergy_Code ")
                    Content.AppendLine("where  ADR_Results.Allergy_Code is not null")
                    Content.AppendLine(";")



                    clearCommandString()

                    CommandStr = Content

                    Dim resultDS As DataSet = dynamicQueryWithTempTable(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = _dtResult.Copy
                    _rtnDt.TableName = "rtnTable"
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                End If
            End If

            CreateTXTLog("H70_ChkSpecicalAllergyADRByOPH", True)
            Return True

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H70_ChkSpecicalAllergyADRByOPH", False)
            Return False

        End Try
    End Function

    ''' <summary>
    ''' H71 管制藥執照檢核
    ''' 011A        麻醉管制藥品(一級口服)                                      
    ''' 011B        麻醉管制藥品( 一級針劑)                                     
    ''' 012C        麻醉管制藥品(二級口服)                                      
    ''' 012D        麻醉管制藥品( 二級針劑)                                     
    ''' 012E        麻醉管制藥品( 二級Fentanyl) (貼片)                            
    ''' 013F        麻醉管制藥品( 三級Temgesic) (舌下錠)                              
    ''' 013G        麻醉管制藥品( 三級其他)                                     
    ''' 014H        麻醉管制藥品(四級所有劑型) 
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H71_ChkRestrictedDrugsLicenseByOPH() As Boolean
        Try
            cleanReturnInfo()


            Dim DataTableName() As String = {"Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Name")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Date")

                If checkAllContainColumnIn(CheckTable) Then
                    'Dim Order_Code As String = ""
                    'Dim Order_Name As String = ""
                    'Dim Order_Dr As String = ""
                    'Dim Order_Days As Integer = 0
                    'Dim Order_Date As Date = Nothing
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Dim Content As New StringBuilder
                    'Initial
                    Content.AppendLine("declare @h71_tmptbl as table(Order_Code varchar(20), Order_Name nvarchar(200), ")
                    Content.AppendLine("                             Order_Dr varchar(20), Order_Days int, Order_Date date) ")

                    'Insert
                    Content.AppendLine(" insert into @h71_Tmptbl values ")
                    Dim count As Integer = 0
                    For Each drOrder As DataRow In pubreapi.Tables("Order_Record").Rows
                        'Order_Code = drOrder.Item("Order_Code").ToString.Trim
                        'Order_Name = drOrder.Item("Order_Name").ToString.Trim
                        'Order_Dr = drOrder.Item("Order_Doctor_Code").ToString.Trim.ToUpper
                        'Order_Days = drOrder.Item("Days").ToString.Trim
                        'Order_Date = drOrder.Item("Order_Date").ToString.Trim
                        If count > 0 Then
                            Content.AppendLine(" , ")
                        End If
                        Content.AppendFormat(" ( '{0}' " & vbCrLf, drOrder.Item("Order_Code").ToString.Trim)
                        Content.AppendFormat(" , '{0}' " & vbCrLf, drOrder.Item("Order_Name").ToString.Trim)
                        Content.AppendFormat(" , '{0}' " & vbCrLf, drOrder.Item("Order_Doctor_Code").ToString.Trim.ToUpper)
                        Content.AppendFormat(" ,  {0}  " & vbCrLf, drOrder.Item("Days").ToString.Trim)
                        Content.AppendFormat(" , '{0}' )" & vbCrLf, drOrder.Item("Order_Date").ToString.Trim)
                        count += 1
                    Next

                    '--rtnDs(""Order_Record"")中每一筆的Order_Code 去
                    Content.AppendLine(" select H.Order_Code, H.Order_Name, H.Order_Dr, H.Order_Days, P.Property_Id,")
                    Content.AppendLine("       isnull(D.Code_EN_Name,999) as Ctrl_Days, E.License_No, ")
                    Content.AppendLine("       convert(nvarchar(500),'') as False_Message, '3' as Limit_Alert_Level  ")
                    Content.AppendLine(" into #h71_results")
                    Content.AppendLine(" from @h71_TmpTbl H ")
                    Content.AppendLine("     inner join OPH_Pharmacy_Base B ")
                    Content.AppendLine("        on H.Order_Code =B.Pharmacy_12_Code")
                    Content.AppendLine("     inner join OPH_Property P  --> P.[Property_Id]")
                    Content.AppendLine("        on P.Pharmacy_12_Code= B.Pharmacy_12_Code")
                    Content.AppendLine("           and P.Property_Id like '01[1-3]%'  ") '--目前僅控管(第一級至第三級)
                    Content.AppendLine("     left outer join OPH_Code D")
                    Content.AppendLine("        on substring(P.Property_Id,3,1)=D.[Code_Id]")
                    Content.AppendLine("           and D.[Type_Id]='304' and D.Dc='N'")
                    Content.AppendLine("     left outer join PMS_Emp_License E")
                    Content.AppendLine("        on H.Order_Dr = E.Employee_Code")
                    Content.AppendLine("           and E.License_Id='CTRL'")
                    Content.AppendLine("           and H.Order_Date >= E.License_Effect_Date")
                    Content.AppendLine("           and H.Order_Date <= E.License_End_Date")
                    Content.AppendLine(";")
                    'Update
                    Content.AppendLine(" update #h71_results set False_Message = ")
                    Content.AppendLine("    '醫師需領有管制藥品使用執照，方可使用管制藥品(第一級至第三級)' where License_No is null")
                    Content.AppendLine(";")
                    '--組合 rtnDs
                    Content.AppendLine(" select Order_Code as [OrderCode], ")
                    Content.AppendLine("       Order_Code as [ValueData], ")
                    Content.AppendLine("       'H71_管制藥執照檢核' as [RuleCode], ")
                    Content.AppendLine("       '有管制藥品' as [ExpressionStr1],")
                    Content.AppendLine("       '2' as [LimitAlertLevel],")
                    Content.AppendLine("       False_Message as [Message],")
                    Content.AppendLine("       'H00071' as [ItemCode],")
                    Content.AppendLine("       '醫師需領有管制藥品使用執照' as [ExpressionStr2],")
                    Content.AppendLine("       Order_Name as [OrderName],")
                    Content.AppendLine("        stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '71' order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
                    Content.AppendLine("       'H00071' as [ItemCodeForOPH]")
                    Content.AppendLine(" from #h71_results as rtnTable where False_Message <> ''")
                    Content.AppendLine(" ;")
                    '--MyRow(0) = MyQueryRow.OrderCode
                    '--MyRow(1) = MyQueryRow.ValueData
                    '--MyRow(2) = MyQueryRow.RuleCode
                    '--MyRow(3) = MyQueryRow.ExpressionStr1
                    '--MyRow(4) = MyQueryRow.LimitAlertlevel
                    '--MyRow(5) = MyQueryRow.Message
                    '--MyRow(6) = MyQueryRow.ItemCode
                    '--MyRow(7) = MyQueryRow.ExpressionStr2
                    '--MyRow(8) = MyQueryRow.OrderName
                    '--MyRow(9) = MyQueryRow.OPHRuleReason
                    '--MyRow(10) = MyQueryRow.ItemCodeForOPH
                    Content.AppendLine(" drop table #h71_results")
                    Content.AppendLine(" ;")
                    '--return [False_Message] <>'' 的
                    'Content.AppendLine(" go")

                    clearCommandString()

                    CommandStr = Content
                    Dim resultDS As DataSet = dynamicQueryWithTempTable(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = _dtResult.Copy
                    _rtnDt.TableName = "rtnTable"
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                End If
            End If

            CreateTXTLog("H71_ChkRestrictedDrugsLicenseByOPH", True)
            Return True

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H71_ChkRestrictedDrugsLicenseByOPH", False)
            Return False

        End Try
    End Function

    ''' <summary>
    ''' H72 藥品開立年限檢核    
    ''' 開立年限檢核(ONOL,OFEM用藥開立年限)
    ''' H72_ChkDrugsDoseTimeByOPH()
    ''' select * from PUB_SysCode where type_Id = '812'
    ''' --delete from PUB_SysCode where type_Id = '812'
    ''' insert into PUB_Syscode values ('812','1','ONOL','5','N',1,'N','syscom-k', getdate(),null,null),
    ''' ('812','2','OFEM','5','N',2,'N','syscom-k', getdate(),null,null),
    ''' ('812','3','EFEN2','6','N',2,'N','syscom-k', getdate(),null,null)
    ''' select dateadd(YEAR,0.5,getdate())
    ''' 14041179    ONOL                    2015-11-10 14:48:00.000 5                                                                                                   
    ''' 15067197    ONOL                    2015-11-24 14:40:00.000 5                     
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H72_ChkDrugsDoseTimeByOPH() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Name")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Date")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable


                    Dim Content As New StringBuilder


                    Content.AppendFormat("declare @chartno as varchar(20)  = '{0}'", pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim) ' -->要換成Operation.Ds.Table(Medical_Record).(Chart_No)")
                    Content.AppendFormat("declare @medicalsn as varchar(20) = '{0}'", pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim) ' -->要換成Operation.Ds.Table(Medical_Record).(Medical_Sn)")
                    Content.AppendLine("declare @h72_tmptbl as table(Order_Code varchar(20), Order_Name nvarchar(200),")
                    Content.AppendLine("                             Order_Dr varchar(20), Order_Days int, Order_Date date) ")
                    Content.AppendLine("insert into @h72_TmpTbl values ")

                    '--以下字串為 Operation.Ds.Table(Order_Record)中的欄位
                    'Order_Code,         -->Operation.Ds.Table(Order_Record).[Order_Code]
                    'Order_Name,         -->Operation.Ds.Table(Order_Record).[Order_Name]
                    'Order_Dr,           -->Operation.Ds.Table(Medical_Record).[Doctor_Code]
                    'Order_Days,         -->Operation.Ds.Table(Order_Record).[Days]
                    'Order_Date,         -->Operation.Ds.Table(Order_Record).[Order_Date]
                    Dim count As Integer = 0
                    Dim drMedical As DataRowCollection = pubreapi.Tables("Medical_Record").Rows
                    For Each drOrder As DataRow In pubreapi.Tables("Order_Record").Rows
                        If count > 0 Then
                            Content.AppendLine(" , ")
                        End If
                        Content.AppendFormat(" ( '{0}' " & vbCrLf, drOrder.Item("Order_Code").ToString.Trim)
                        Content.AppendFormat(" , '{0}' " & vbCrLf, drOrder.Item("Order_Name").ToString.Trim)
                        Content.AppendFormat(" , '{0}' " & vbCrLf, drMedical(0).Item("Doctor_Code").ToString.Trim.ToUpper)
                        Content.AppendFormat(" ,  {0}  " & vbCrLf, drOrder.Item("Days").ToString.Trim)
                        Content.AppendFormat(" , '{0}' )" & vbCrLf, drOrder.Item("Order_Date").ToString.Trim)
                        count += 1
                    Next
                    Content.AppendLine("select T.Order_Code as [OrderCode], ")
                    Content.AppendLine("       T.Order_Code as [ValueData], ")
                    Content.AppendLine("       'H72_藥物開立年限檢核' as [RuleCode], ")
                    Content.AppendLine("       '藥品開立期限' as [ExpressionStr1],")
                    Content.AppendLine("       CASE WHEN ((T.Order_Date>= dateadd(YEAR,A.Ctrl_Year,A.Order_Start_Date)) ")
                    Content.AppendLine("                  or (dateadd(DAY,T.Order_Days,T.Order_Date)>= dateadd(YEAR,A.Ctrl_Year,A.Order_Start_Date))")
                    Content.AppendLine("                 ) THEN '2' ELSE '2'")
                    Content.AppendLine("       END as [LimitAlertLevel],")
                    Content.AppendLine("       CASE WHEN ((T.Order_Date>= dateadd(YEAR,A.Ctrl_Year,A.Order_Start_Date)) ")
                    Content.AppendLine("                  or (dateadd(DAY,T.Order_Days,T.Order_Date)>= dateadd(YEAR,A.Ctrl_Year,A.Order_Start_Date))")
                    Content.AppendLine("                 ) THEN")
                    Content.AppendLine("                        '病人該藥品自'+dbo.AdToRocDate(A.Order_Start_Date)+'開始使用，本次使用時段已超過該藥開立年限('+")
                    Content.AppendLine("                        convert(varchar(10),A.Ctrl_Year)+'年)至'+dbo.AdToRocDate( dateadd(YEAR,A.Ctrl_Year,A.Order_Start_Date))+'，本次限制不可開立!' ")
                    Content.AppendLine("            ELSE '病人該藥品自'+dbo.AdToRocDate(A.Order_Start_Date)+'開始使用，使用時段為('+")
                    Content.AppendLine("                 convert(varchar(10),A.Ctrl_Year)+'年)至'+dbo.AdToRocDate( dateadd(YEAR,A.Ctrl_Year,A.Order_Start_Date))+'到期後限制不可開立!' ")
                    Content.AppendLine("       END as [Message],")
                    Content.AppendLine("       'H00072' as [ItemCode],")
                    Content.AppendLine("       'H72_藥品開立年限檢核' as [ExpressionStr2],")
                    Content.AppendLine("       Order_Name as [OrderName],")
                    Content.AppendLine("       stuff((select '|'+Phrase_Name from OPH_Phrase where Phrase_Code_Id = '72' ")
                    Content.AppendLine("                order by Phrase_Code for XML Path('')),1,1,'') as [OPHRuleReason],")
                    Content.AppendLine("       'H00072' as [ItemCodeForOPH]")
                    Content.AppendLine("from @h72_TmpTbl as T inner join ")
                    Content.AppendLine("(")


                    Content.AppendLine("SELECT R.Chart_No, " & vbCrLf)
                    Content.AppendLine("       R.Order_Code, " & vbCrLf)
                    Content.AppendLine("       Min(R.Effect_Date)             AS Order_Start_Date, " & vbCrLf)
                    Content.AppendLine("       CONVERT(INT, Max(S.Code_Name)) AS Ctrl_Year " & vbCrLf)
                    Content.AppendLine("FROM   EMR_Order_Detail R " & vbCrLf)
                    Content.AppendLine("       INNER JOIN PUB_Syscode S " & vbCrLf)
                    Content.AppendLine("               ON R.Order_Code = S.Code_En_Name " & vbCrLf)
                    Content.AppendLine("                  AND S.[Type_Id] = '812' " & vbCrLf)
                    Content.AppendLine("                  AND S.Dc = 'N' " & vbCrLf)
                    Content.AppendLine("WHERE  R.Chart_No = @chartno " & vbCrLf)
                    Content.AppendLine("       AND R.Medical_Sn <> @medicalsn " & vbCrLf)
                    Content.AppendLine("GROUP  BY R.Chart_No, " & vbCrLf)
                    Content.AppendLine("          R.Order_Code")
                     
                    'Content.AppendLine("    select M.Chart_No, R.Order_Code, min(R.Order_Effect_Date) as Order_Start_Date, convert(int,Max(S.Code_Name)) as Ctrl_Year")
                    'Content.AppendLine("    from OMO_Medical_Record M inner join OMO_Order_Record_Impl  R")
                    'Content.AppendLine("            on M.Outpatient_Sn = R.Outpatient_Sn")
                    'Content.AppendLine("               and R.Dc='N' and R.Cancel ='N'")
                    'Content.AppendLine("         inner join PUB_Syscode S")
                    'Content.AppendLine("            on R.Order_Code = S.Code_En_Name ")
                    'Content.AppendLine("               and S.[Type_Id] = '812' and S.Dc='N'")
                    'Content.AppendLine("    where M.Chart_No = @chartno and M.Cancel = 'N' and M.Outpatient_Sn <> @medicalsn")
                    'Content.AppendLine("    group by M.Chart_No, R.Order_Code")
                     
                    Content.AppendLine(") as A on T.Order_Code = A.Order_Code ")
                    'Content.AppendLine("          and ((T.Order_Date>= dateadd(YEAR,A.Ctrl_Year,A.Order_Start_Date)) ")
                    'Content.AppendLine("                or (dateadd(DAY,T.Order_Days,T.Order_Date)>= dateadd(YEAR,A.Ctrl_Year,A.Order_Start_Date))")
                    'Content.AppendLine("              )")
                    Content.AppendLine(";")


                    clearCommandString()

                    CommandStr = Content

                    Dim resultDS As DataSet = dynamicQueryWithTempTable(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = _dtResult.Copy
                    _rtnDt.TableName = "rtnTable"
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                End If
            End If

            CreateTXTLog("H72_ChkDrugsDoseTimeByOPH", True)
            Return True

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H72_ChkDrugsDoseTimeByOPH", False)
            Return False

        End Try
    End Function

#End Region


#Region "C14, C15, C16, C18, C20, C21, C22"

    ''' <summary>
    ''' 1.30 C14 與前X次醫令執行間隔檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function C14_ChkPreviousOrderTimeInterval() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode") '規則運算項目
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData") '規則檢核值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode") '觸發該規則的項目代碼
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData") '觸發該規則的設定值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '運算項目參數 X 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location") '檢核發生的site, C/S

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _medicalSn As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.TrimEnd
                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.TrimEnd
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.TrimEnd
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim _location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    rtnData = False

                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = Me.GenRtnDataTable
                    _rtnDs.Tables.Add(_rtnDt)

                    Dim _lastXOrderTimeInterval As Int32 = 0
                    clearCommandString()

                    Select Case _location
                        Case "C" '前台診間
                            Select Case _triggerItemCode
                                Case "A00004" '成大碼觸發

                                    Dim _orderEffectDate As Date? = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) CDate(r("Order_Effect_Date"))).FirstOrDefault

                                    If _orderEffectDate Is Nothing Then
                                        rtnData = False
                                        CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                                        Return True
                                    End If

                                    Dim var1 As New System.Text.StringBuilder
                                    var1.AppendFormat("SELECT TOP 1 MAX(DATEDIFF(dd, hh.Execute_Date, '{0}')) AS LastXOrderTimeInterval " & vbCrLf, _orderEffectDate.Value.ToShortDateString)
                                    var1.AppendFormat("FROM   (SELECT TOP ({0}) ri.Execute_Date, " & vbCrLf, _valueX)
                                    var1.AppendFormat("                       Chart_No " & vbCrLf)
                                    var1.AppendFormat("        FROM   OMO_Order_Record_Impl ri " & vbCrLf)
                                    var1.AppendFormat("               INNER JOIN OMO_Medical_Record mm " & vbCrLf)
                                    var1.AppendFormat("                 ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                                    var1.AppendFormat("                      AND ri.Outpatient_Sn = mm.Outpatient_Sn ) " & vbCrLf)
                                    var1.AppendFormat("        WHERE  ri.Order_Code = '{0}' " & vbCrLf, _triggerValueData)
                                    var1.AppendFormat("               AND ri.Outpatient_Sn <> '{0}' " & vbCrLf, _medicalSn)
                                    var1.AppendFormat("               AND ri.Execute_Date <= '{0}' " & vbCrLf, _orderEffectDate.Value.ToShortDateString)
                                    var1.AppendFormat("               AND ri.Cancel = 'N' " & vbCrLf)
                                    var1.AppendFormat("               AND ri.Is_Force <> 'Y' " & vbCrLf)
                                    var1.AppendFormat("        ORDER  BY ri.Execute_Date DESC) hh " & vbCrLf)

                                    clearCommandString()

                                    CommandStr = var1

                                Case "A00006" '健保碼觸發
                                    'Dim _orderEffectDate As String = _dtOrderRecord.Rows(0).Field(Of Date)("Order_Effect_Date").ToShortDateString
                                    Dim _orderEffectDate As String = String.Empty

                                    If _dtOrderRecord.Rows(0)("Order_Effect_Date").ToString.Trim <> 0 Then
                                        _orderEffectDate = CDate(_dtOrderRecord.Rows(0)("Order_Effect_Date")).ToString("yyyy-MM-dd")
                                    Else
                                        rtnData = False
                                        CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                                        Return True
                                    End If

                                    Dim _orderCodes As String() = Me.InsuCodeToOrderCode(New String() {_triggerValueData}, _orderEffectDate)

                                    Dim _orderCodeSet As String = Nothing
                                    If _orderCodes.Count = 0 Then
                                        _orderCodeSet = "NULL"
                                    Else
                                        _orderCodeSet = "'" & String.Join("','", _orderCodes) & "'"
                                    End If

                                    Dim var1 As New System.Text.StringBuilder
                                    var1.AppendFormat("SELECT TOP 1 MAX(DATEDIFF(dd, hh.Execute_Date, '{0}')) AS LastXOrderTimeInterval " & vbCrLf, _orderEffectDate)
                                    var1.AppendFormat("FROM   (SELECT TOP ({0}) ri.Execute_Date " & vbCrLf, _valueX)
                                    var1.AppendFormat("        FROM   OMO_Order_Record_Impl ri " & vbCrLf)
                                    var1.AppendFormat("               INNER JOIN OMO_Medical_Record mm " & vbCrLf)
                                    var1.AppendFormat("                 ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                                    var1.AppendFormat("                      AND ri.Outpatient_Sn = mm.Outpatient_Sn ) " & vbCrLf)
                                    var1.AppendFormat("        WHERE  ri.Order_Code IN ( {0} ) " & vbCrLf, _orderCodeSet)
                                    var1.AppendFormat("               AND ri.Outpatient_Sn <> '{0}' " & vbCrLf, _medicalSn)
                                    var1.AppendFormat("               AND ri.Execute_Date <= '{0}' " & vbCrLf, _orderEffectDate)
                                    var1.AppendFormat("               AND ri.Cancel = 'N' " & vbCrLf)
                                    var1.AppendFormat("               AND ri.Is_Force <> 'Y' " & vbCrLf)
                                    var1.AppendFormat("        ORDER  BY ri.Execute_Date DESC) hh " & vbCrLf)

                                    clearCommandString()

                                    CommandStr = var1
                                Case Else
                                    rtnData = False
                                    CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                                    Return True
                            End Select
                        Case "S" '後台申報日結檔
                            Select Case _triggerItemCode
                                Case "A00004" '成大碼觸發

                                    Dim _orderEffectDate As Date? = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) CDate(r("Order_Effect_Date"))).FirstOrDefault

                                    If _orderEffectDate Is Nothing Then
                                        rtnData = False
                                        CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                                        Return True
                                    End If

                                    Dim var1 As New System.Text.StringBuilder
                                    var1.AppendFormat("SELECT TOP 1 MAX(DATEDIFF(dd, hh.Opd_Charge_Date, '{0}')) AS LastXOrderTimeInterval " & vbCrLf, _orderEffectDate.Value.ToShortDateString)
                                    var1.AppendFormat("FROM   (SELECT TOP ({0}) ri.Opd_Charge_Date " & vbCrLf, _valueX)
                                    var1.AppendFormat("        FROM   OHD_Order_Record ri " & vbCrLf)
                                    var1.AppendFormat("               INNER JOIN OHD_Medical_Record mm " & vbCrLf)
                                    var1.AppendFormat("                 ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                                    var1.AppendFormat("                      AND ri.Medical_Sn = mm.Medical_Sn ) " & vbCrLf)
                                    var1.AppendFormat("        WHERE  ri.Order_Code = '{0}' " & vbCrLf, _triggerValueData)
                                    var1.AppendFormat("               AND ri.Medical_Sn <> '{0}' " & vbCrLf, _medicalSn)
                                    var1.AppendFormat("               AND ri.Opd_Charge_Date <= '{0}' " & vbCrLf, _orderEffectDate.Value.ToShortDateString)
                                    var1.AppendFormat("               AND ri.Cancel = 'N' " & vbCrLf)
                                    var1.AppendFormat("        ORDER  BY ri.Opd_Charge_Date DESC) hh " & vbCrLf)

                                    CommandStr = var1

                                Case "A00006" '健保碼觸發
                                    'Dim _orderEffectDate As String = _dtOrderRecord.Rows(0).Field(Of Date)("Order_Effect_Date").ToShortDateString
                                    Dim _orderEffectDate As String = String.Empty

                                    If _dtOrderRecord.Rows(0)("Order_Effect_Date").ToString.Trim <> 0 Then
                                        _orderEffectDate = CDate(_dtOrderRecord.Rows(0)("Order_Effect_Date")).ToString("yyyy-MM-dd")
                                    Else
                                        rtnData = False
                                        CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                                        Return True
                                    End If

                                    Dim var1 As New System.Text.StringBuilder
                                    var1.AppendFormat("SELECT TOP 1 MAX(DATEDIFF(dd, hh.Opd_Charge_Date, '{0}')) AS LastXOrderTimeInterval " & vbCrLf, _orderEffectDate)
                                    var1.AppendFormat("FROM   (SELECT TOP ({0}) ri.Opd_Charge_Date " & vbCrLf, _valueX)
                                    var1.AppendFormat("        FROM   OHD_Order_Record ri " & vbCrLf)
                                    var1.AppendFormat("               INNER JOIN OHD_Medical_Record mm " & vbCrLf)
                                    var1.AppendFormat("                 ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                                    var1.AppendFormat("                      AND ri.Medical_Sn = mm.Medical_Sn ) " & vbCrLf)
                                    var1.AppendFormat("        WHERE  ri.Insu_Code = '{0}' " & vbCrLf, _triggerValueData)
                                    var1.AppendFormat("               AND ri.Medical_Sn <> '{0}' " & vbCrLf, _medicalSn)
                                    var1.AppendFormat("               AND ri.Opd_Charge_Date <= '{0}' " & vbCrLf, _orderEffectDate)
                                    var1.AppendFormat("               AND ri.Cancel = 'N' " & vbCrLf)
                                    var1.AppendFormat("        ORDER  BY ri.Opd_Charge_Date DESC) hh " & vbCrLf)

                                    CommandStr = var1
                                Case Else
                                    rtnData = False
                                    CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                                    Return True
                            End Select
                        Case Else
                            rtnData = False
                            CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                            Return True
                    End Select

                    Dim _dsResult As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    Dim _drResult As DataRow = _dsResult.Tables(0).Rows(0)

                    Dim _rtnDr As DataRow = _rtnDt.NewRow
                    _rtnDt.Rows.Add(_rtnDr)

                    If IsDBNull(_drResult("LastXOrderTimeInterval")) Then
                        _rtnDr("rtnValueData") = -99
                        _rtnDr("rtnValueUnitCode") = String.Empty

                        '直接Return rtnData = True
                        rtnData = True
                        CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                        Return True
                    Else
                        _lastXOrderTimeInterval = _drResult("LastXOrderTimeInterval")
                        _rtnDr("rtnValueData") = _lastXOrderTimeInterval
                        _rtnDr("rtnValueUnitCode") = String.Empty
                    End If

                    '判斷是否符合邏輯
                    Select Case _operatorCode
                        Case "01" '>
                            If _lastXOrderTimeInterval > _valueData Then

                                rtnData = rtnData Or True
                            End If
                        Case "02" '=
                            If _lastXOrderTimeInterval = _valueData Then

                                rtnData = rtnData Or True
                            End If
                        Case "03" '<
                            If _lastXOrderTimeInterval < _valueData Then

                                rtnData = rtnData Or True
                            End If
                        Case "04" '>=
                            If _lastXOrderTimeInterval >= _valueData Then

                                rtnData = rtnData Or True
                            End If
                        Case "05" '<=
                            If _lastXOrderTimeInterval <= _valueData Then

                                rtnData = rtnData Or True
                            End If
                        Case "06" '!=
                            If _lastXOrderTimeInterval <> _valueData Then

                                rtnData = rtnData Or True
                            End If
                        Case Else
                            rtnData = False
                            CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                            Return True
                    End Select

                    CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("C14_ChkPreviousOrderTimeInterval", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C14_ChkPreviousOrderTimeInterval", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.31 C15 距目前X天中的歷史醫令執行次數檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function C15_ChkOrderTimes() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode") '規則運算項目
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData") '規則檢核值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode") '觸發該規則的項目代碼
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData") '觸發該規則的設定值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '運算項目參數 X 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location") '檢核發生的site, C/S

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd

                    Dim _operatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.TrimEnd
                    Dim _valueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.TrimEnd
                    Dim _triggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.TrimEnd
                    Dim _triggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim _location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim

                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    rtnData = False

                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As DataTable = Me.GenRtnDataTable
                    _rtnDs.Tables.Add(_rtnDt)

                    clearCommandString()

                    Select Case _location
                        Case "C" '前台診間
                            Select Case _triggerItemCode
                                Case "A00004" '成大碼觸發

                                    Dim _orderEffectDate As Date? = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) CDate(r("Order_Effect_Date"))).FirstOrDefault

                                    If _orderEffectDate Is Nothing Then
                                        rtnData = False
                                        CreateTXTLog("C15_ChkOrderTimes", True)
                                        Return True
                                    End If

                                    Dim var1 As New System.Text.StringBuilder
                                    var1.AppendFormat("SELECT COUNT(*) AS OrderTimes " & vbCrLf)
                                    var1.AppendFormat("FROM   OMO_Order_Record_Impl ri " & vbCrLf)
                                    var1.AppendFormat("       INNER JOIN OMO_Medical_Record mm " & vbCrLf)
                                    var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                                    var1.AppendFormat("              AND ri.Outpatient_Sn = mm.Outpatient_Sn ) " & vbCrLf)
                                    var1.AppendFormat("WHERE  ri.Order_Code = '{0}' " & vbCrLf, _triggerValueData)
                                    var1.AppendFormat("       AND ( ri.Execute_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderEffectDate.Value.ToShortDateString)
                                    var1.AppendFormat("       AND ri.Cancel = 'N' " & vbCrLf)
                                    var1.AppendFormat("       AND ri.Is_Force <> 'Y' " & vbCrLf)

                                    clearCommandString()

                                    CommandStr = var1

                                Case "A00006" '健保碼觸發
                                    Dim _orderEffectDate As String = _dtOrderRecord.Rows(0).Field(Of Date)("Order_Effect_Date").ToShortDateString
                                    Dim _orderCodes As String() = Me.InsuCodeToOrderCode(New String() {_triggerValueData}, _orderEffectDate)

                                    Dim _orderCodeSet As String = Nothing
                                    If _orderCodes.Count = 0 Then
                                        _orderCodeSet = "NULL"
                                    Else
                                        _orderCodeSet = "'" & String.Join("','", _orderCodes) & "'"
                                    End If

                                    Dim var1 As New System.Text.StringBuilder
                                    var1.AppendFormat("SELECT COUNT(*) AS OrderTimes " & vbCrLf)
                                    var1.AppendFormat("FROM   OMO_Order_Record_Impl ri " & vbCrLf)
                                    var1.AppendFormat("       INNER JOIN OMO_Medical_Record mm " & vbCrLf)
                                    var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                                    var1.AppendFormat("              AND ri.Outpatient_Sn = mm.Outpatient_Sn ) " & vbCrLf)
                                    var1.AppendFormat("WHERE  ri.Order_Code IN ( {0} ) " & vbCrLf, _orderCodeSet)
                                    var1.AppendFormat("       AND ( ri.Execute_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderEffectDate)
                                    var1.AppendFormat("       AND ri.Cancel = 'N' " & vbCrLf)
                                    var1.AppendFormat("       AND ri.Is_Force <> 'Y' " & vbCrLf)

                                    clearCommandString()

                                    CommandStr = var1
                                Case Else
                                    rtnData = False
                                    CreateTXTLog("C15_ChkOrderTimes", True)
                                    Return True
                            End Select
                        Case "S" '後台申報日結檔
                            Select Case _triggerItemCode
                                Case "A00004" '成大碼觸發

                                    Dim _orderEffectDate As Date? = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.TrimEnd = _triggerValueData).Select(Function(r) CDate(r("Order_Effect_Date"))).FirstOrDefault

                                    If _orderEffectDate Is Nothing Then
                                        rtnData = False
                                        CreateTXTLog("C15_ChkOrderTimes", True)
                                        Return True
                                    End If

                                    Dim var1 As New System.Text.StringBuilder
                                    var1.AppendFormat("SELECT COUNT(*) AS OrderTimes " & vbCrLf)
                                    var1.AppendFormat("FROM   OHD_Order_Record ri " & vbCrLf)
                                    var1.AppendFormat("       INNER JOIN OHD_Medical_Record mm " & vbCrLf)
                                    var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                                    var1.AppendFormat("              AND ri.Medical_Sn = mm.Medical_Sn ) " & vbCrLf)
                                    var1.AppendFormat("WHERE  ri.Order_Code = '{0}' " & vbCrLf, _triggerValueData)
                                    var1.AppendFormat("       AND ( ri.Opd_Charge_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderEffectDate.Value.ToShortDateString)
                                    var1.AppendFormat("       AND ri.Cancel = 'N' " & vbCrLf)

                                    CommandStr = var1

                                Case "A00006" '健保碼觸發
                                    Dim _orderEffectDate As String = _dtOrderRecord.Rows(0).Field(Of Date)("Order_Effect_Date").ToShortDateString

                                    Dim var1 As New System.Text.StringBuilder
                                    var1.AppendFormat("SELECT COUNT(*) AS OrderTimes " & vbCrLf)
                                    var1.AppendFormat("FROM   OHD_Order_Record ri " & vbCrLf)
                                    var1.AppendFormat("       INNER JOIN OHD_Medical_Record mm " & vbCrLf)
                                    var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                                    var1.AppendFormat("              AND ri.MEdical_Sn = mm.Medical_Sn ) " & vbCrLf)
                                    var1.AppendFormat("WHERE  ri.Insu_Code = '{0}' " & vbCrLf, _triggerValueData)
                                    var1.AppendFormat("       AND ( ri.Opd_Charge_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderEffectDate)
                                    var1.AppendFormat("       AND ri.Cancel = 'N' ")

                                    CommandStr = var1
                                Case Else
                                    rtnData = False
                                    CreateTXTLog("C15_ChkOrderTimes", True)
                                    Return True
                            End Select
                        Case Else
                            rtnData = False
                            CreateTXTLog("C15_ChkOrderTimes", True)
                            Return True
                    End Select

                    Dim _dsResult As DataSet = dynamicQueryNotPub(CommandStr.ToString)
                    Dim _drResult As DataRow = _dsResult.Tables(0).Rows(0)

                    Dim _orderTimes As Int32 = _drResult("OrderTimes")

                    '填入找出的結果至欲回傳的DataSet
                    Dim _rtnDr As DataRow = _rtnDt.NewRow
                    _rtnDr("rtnValueData") = _orderTimes
                    _rtnDr("rtnValueUnitCode") = String.Empty
                    _rtnDt.Rows.Add(_rtnDr)

                    If _orderTimes = 0 Then
                        rtnData = True
                        CreateTXTLog("C15_ChkOrderTimes", True)
                        Return True
                    End If

                    '判斷是否符合邏輯
                    Select Case _operatorCode
                        Case "01" '>
                            If _valueData > _orderTimes Then

                                rtnData = rtnData Or True
                            End If
                        Case "02" '=
                            If _valueData = _orderTimes Then

                                rtnData = rtnData Or True
                            End If
                        Case "03" '<
                            If _valueData < _orderTimes Then

                                rtnData = rtnData Or True
                            End If
                        Case "04" '>=
                            If _valueData >= _orderTimes Then

                                rtnData = rtnData Or True
                            End If
                        Case "05" '<=
                            If _valueData < _orderTimes Then

                                rtnData = rtnData Or True
                            End If
                        Case "06" '!=
                            If _valueData <> _orderTimes Then

                                rtnData = rtnData Or True
                            End If
                        Case Else
                            rtnData = False
                            CreateTXTLog("C15_ChkOrderTimes", True)
                            Return True
                    End Select

                    CreateTXTLog("C15_ChkOrderTimes", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("C15_ChkOrderTimes", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C15_ChkOrderTimes", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.16 C16 當次看診成大碼X合計數量檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function C16_ChkOrderCodeSetAmountByClinic() As Boolean
        cleanReturnInfo()
        rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty_Unit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '運算項目參數 X 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim _transferunit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Dim _orderRecords = _dtOrderRecordE.Where(Function(r) Me.IsInRange(r("Order_Code").ToString.TrimEnd, _valueX))

                    Dim _result As Decimal = _orderRecords.Sum(Function(r) Me.Tqty_UnitTransform(r("Order_Code").ToString.TrimEnd, r("Tqty_Unit").ToString.TrimEnd, CType(r("Tqty"), Decimal), _transferunit))

                    rtnData = _result
                    rtnDataUnit = _transferunit
                    CreateTXTLog("C16_ChkOrderCodeSetAmountByClinic", True)
                    Return True
                End If
            End If
            '=================
            rtnData = 0
            CreateTXTLog("C16_ChkOrderCodeSetAmountByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = -1
            CreateTXTLog("C16_ChkOrderCodeSetAmountByClinic", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.17 C18 當次看診健保碼X合計數量檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function C18_ChkNhiCodeSetAmountByClinic() As Boolean
        cleanReturnInfo()
        rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '運算項目參數 X 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim _transferunit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Dim _insuCode As String() = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.Trim <> String.Empty).Select(Function(r) r("Insu_Code").ToString.TrimEnd).ToArray

                    Dim _insuCodeSet As String = String.Join(",", _insuCode)
                    Dim _dsReturn As DataSet = Me.Ext_InsuCode_To_OrderCodeDs(_insuCodeSet, Now.Date, True)
                    Dim _dtReturn As DataTable = _dsReturn.Tables(0)
                    Dim _dtReturnE = _dtReturn.AsEnumerable

                    Dim _result = _dtOrderRecordE.Where(Function(r) Me.IsInRange(r("Insu_Code").ToString, _valueX)).Sum(Function(r) Me.Tqty_UnitTransform(r("Order_Code").ToString.TrimEnd, r("Tqty_Unit").ToString.TrimEnd, CType(r("Tqty"), Decimal), _transferunit))

                    rtnData = _result
                    CreateTXTLog("C18_ChkNhiCodeSetAmountByClinic", True)
                    Return True
                End If
            End If
            '=================
            rtnData = 0
            CreateTXTLog("C18_ChkNhiCodeSetAmountByClinic", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = -1
            CreateTXTLog("C18_ChkNhiCodeSetAmountByClinic", False)
        End Try
    End Function

    ''' <summary>
    ''' 1.32 C20 看診醫師距目前X天中執行醫令健保碼Y的數量檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function C20_ChkOrderTimesByDoctorPeriod() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Dim _TqtyNow As Decimal = 0
        Dim _TqtyBefore As Decimal = 0

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '運算項目參數 X 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueY") '運算項目參數 Y 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location") '檢核發生的site, C/S

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _doctorCode As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Doctor_Code").ToString.TrimEnd
                    Dim _orderDate As Date = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"))

                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim _valueY As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueY").ToString.Trim
                    Dim _location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim _transferunit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Dim _orderCodes = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.TrimEnd = _valueY AndAlso r("Order_Code").ToString.Trim <> String.Empty).Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct.ToArray
                    'Dim _insuCodes = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.Trim <> String.Empty).Select(Function(r) r("Insu_Code").ToString.TrimEnd).Distinct

                    'Clear command string.
                    clearCommandString()

                    _TqtyNow = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.TrimEnd = _valueY).Sum(Function(r) Me.Tqty_UnitTransform(r("Order_Code").ToString.TrimEnd, r("Tqty_Unit").ToString.TrimEnd, (CDec(IIf(IsDBNull(r("Tqty")), 0.0, r("Tqty"))) / CDec(r("Days"))), _transferunit))

                    Select Case _location
                        Case "C"
                            Dim _orderCodeSet As String = String.Empty
                            If _orderCodes.Count = 0 Then
                                _orderCodeSet = "NULL"
                            Else
                                _orderCodeSet = "'" & String.Join("','", _orderCodes) & "'"
                            End If

                            'Dim var1 As New System.Text.StringBuilder
                            'var1.AppendFormat("SELECT ISNULL(SUM(Tqty), 0) AS Tqty_Before " & vbCrLf)
                            'var1.AppendFormat("FROM   OMO_Order_Record_Impl ri " & vbCrLf)
                            'var1.AppendFormat("       INNER JOIN OMO_Medical_Record mm " & vbCrLf)
                            'var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            'var1.AppendFormat("              AND ri.Outpatient_Sn = mm.Outpatient_Sn ) " & vbCrLf)
                            'var1.AppendFormat("WHERE  ri.Order_Code IN ( {0} ) " & vbCrLf, _orderCodeSet)
                            'var1.AppendFormat("       AND ( ri.Execute_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderDate.ToShortDateString)
                            'var1.AppendFormat("       AND ri.Cancel = 'N' " & vbCrLf)


                            '_orderCodeSet = "'907436', '022230', '223637', '267158', '805528'"
                            '_chartNo = "08269613"
                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL(ri.Tqty, 0)    AS Tqty, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Tqty_Unit)   AS Tqty_Unit, " & vbCrLf)
                            var1.AppendFormat("       ISNULL(ri.Dosage, 0)  AS Dosage, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Dosage_Unit) AS Dosage_Unit, " & vbCrLf)
                            var1.AppendFormat("       CASE " & vbCrLf)
                            var1.AppendFormat("         WHEN ri.Days = 0 THEN 1 " & vbCrLf)
                            var1.AppendFormat("         ELSE ISNULL(ri.Days, 1) " & vbCrLf)
                            var1.AppendFormat("       END                   AS Days, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Order_Code)  AS Order_Code, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(mm.Chart_No)    AS Chart_No, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Insu_Code)   AS Insu_Code " & vbCrLf)
                            var1.AppendFormat("FROM   OMO_Order_Record_Impl ri " & vbCrLf)
                            var1.AppendFormat("       INNER JOIN OMO_Medical_Record mm " & vbCrLf)
                            var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("              AND ri.Outpatient_Sn = mm.Outpatient_Sn ) " & vbCrLf)
                            var1.AppendFormat("WHERE  ri.Order_Code IN ( {0} ) " & vbCrLf, _orderCodeSet)
                            var1.AppendFormat("       AND ( ri.Execute_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderDate.ToShortDateString)
                            var1.AppendFormat("       AND ri.Cancel = 'N' ")
                            var1.AppendFormat("       AND ri.Is_Force <> 'Y' " & vbCrLf)

                            CommandStr = var1
                        Case "S"
                            'Dim var1 As New System.Text.StringBuilder
                            'var1.AppendFormat("SELECT ISNULL(SUM(Tqty), 0) AS Tqty_Before " & vbCrLf)
                            'var1.AppendFormat("FROM   OHD_Order_Record ri " & vbCrLf)
                            'var1.AppendFormat("       INNER JOIN OHD_Medical_Record mm " & vbCrLf)
                            'var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            'var1.AppendFormat("              AND ri.MEdical_Sn = mm.Medical_Sn ) " & vbCrLf)
                            'var1.AppendFormat("WHERE  ri.Insu_Code = '{0}' " & vbCrLf, _valueY)
                            'var1.AppendFormat("       AND ( ri.Opd_Charge_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderDate.ToShortDateString)
                            'var1.AppendFormat("       AND ri.Cancel = 'N' " & vbCrLf)

                            '_chartNo = "53598500"
                            '_valueY = "00156A"
                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL(ri.Tqty, 0)    AS Tqty, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Tqty_Unit)   AS Tqty_Unit, " & vbCrLf)
                            var1.AppendFormat("       ISNULL(ri.Dosage, 0)  AS Dosage, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Dosage_Unit) AS Dosage_Unit, " & vbCrLf)
                            var1.AppendFormat("       CASE " & vbCrLf)
                            var1.AppendFormat("         WHEN ri.Days = 0 THEN 1 " & vbCrLf)
                            var1.AppendFormat("         ELSE ISNULL(ri.Days, 1) " & vbCrLf)
                            var1.AppendFormat("       END                   AS Days, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Order_Code)  AS Order_Code, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(mm.Chart_No)    AS Chart_No, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Insu_Code)   AS Insu_Code " & vbCrLf)
                            var1.AppendFormat("FROM   OHD_Order_Record ri " & vbCrLf)
                            var1.AppendFormat("       INNER JOIN OHD_Medical_Record mm " & vbCrLf)
                            var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("              AND ri.MEdical_Sn = mm.Medical_Sn ) " & vbCrLf)
                            var1.AppendFormat("WHERE  ri.Insu_Code = '{0}' " & vbCrLf, _valueY)
                            var1.AppendFormat("       AND ( ri.Opd_Charge_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderDate.ToShortDateString)
                            var1.AppendFormat("       AND ri.Cancel = 'N' " & vbCrLf)

                            CommandStr = var1
                        Case Else
                            rtnData = 0
                            CreateTXTLog("C20_ChkOrderTimesByDoctorPeriod", False)
                            Return True
                    End Select

                    Dim _dtResult As DataTable = dynamicQueryNotPub(CommandStr.ToString).Tables(0)
                    Dim _dtResultE = _dtResult.AsEnumerable

                    _TqtyBefore = _dtResultE.Sum(Function(r) Me.Tqty_UnitTransform(r("Order_Code").ToString, r("Tqty_Unit").ToString, (CType(r("Tqty"), Decimal) / CType(r("Days"), Decimal)), _transferunit))

                    rtnData = _TqtyNow + _TqtyBefore
                    CreateTXTLog("C20_ChkOrderTimesByDoctorPeriod", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = 0
            CreateTXTLog("C20_ChkOrderTimesByDoctorPeriod", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = -1
            CreateTXTLog("C20_ChkOrderTimesByDoctorPeriod", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.32 C21 距目前X天中執行醫令健保碼Y的數量檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function C21_ChkOrderTimesByPeriod() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Dim _TqtyNow As Decimal = 0
        Dim _TqtyBefore As Decimal = 0

        Try
            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule", "Order_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Insu_Code")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Doctor_Code")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX") '運算項目參數 X 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueY") '運算項目參數 Y 的值
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location") '檢核發生的site, C/S

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _doctorCode As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Doctor_Code").ToString.TrimEnd
                    Dim _orderDate As Date = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date"))
                    Dim _medicalSn As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.TrimEnd

                    Dim _valueX As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX").ToString.Trim
                    Dim _valueY As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueY").ToString.Trim
                    Dim _location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim _transferunit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    'Dim _orderCodes = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.TrimEnd = _valueY AndAlso r("Order_Code").ToString.Trim <> String.Empty).Select(Function(r) r("Order_Code").ToString.TrimEnd).Distinct.ToArray
                    'Dim _insuCodes = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.Trim <> String.Empty).Select(Function(r) r("Insu_Code").ToString.TrimEnd).Distinct

                    'Clear command string.
                    clearCommandString()

                    _TqtyNow = _dtOrderRecordE.Where(Function(r) r("Insu_Code").ToString.TrimEnd = _valueY).Sum(Function(r) Me.Tqty_UnitTransform(r("Order_Code").ToString.TrimEnd, r("Tqty_Unit").ToString.TrimEnd, (CDec(IIf(IsDBNull(r("Tqty")), 0.0, r("Tqty"))) / CDec(r("Days"))), _transferunit))

                    Select Case _location
                        Case "C"
                            'Dim _orderCodeSet As String = String.Empty
                            'If _orderCodes.Count = 0 Then
                            '    _orderCodeSet = "NULL"
                            'Else
                            '    _orderCodeSet = "'" & String.Join("','", _orderCodes) & "'"
                            'End If

                            'Dim var1 As New System.Text.StringBuilder
                            'var1.AppendFormat("SELECT ISNULL(ri.Tqty, 0)    AS Tqty, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(ri.Tqty_Unit)   AS Tqty_Unit, " & vbCrLf)
                            'var1.AppendFormat("       ISNULL(ri.Dosage, 0)  AS Dosage, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(ri.Dosage_Unit) AS Dosage_Unit, " & vbCrLf)
                            'var1.AppendFormat("       CASE " & vbCrLf)
                            'var1.AppendFormat("         WHEN ri.Days = 0 THEN 1 " & vbCrLf)
                            'var1.AppendFormat("         ELSE ISNULL(ri.Days, 1) " & vbCrLf)
                            'var1.AppendFormat("       END                   AS Days, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(ri.Order_Code)  AS Order_Code, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(mm.Chart_No)    AS Chart_No, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(ri.Insu_Code)   AS Insu_Code " & vbCrLf)
                            'var1.AppendFormat("FROM   OMO_Order_Record_Impl ri " & vbCrLf)
                            'var1.AppendFormat("       INNER JOIN OMO_Medical_Record mm " & vbCrLf)
                            'var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            'var1.AppendFormat("              AND ri.Outpatient_Sn = mm.Outpatient_Sn ) " & vbCrLf)
                            'var1.AppendFormat("WHERE  ri.Order_Code IN ( {0} ) " & vbCrLf, _orderCodeSet)
                            'var1.AppendFormat("       AND ( ri.Execute_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderDate.ToShortDateString)
                            'var1.AppendFormat("       AND ri.Cancel = 'N' ")
                            'var1.AppendFormat("       AND ri.Is_Force <> 'Y' " & vbCrLf)

                            '20130909 modified by Ken.
                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL(ri.Tqty, 0)    AS Tqty, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Tqty_Unit)   AS Tqty_Unit, " & vbCrLf)
                            var1.AppendFormat("       ISNULL(ri.Dosage, 0)  AS Dosage, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Dosage_Unit) AS Dosage_Unit, " & vbCrLf)
                            var1.AppendFormat("       CASE " & vbCrLf)
                            var1.AppendFormat("         WHEN ri.Days = 0 THEN 1 " & vbCrLf)
                            var1.AppendFormat("         ELSE ISNULL(ri.[Days], 1) " & vbCrLf)
                            var1.AppendFormat("       END                   AS Days, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Order_Code)  AS Order_Code, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(mm.Chart_No)    AS Chart_No, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Insu_Code)   AS Insu_Code " & vbCrLf)
                            var1.AppendFormat("FROM   OMO_Medical_Record mm " & vbCrLf)
                            var1.AppendFormat("       INNER JOIN OMO_Order_Record_Impl ri " & vbCrLf)
                            var1.AppendFormat("         ON ( ri.Outpatient_Sn = mm.Outpatient_Sn " & vbCrLf)
                            var1.AppendFormat("              AND ri.Outpatient_Sn <> '{0}' " & vbCrLf, _medicalSn)
                            var1.AppendFormat("              --AND ( ri.Execute_Date BETWEEN DATEADD(dd, 0 - {1}, '{0}') AND '{0}' ) " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"), _valueX)
                            var1.AppendFormat("              AND ( ri.Charge_Date BETWEEN DATEADD(dd, 0 - {1}, '{0}') AND '{0}' ) " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"), _valueX)
                            var1.AppendFormat("              AND ri.Cancel = 'N' " & vbCrLf)
                            var1.AppendFormat("              AND ri.Is_Force <> 'Y' ) " & vbCrLf)
                            'var1.AppendFormat("WHERE  mm.Chart_No = '{0}' --'{Chart_No}'  " & vbCrLf, _chartNo)
                            '修正tsql語法,因字串格式不正確導致exception  2014-5-15   黃富昌
                            var1.AppendFormat("WHERE  mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("       AND ri.Order_Code IN --convert insu_code to order_code " & vbCrLf)
                            var1.AppendFormat("           (SELECT Order_Code --, Insu_Code, Effect_Date, End_Date  " & vbCrLf)
                            var1.AppendFormat("            FROM   PUB_Order_Price pp " & vbCrLf)
                            var1.AppendFormat("            WHERE  pp.Insu_Code = '{0}' " & vbCrLf, _valueY)
                            var1.AppendFormat("                   AND pp.Effect_Date <= '{0}' " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"))
                            var1.AppendFormat("                   AND pp.End_Date >= '{0}' " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"))
                            var1.AppendFormat("            UNION " & vbCrLf)
                            var1.AppendFormat("            SELECT Order_Code --, Insu_Code, Effect_Date, End_Date   " & vbCrLf)
                            var1.AppendFormat("            FROM   PUB_Insu_Code nn " & vbCrLf)
                            var1.AppendFormat("            WHERE  nn.Insu_Code = '{0}' " & vbCrLf, _valueY)
                            var1.AppendFormat("                   AND nn.Effect_Date <= '{0}' " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"))
                            var1.AppendFormat("                   AND nn.End_Date >= '{0}') " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"))

                            CommandStr = var1
                        Case "S"

                            'Dim var1 As New System.Text.StringBuilder
                            'var1.AppendFormat("SELECT ISNULL(ri.Tqty, 0)    AS Tqty, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(ri.Tqty_Unit)   AS Tqty_Unit, " & vbCrLf)
                            'var1.AppendFormat("       ISNULL(ri.Dosage, 0)  AS Dosage, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(ri.Dosage_Unit) AS Dosage_Unit, " & vbCrLf)
                            'var1.AppendFormat("       CASE " & vbCrLf)
                            'var1.AppendFormat("         WHEN ri.Days = 0 THEN 1 " & vbCrLf)
                            'var1.AppendFormat("         ELSE ISNULL(ri.Days, 1) " & vbCrLf)
                            'var1.AppendFormat("       END                   AS Days, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(ri.Order_Code)  AS Order_Code, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(mm.Chart_No)    AS Chart_No, " & vbCrLf)
                            'var1.AppendFormat("       RTRIM(ri.Insu_Code)   AS Insu_Code " & vbCrLf)
                            'var1.AppendFormat("FROM   OHD_Order_Record ri " & vbCrLf)
                            'var1.AppendFormat("       INNER JOIN OHD_Medical_Record mm " & vbCrLf)
                            'var1.AppendFormat("         ON ( mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            'var1.AppendFormat("              AND ri.MEdical_Sn = mm.Medical_Sn ) " & vbCrLf)
                            'var1.AppendFormat("WHERE  ri.Insu_Code = '{0}' " & vbCrLf, _valueY)
                            'var1.AppendFormat("       AND ( ri.Opd_Charge_Date BETWEEN DATEADD(dd, 0 - {0}, '{1}') AND '{1}' ) " & vbCrLf, _valueX, _orderDate.ToShortDateString)
                            'var1.AppendFormat("       AND ri.Cancel = 'N' " & vbCrLf)

                            '20130909 modified by Ken.
                            Dim var1 As New System.Text.StringBuilder
                            var1.AppendFormat("SELECT ISNULL(ri.Tqty, 0)    AS Tqty, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Tqty_Unit)   AS Tqty_Unit, " & vbCrLf)
                            var1.AppendFormat("       ISNULL(ri.Dosage, 0)  AS Dosage, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Dosage_Unit) AS Dosage_Unit, " & vbCrLf)
                            var1.AppendFormat("       CASE " & vbCrLf)
                            var1.AppendFormat("         WHEN ri.Days = 0 THEN 1 " & vbCrLf)
                            var1.AppendFormat("         ELSE ISNULL(ri.Days, 1) " & vbCrLf)
                            var1.AppendFormat("       END                   AS Days, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Order_Code)  AS Order_Code, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(mm.Chart_No)    AS Chart_No, " & vbCrLf)
                            var1.AppendFormat("       RTRIM(ri.Insu_Code)   AS Insu_Code " & vbCrLf)
                            var1.AppendFormat("FROM   OHD_Medical_Record mm " & vbCrLf)
                            var1.AppendFormat("       INNER JOIN OHD_Order_Record ri " & vbCrLf)
                            var1.AppendFormat("         ON mm.Nhi_Ym = ri.Nhi_Ym " & vbCrLf)
                            var1.AppendFormat("            AND ri.Medical_Sn = mm.Medical_Sn " & vbCrLf)
                            var1.AppendFormat("            AND ( ri.Opd_Charge_Date BETWEEN DATEADD(dd, 0 - {1}, '{0}') AND '{0}' ) " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"), _valueX)
                            var1.AppendFormat("            AND ri.Cancel = 'N' " & vbCrLf)
                            var1.AppendFormat("WHERE  mm.Chart_No = '{0}' " & vbCrLf, _chartNo)
                            var1.AppendFormat("       AND ri.Insu_Code IN --convert insu_code to order_code " & vbCrLf)
                            var1.AppendFormat("           (SELECT Order_Code --, Insu_Code, Effect_Date, End_Date  " & vbCrLf)
                            var1.AppendFormat("            FROM   PUB_Order_Price pp " & vbCrLf)
                            var1.AppendFormat("            WHERE  pp.Insu_Code = '{0}' " & vbCrLf, _valueY)
                            var1.AppendFormat("                   AND pp.Effect_Date <= '{0}' " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"))
                            var1.AppendFormat("                   AND pp.End_Date >= '{0}' " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"))
                            var1.AppendFormat("            UNION " & vbCrLf)
                            var1.AppendFormat("            SELECT Order_Code --, Insu_Code, Effect_Date, End_Date   " & vbCrLf)
                            var1.AppendFormat("            FROM   PUB_Insu_Code nn " & vbCrLf)
                            var1.AppendFormat("            WHERE  nn.Insu_Code = '{0}' " & vbCrLf, _valueY)
                            var1.AppendFormat("                   AND nn.Effect_Date <= '{0}' " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"))
                            var1.AppendFormat("                   AND nn.End_Date >= '{0}') " & vbCrLf, _orderDate.ToString("yyyy/MM/dd"))

                            CommandStr = var1
                        Case Else
                            rtnData = 0
                            CreateTXTLog("C21_ChkOrderTimesByPeriod", False)
                            Return True
                    End Select

                    Dim _dtResult As DataTable = dynamicQueryNotPub(CommandStr.ToString).Tables(0)
                    Dim _dtResultE = _dtResult.AsEnumerable

                    _TqtyBefore = _dtResultE.Sum(Function(r) Me.Tqty_UnitTransform(r("Order_Code").ToString, r("Tqty_Unit").ToString, (CType(r("Tqty"), Decimal) / CType(r("Days"), Decimal)), _transferunit))

                    rtnData = _TqtyNow + _TqtyBefore
                    CreateTXTLog("C21_ChkOrderTimesByPeriod", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = 0
            CreateTXTLog("C21_ChkOrderTimesByPeriod", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = -1
            CreateTXTLog("C21_ChkOrderTimesByPeriod", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.70 非醫令類每X日執行數量檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function C22_ChkNonOrderTimesByDay() As Boolean
        Try
            cleanReturnInfo()
            clearCommandString()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}

            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim Outpatient_sn As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As Decimal = CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"))
                    Dim ValueXInt32 As Int32 = ValueX
                    ValueX = IIf(ValueX = 0, 1, ValueX)
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    'Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    Dim _now As Date = Now.Date

                    Dim Tqty_Now As Decimal = 1.0
                    Dim Tqty_Before As Decimal = 0.0

                    '===== Get Field_Code =====
                    clearCommandString()
                    CommandStr.AppendFormat("SELECT RTRIM(Field_Code) AS Field_Code " & vbCrLf)
                    CommandStr.AppendFormat("FROM   Pub_Item " & vbCrLf)
                    CommandStr.AppendFormat("WHERE  Item_Code = '{0}' " & vbCrLf, TriggerItemCode)
                    CommandStr.AppendFormat("       AND Class_Code = 'A1' " & vbCrLf)

                    Dim fieldCodeDs As DataSet = dynamicQuery(CommandStr.ToString)
                    Dim fieldCodeDt As DataTable = fieldCodeDs.Tables(0)
                    If fieldCodeDt.Rows.Count = 0 Then
                        'If there is no data, then return false.
                        rtnData = False
                        CreateTXTLog("C22_ChkNonOrderTimesByDay", False)
                        Return False
                    End If

                    Dim _fieldCode As String = fieldCodeDt.Rows(0)("Field_Code").ToString.TrimEnd
                    '===== END Get Field_Code =====

                    If Location = "C" OrElse Location = "P" Then

                        clearCommandString()
                        CommandStr.AppendFormat("SELECT COUNT(*) AS Cnt " & vbCrLf)
                        CommandStr.AppendFormat("FROM   OMO_Medical_Record " & vbCrLf)
                        CommandStr.AppendFormat("WHERE  Chart_No = '{0}' " & vbCrLf, Chart_No)
                        CommandStr.AppendFormat("       AND Outpatient_Sn <> '{0}' " & vbCrLf, Outpatient_sn)
                        CommandStr.AppendFormat("       AND Opd_Visit_Date BETWEEN DATEADD (dd, {1}, '{0}') AND '{0}' " & vbCrLf, _now.ToString("yyyy/MM/dd"), (1 - ValueXInt32))
                        CommandStr.AppendFormat("       AND Cancel = 'N' " & vbCrLf)
                        CommandStr.AppendFormat("       AND Patient_Status_Id <>'8'" & vbCrLf)
                        CommandStr.AppendFormat("       AND Main_Identity_Id = '2' " & vbCrLf)
                        CommandStr.AppendFormat("       AND {0} = '{1}' " & vbCrLf, _fieldCode, TriggerValueData)

                        Dim _tqtyBeforeDs As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                        Tqty_Before = _tqtyBeforeDs.Tables(0).Rows(0)("Cnt")

                        rtnData = Tqty_Now + Tqty_Before
                        rtnDataUnit = ""
                        CreateTXTLog("C22_ChkNonOrderTimesByDay", True)
                        Return True

                    ElseIf Location = "S" Then

                        clearCommandString()
                        CommandStr.AppendFormat("SELECT COUNT(*) AS Cnt " & vbCrLf)
                        CommandStr.AppendFormat("FROM   OHD_Medical_Record " & vbCrLf)
                        CommandStr.AppendFormat("WHERE  Chart_No = '{0}' " & vbCrLf, Chart_No)
                        CommandStr.AppendFormat("       AND Medical_Sn <> '{0}' " & vbCrLf, Outpatient_sn)
                        CommandStr.AppendFormat("       AND Opd_Visit_Date BETWEEN DATEADD (dd, {1}, '{0}') AND '{0}' " & vbCrLf, _now.ToString("yyyy/MM/dd"), (1 - ValueXInt32))
                        CommandStr.AppendFormat("       AND Cancel = 'N' " & vbCrLf)
                        CommandStr.AppendFormat("       AND Patient_Status_Id <>'8'" & vbCrLf)
                        CommandStr.AppendFormat("       AND Main_Identity_Id = '2' " & vbCrLf)
                        CommandStr.AppendFormat("       AND {0} = '{1}' " & vbCrLf, _fieldCode, TriggerValueData)

                        Dim _tqtyBeforeDs As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                        Tqty_Before = _tqtyBeforeDs.Tables(0).Rows(0)("Cnt")

                        rtnData = Tqty_Now + Tqty_Before
                        rtnDataUnit = ""
                        CreateTXTLog("C22_ChkNonOrderTimesByDay", True)
                        Return True

                    End If 'END IF Location

                End If 'END checkAllContainColumnIn(CheckTable)
            End If 'END isContainsDataTable(DataTableName)

            rtnData = False
            CreateTXTLog("C22_ChkNonOrderTimesByDay", False)
            Return False

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("C22_ChkNonOrderTimesByDay", False)
            Return False
        End Try
    End Function

#End Region

#Region "F08"

    Private Class OrderStructureForF8
        'Public OrderCode As String
        Public BodySiteCode As String
        Public Tqty As Decimal
    End Class

    ''' <summary>
    ''' 1.69 牙科每X日執行數量/次數檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function F08_ChkDentalTimesByDay() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Medical_Sn")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Effect_Date")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Tqty")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Days")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueX")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "Location")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As Decimal = CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueX"))
                    Dim Location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim
                    Dim Operator_Code As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueData As Decimal = CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData"))
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim Outpatient_sn As String = ""

                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Outpatient_sn = pubreapi.Tables("Medical_Record").Rows(0).Item("Medical_Sn").ToString.Trim
                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    ElseIf TriggerItemCode = "A00031" Then
                        OrderInsuCode = "Pharmacy_12_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim Order_Effect_Date As String = OrderRecordRow.Item("Order_Effect_Date").ToString.Trim
                    Dim Order_Code As String = OrderRecordRow.Item("Order_Code").ToString.Trim
                    Dim Insu_Code As String = OrderRecordRow.Item("Insu_Code").ToString.Trim
                    Dim Dosage As String = OrderRecordRow.Item("Dosage").ToString.Trim
                    Dim Dosage_Unit As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Dosage_Unit") Then
                        Dosage_Unit = OrderRecordRow.Item("Dosage_Unit").ToString.TrimEnd
                    End If
                    Dim Frequency_Code As String = String.Empty
                    If OrderRecordRow.Table.Columns.Contains("Frequency_Code") Then
                        Frequency_Code = OrderRecordRow.Item("Frequency_Code").ToString.Trim
                    End If
                    Dim Cure_Type_Id As String = ""
                    If pubreapi.Tables("Order_Record").Columns.Contains("Cure_Type_Id") Then
                        Cure_Type_Id = OrderRecordRow.Item("Cure_Type_Id").ToString.Trim
                    End If

                    Dim Days As Decimal = CDec(OrderRecordRow.Item("Days"))
                    Dim Tqty As Decimal = CDec(OrderRecordRow.Item("Tqty"))
                    Dim Tqty_Unit As String = OrderRecordRow.Item("Tqty_Unit").ToString.Trim
                    Dim Tqty_Now As Decimal = 0.0
                    Dim Tqty_Before As Decimal = 0.0

                    If ValueUnit.Length = 0 Then
                        ValueUnit = Tqty_Unit
                    End If

                    Dim _records As EnumerableRowCollection(Of DataRow) = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.Trim = Order_Code)
                    Dim _bodySiteCodes As List(Of String) = _records.Where(Function(r) r("Body_Site_Code").ToString.Trim <> String.Empty).Select(Function(r) r("Body_Site_Code").ToString.Trim).Distinct.ToList
                    Dim _bodySiteCodeList As New List(Of OrderStructureForF8)

                    For Each _bodySiteCodeTmp As String In _bodySiteCodes
                        Dim _bodySiteCode As String = _bodySiteCodeTmp

                        Dim _newNode As New OrderStructureForF8
                        _newNode.BodySiteCode = _bodySiteCode
                        '先計算Tqty_Now的值
                        _newNode.Tqty = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.Trim = Order_Code AndAlso (r("Body_Site_Code").ToString.Trim = _bodySiteCode OrElse r("Body_Site_Code").ToString.Trim = String.Empty) AndAlso IsNumeric(r("Tqty"))).Sum(Function(r) CDec(r("Tqty")))

                        _bodySiteCodeList.Add(_newNode)
                    Next

                    Dim _totalTqty As Decimal = 0

                    '計算Tqty_Before
                    '==================================================================
                    For Each _bodySiteCodeTmp As String In _bodySiteCodes
                        Dim _bodySiteCode As String = _bodySiteCodeTmp

                        Dim _orderBodySiteCode = _bodySiteCodeList.Where(Function(r) r.BodySiteCode = _bodySiteCode).FirstOrDefault
                        If _orderBodySiteCode Is Nothing Then Continue For

                        If Location = "C" OrElse Location = "P" Then

                            If TriggerItemCode = "A00004" Then

                                clearCommandString()
                                CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(Dosage, 0) AS [Dosage], ISNULL(RTRIM(Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(Frequency_Code), '') AS [Frequency_Code]")
                                CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                                CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                                CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                                CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                                CommandStr.Append(" 			imp.Order_Code = '").Append(TriggerValueData).Append("' and ")
                                CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                                CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                                CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                                CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")
                                CommandStr.Append(" 		         and ( isnull(imp.Body_Site_Code,'') = '' or imp.Body_Site_Code = '" & _bodySiteCode & "' ) ")

                                Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                If DataSetUtil.IsContainsData(tempDS) Then
                                    For Each row As DataRow In tempDS.Tables(0).Rows

                                        Tqty_Before += CDec(row.Item("Tqty"))
                                    Next
                                End If

                                _orderBodySiteCode.Tqty += Tqty_Before

                            ElseIf TriggerItemCode = "A00006" Then

                                clearCommandString()
                                'CommandStr.Append(" Select isnull(Tqty,0) as Tqty_Before, imp.Tqty_Unit ")
                                CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(Dosage, 0) AS [Dosage], ISNULL(RTRIM(Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(Frequency_Code), '') AS [Frequency_Code]")
                                CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                                CommandStr.Append("     inner join OMO_Medical_Record med ")
                                CommandStr.Append("         on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                                CommandStr.Append("             imp.Outpatient_Sn = med.Outpatient_Sn and ")
                                CommandStr.Append("             imp.Order_Code in ")
                                CommandStr.Append("                 (Select op.Order_Code ")
                                CommandStr.Append("                  From PUB_Order_Price op ")
                                CommandStr.Append("                  Where  op.Insu_Code = '").Append(TriggerValueData).Append("' and ('").Append(Order_Effect_Date).Append("' between op.Effect_Date ")
                                CommandStr.Append("                     and op.End_Date) ")
                                CommandStr.Append("                  Union ")
                                CommandStr.Append("                  Select ic.Order_Code ")
                                CommandStr.Append("                  From PUB_Insu_Code ic ")
                                CommandStr.Append("                  Where ic.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                                CommandStr.Append("                     ('").Append(Order_Effect_Date).Append("' between ic.Effect_Date ")
                                CommandStr.Append("                     and ic.End_Date) ")
                                CommandStr.Append("                 ) and ")
                                CommandStr.Append("                     (imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                                CommandStr.Append("                         and '").Append(Order_Effect_Date).Append("') and ")
                                CommandStr.Append("                         imp.[Cancel] = 'N' ")
                                CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")
                                CommandStr.Append(" 		         and ( isnull(imp.Body_Site_Code,'') = '' or imp.Body_Site_Code = '" & _bodySiteCode & "' ) ")

                                Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                If DataSetUtil.IsContainsData(tempDS) Then
                                    For Each row As DataRow In tempDS.Tables(0).Rows
                                        Tqty_Before += CDec(row.Item("Tqty"))
                                    Next
                                End If

                                _orderBodySiteCode.Tqty += Tqty_Before

                            ElseIf TriggerItemCode = "A00031" Then

                                clearCommandString()
                                CommandStr.Append(" Select isnull(imp.Tqty,0) as Tqty, imp.Tqty_Unit, ISNULL(Days, 0) AS [Days], ISNULL(imp.Dosage, 0) AS [Dosage], ISNULL(RTRIM(imp.Dosage_Unit), '') AS [Dosage_Unit], ISNULL(RTRIM(imp.Frequency_Code), '') AS [Frequency_Code]")
                                CommandStr.Append(" From OMO_Order_Record_Impl imp ")
                                CommandStr.Append(" inner join OPH_Pharmacy_Base as OPB on OPB.order_code=imp.Order_Code and  OPB.DC='N' ")
                                CommandStr.Append(" 	inner join OMO_Medical_Record med ")
                                CommandStr.Append(" 		on (med.Chart_No = '").Append(Chart_No).Append("' and ")
                                CommandStr.Append(" 			imp.Outpatient_Sn = med.Outpatient_Sn and ")
                                CommandStr.Append(" 			OPB.pharmacy_12_code = '").Append(TriggerValueData).Append("' and ")
                                CommandStr.Append(" 			(imp.Charge_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                                CommandStr.Append(" 			and '").Append(Order_Effect_Date).Append("') and ")
                                CommandStr.Append(" 			imp.[Cancel] = 'N' ")
                                CommandStr.Append(" 		)  where med.Outpatient_Sn  <> '" & Outpatient_sn & "'")
                                CommandStr.Append(" 		         and ( isnull(imp.Body_Site_Code,'') = '' or imp.Body_Site_Code = '" & _bodySiteCode & "' ) ")

                                Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                If DataSetUtil.IsContainsData(tempDS) Then
                                    For Each row As DataRow In tempDS.Tables(0).Rows

                                        Tqty_Before += CDec(row.Item("Tqty"))

                                    Next
                                End If

                                _orderBodySiteCode.Tqty += Tqty_Before

                            Else
                                'do nothing
                            End If
                        Else
                            If TriggerItemCode = "A00004" Then

                                clearCommandString()
                                CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, ord.Tqty_Unit ")
                                CommandStr.Append(" From OHD_Order_Record ord ")
                                CommandStr.Append("     inner join OHD_Medical_Record med ")
                                CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                                CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                                CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                                CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                                CommandStr.Append("             ord.Order_Code = '").Append(TriggerValueData).Append("' and ")
                                CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                                CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                                CommandStr.Append("             ord.[Cancel] = 'N' ")
                                CommandStr.Append(" 		) ")
                                CommandStr.Append("	where ( isnull(ord.Body_Site_Code,'') = '' or ord.Body_Site_Code = '" & _bodySiteCode & "' ) ")

                                Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                If DataSetUtil.IsContainsData(tempDS) Then
                                    For Each row As DataRow In tempDS.Tables(0).Rows

                                        Tqty_Before += CDec(row.Item("Tqty"))

                                    Next
                                End If

                                _orderBodySiteCode.Tqty += Tqty_Before

                            ElseIf TriggerItemCode = "A00006" Then
                                clearCommandString()
                                CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, Tqty_Unit ")
                                CommandStr.Append(" From OHD_Order_Record ord ")
                                CommandStr.Append("     inner join OHD_Medical_Record med ")
                                CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                                CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                                CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                                CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                                CommandStr.Append("             ord.Insu_Code = '").Append(TriggerValueData).Append("' and ")
                                CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                                CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                                CommandStr.Append("             ord.[Cancel] = 'N' ")
                                CommandStr.Append("	where ( isnull(ord.Body_Site_Code,'') = '' or ord.Body_Site_Code = '" & _bodySiteCode & "' ) ")

                                Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                If DataSetUtil.IsContainsData(tempDS) Then
                                    For Each row As DataRow In tempDS.Tables(0).Rows
                                        Tqty_Before += CDec(row.Item("Tqty"))
                                    Next
                                End If

                                _orderBodySiteCode.Tqty += Tqty_Before

                            ElseIf TriggerItemCode = "A00031" Then

                                clearCommandString()
                                CommandStr.Append(" Select isnull(ord.Tqty,0) as Tqty, ord.Tqty_Unit ")
                                CommandStr.Append(" From OHD_Order_Record ord ")
                                CommandStr.Append("     inner join OPH_Pharmacy_Base as OPB on OPB.order_code=Ord.Order_code and OPB.DC='N' ")
                                CommandStr.Append("     inner join OHD_Medical_Record med ")
                                CommandStr.Append("         on (ord.Nhi_Ym = med.Nhi_Ym and ")
                                CommandStr.Append("             ord.Nhi_Type_Id = med.Nhi_Type_Id and ")
                                CommandStr.Append("             ord.Medical_Sn = med.Medical_Sn and ")
                                CommandStr.Append("             med.Chart_No = '").Append(Chart_No).Append("' and ")
                                CommandStr.Append("             OPB.Pharmacy_12_code = '").Append(TriggerValueData).Append("' and ")
                                CommandStr.Append("             (med.Opd_Visit_End_Date between dateadd(dd,1-").Append(ValueX).Append(", '").Append(Order_Effect_Date).Append("') ")
                                CommandStr.Append("             and '").Append(Order_Effect_Date).Append("') and ")
                                CommandStr.Append("             ord.[Cancel] = 'N' ")
                                CommandStr.Append(" 		) ")
                                CommandStr.Append("	where ( isnull(ord.Body_Site_Code,'') = '' or ord.Body_Site_Code = '" & _bodySiteCode & "' ) ")

                                Dim tempDS As DataSet = dynamicQueryNotPub(CommandStr.ToString)

                                If DataSetUtil.IsContainsData(tempDS) Then
                                    For Each row As DataRow In tempDS.Tables(0).Rows
                                        Tqty_Before += CDec(row.Item("Tqty"))
                                    Next
                                End If

                                _orderBodySiteCode.Tqty += Tqty_Before

                            Else
                                'do nothing
                            End If
                        End If
                    Next

                    'End 計算 Tqty_Before
                    '==================================================================

                    '判斷是否符合邏輯

                    Dim _result As Boolean = False

                    Select Case Operator_Code
                        Case "01" '>

                            _result = _bodySiteCodeList.All(Function(r) r.Tqty > ValueData)

                        Case "02" '=

                            _result = _bodySiteCodeList.All(Function(r) r.Tqty = ValueData)

                        Case "03" '<

                            _result = _bodySiteCodeList.All(Function(r) r.Tqty < ValueData)

                        Case "04" '>=

                            _result = _bodySiteCodeList.All(Function(r) r.Tqty >= ValueData)

                        Case "05" '<=

                            _result = _bodySiteCodeList.All(Function(r) r.Tqty <= ValueData)

                        Case "06" '!=

                            _result = _bodySiteCodeList.All(Function(r) r.Tqty <> ValueData)

                        Case Else

                    End Select

                    rtnData = _result

                    '設定rtnDS
                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As New DataTable
                    _rtnDt.TableName = "rtnTable"
                    _rtnDt.Columns.Add("Order_Code", GetType(String))
                    _rtnDt.Columns.Add("Body_Site_Code", GetType(String))
                    _rtnDt.Columns.Add("Order_Cnt", GetType(Decimal))
                    For Each _drResult In _bodySiteCodeList
                        Dim _newDr As DataRow = _rtnDt.NewRow
                        _newDr("Order_Code") = Order_Code
                        _newDr("Body_Site_Code") = _drResult.BodySiteCode
                        _newDr("Order_Cnt") = _drResult.Tqty
                        _rtnDt.Rows.Add(_newDr)
                    Next
                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                    CreateTXTLog("F08_ChkDentalTimesByDay", True)
                    Return True
                End If

            End If

            rtnData = False
            CreateTXTLog("F08_ChkDentalTimesByDay", False)
            Return False

        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("F08_ChkDentalTimesByDay", False)
            Return False
        End Try
    End Function

#End Region

#Region "取得當次醫令集合"

    ''' <summary>
    ''' 取得當次醫令集合
    ''' </summary>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Sub GetCurrentOrderset()
        Try
            log.dbDebugMsg("PUBRuleEngineAPI-開始進入 GetCurrentOrderset")
            '處理前的資料
            log.dbDebugMsg("PUBRuleEngineAPI-OperationDS XML：" & vbNewLine & pubreapi.GetXml)

            Dim _dtMedicalRecord = pubreapi.Tables("Medical_Record")
            Dim _dtOrderRecord = pubreapi.Tables("Order_Record")
            Dim _outpatientSn As String = _dtMedicalRecord.Rows(0)("Medical_Sn").ToString.Trim
            Dim _chartNo As String = _dtMedicalRecord.Rows(0)("Chart_No").ToString.Trim
            Dim _sourceType As String = _dtMedicalRecord.Rows(0)("Source_Type").ToString.Trim.ToUpper
            Dim _location As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("Location").ToString.Trim.ToUpper

            Dim _ordersOfOutpatientSn As DataTable = Me.QueryAllOrdersOfOutpatientSn(_outpatientSn, _sourceType, _location)
            If _ordersOfOutpatientSn Is Nothing Then Exit Sub

            Dim _dtOrderRecordD = _dtOrderRecord.AsEnumerable.ToDictionary(Function(r) CInt(r("Order_Record_No")), Function(r) r)

            For Each _order As DataRow In _ordersOfOutpatientSn.Rows
                If Not _dtOrderRecordD.ContainsKey(CInt(_order("Order_Record_No"))) Then
                    _dtOrderRecord.ImportRow(_order)
                End If
            Next
            For Each _dr As DataRow In _dtOrderRecord.Rows
                If _dr("Order_Status").ToString.Trim.ToUpper = "D" Then
                    _dr.Delete()
                End If
            Next
            _dtOrderRecord.AcceptChanges()

            '處理後的資料
            log.dbDebugMsg("PUBRuleEngineAPI-OperationDS XML：" & vbNewLine & pubreapi.GetXml)
        Catch ex As Exception
            log.dbErrorMsg("PUBRuleEngineAPI-發生錯誤：" & ex.ToString, ex)
            Throw ex
        Finally
            log.dbDebugMsg("PUBRuleEngineAPI-結束進入 GetCurrentOrderset")
        End Try
    End Sub

#End Region

#Region "成大碼/健保碼轉換"

    ''' <summary>
    ''' 1.60 將成大碼的轉換為健保碼資料集
    ''' </summary>
    ''' <param name="OrderCode">成大碼集合</param>
    ''' <param name="OrderDate">醫令日期</param>
    ''' <param name="DistinctOrderCode">是否Distinct</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Ext_OrderCode_To_InsuCodeDs(ByVal OrderCode As String, _
                                                ByVal OrderDate As Date, _
                                                ByVal DistinctOrderCode As Boolean) As DataSet
        Dim _ds As DataSet = Nothing

        Dim _orderCode As String = OrderCode.Replace(" ", "")

        Dim _orderCodes As String() = _orderCode.Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

        Dim _orderCodeSet As String = String.Empty
        If _orderCodes.Count = 0 Then
            _orderCodeSet = "NULL"
        Else
            _orderCodeSet = "'" & String.Join("','", _orderCodes) & "'"
        End If

        Dim var1 As New System.Text.StringBuilder
        var1.AppendFormat("SELECT " & vbCrLf)
        If DistinctOrderCode Then
            var1.AppendFormat("       DISTINCT " & vbCrLf)
        End If

        var1.AppendFormat("       RTRIM(PP.Insu_Code) AS Insu_Code, " & vbCrLf)
        'var1.AppendFormat("       CASE " & vbCrLf)
        'var1.AppendFormat("         WHEN DD.Insu_Code IS NULL THEN RTRIM(PP.Insu_Code) " & vbCrLf)
        'var1.AppendFormat("         ELSE RTRIM(DD.Insu_Code) " & vbCrLf)
        'var1.AppendFormat("       END                                     AS Insu_Code, " & vbCrLf)

        var1.AppendFormat("       PP.Effect_Date, " & vbCrLf)
        var1.AppendFormat("       RTRIM(PO.Order_Code)                    AS Order_Code, " & vbCrLf)
        var1.AppendFormat("       RTRIM(PO.Order_En_Name)                 AS Order_En_Name, " & vbCrLf)
        var1.AppendFormat("       RTRIM(PO.Order_Name)                    AS Order_Name, " & vbCrLf)
        var1.AppendFormat("       PP.End_Date, " & vbCrLf)
        var1.AppendFormat("       ISNULL(RTRIM(PP.Insu_Group_Code), '')   AS Insu_Group_Code, " & vbCrLf)
        var1.AppendFormat("       ISNULL(RTRIM(PO.Order_Type_Id), '')     AS Order_Type_Id, " & vbCrLf)
        var1.AppendFormat("       ISNULL(RTRIM(PO.Treatment_Type_Id), '') AS Treatment_Type_Id " & vbCrLf)
        var1.AppendFormat("FROM   PUB_Order AS PO " & vbCrLf)
        var1.AppendFormat("       LEFT OUTER JOIN dbo.PUB_Order_Price PP " & vbCrLf)
        var1.AppendFormat("         ON ( PO.Order_Code = PP.Order_Code " & vbCrLf)
        var1.AppendFormat("              AND ( '{0}' BETWEEN PP.Effect_Date AND PP.End_Date ) " & vbCrLf, OrderDate.ToShortDateString)
        var1.AppendFormat("              AND PP.Main_Identity_Id = '2' ) " & vbCrLf)
        'var1.AppendFormat("       LEFT OUTER JOIN dbo.PUB_Insu_Code AS DD " & vbCrLf)
        'var1.AppendFormat("         ON ( PP.Order_Code = DD.Order_Code " & vbCrLf)
        'var1.AppendFormat("              AND ( '{0}' BETWEEN PP.Effect_Date AND PP.End_Date ) ) " & vbCrLf, OrderDate.ToShortDateString)
        var1.AppendFormat("WHERE  PO.Order_Code IN ( {0} ) " & vbCrLf, _orderCodeSet)
        var1.AppendFormat("       AND ( '{0}' BETWEEN PO.Effect_Date AND PO.End_Date ) " & vbCrLf, OrderDate.ToShortDateString)
        var1.AppendFormat("ORDER  BY Order_Code, " & vbCrLf)
        var1.AppendFormat("          Insu_Code, " & vbCrLf)
        var1.AppendFormat("          Effect_Date " & vbCrLf)

        clearCommandString()

        CommandStr = var1

        _ds = dynamicQuery(CommandStr.ToString)

        Return _ds
    End Function

    ''' <summary>
    ''' 1.61 將健保碼轉換為成大碼資料集
    ''' </summary>
    ''' <param name="InsuCode">健保碼集合</param>
    ''' <param name="OrderDate">醫令日期</param>
    ''' <param name="DistinctInsuCode">是否Distinct</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function Ext_InsuCode_To_OrderCodeDs(ByVal InsuCode As String, _
                                                ByVal OrderDate As Date, _
                                                ByVal DistinctInsuCode As Boolean) As DataSet
        Dim _ds As DataSet = Nothing

        Dim _insuCode As String = InsuCode.Replace(" ", "")
        Dim _splittedInsuCode As String() = _insuCode.Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)
        Dim _splittedInsuCodeRange = _splittedInsuCode.Where(Function(r) IsRangeMatch(r))
        Dim _splittedInsuCodes As String() = _splittedInsuCode.Except(_splittedInsuCodeRange).ToArray
        Dim _InsuCodesSet As String = String.Empty
        If _splittedInsuCodes.Count = 0 Then
            _InsuCodesSet = "NULL"
        Else
            _InsuCodesSet = "'" & String.Join("','", _splittedInsuCodes) & "'"
        End If

        Dim var1 As New System.Text.StringBuilder
        var1.AppendFormat("SELECT  " & vbCrLf)
        If DistinctInsuCode Then
            var1.AppendFormat("       Distinct " & vbCrLf)
        End If
        var1.AppendFormat("       RTRIM(insu.Insu_Code)                   AS Insu_Code, " & vbCrLf)
        var1.AppendFormat("       po.Effect_Date, " & vbCrLf)
        var1.AppendFormat("       RTRIM(po.Order_Code)                    AS Order_Code, " & vbCrLf)
        var1.AppendFormat("       RTRIM(po.Order_En_Name)                 AS Order_En_Name, " & vbCrLf)
        var1.AppendFormat("       RTRIM(po.Order_Name)                    AS Order_Name, " & vbCrLf)
        var1.AppendFormat("       po.End_Date, " & vbCrLf)
        var1.AppendFormat("       ISNULL(RTRIM(Insu_Group_Code), '')      AS Insu_Group_Code, " & vbCrLf)
        var1.AppendFormat("       ISNULL(RTRIM(PO.Order_Type_Id), '')     AS Order_Type_Id, " & vbCrLf)
        var1.AppendFormat("       ISNULL(RTRIM(PO.Treatment_Type_Id), '') AS Treatment_Type_Id " & vbCrLf)
        var1.AppendFormat("FROM   PUB_Order po " & vbCrLf)
        var1.AppendFormat("       INNER JOIN (SELECT Order_Code, " & vbCrLf)
        var1.AppendFormat("                          Insu_Code, " & vbCrLf)
        var1.AppendFormat("                          Insu_Group_Code " & vbCrLf)
        var1.AppendFormat("                   FROM   PUB_Order_Price " & vbCrLf)
        var1.AppendFormat("                   WHERE  ( Insu_Code IN ( {0} ) " & vbCrLf, _InsuCodesSet)
        For Each _insuCodeRange In _splittedInsuCodeRange
            Dim _insuCodeTmp As String() = Me.ParseRangeValue(_insuCodeRange)
            var1.AppendFormat("                             OR ( Insu_Code BETWEEN '{0}' AND '{1}' ) " & vbCrLf, _insuCodeTmp(0), _insuCodeTmp(1))
        Next
        var1.AppendFormat("                          )" & vbCrLf)
        var1.AppendFormat("                          AND ( '{0}' BETWEEN Effect_Date AND End_Date ) " & vbCrLf, OrderDate.ToShortDateString)
        var1.AppendFormat("                   UNION " & vbCrLf)
        var1.AppendFormat("                   SELECT Order_Code, " & vbCrLf)
        var1.AppendFormat("                          Insu_Code, " & vbCrLf)
        var1.AppendFormat("                          CAST('' AS NCHAR(8)) Insu_Group_Code " & vbCrLf)
        var1.AppendFormat("                   FROM   PUB_Insu_Code " & vbCrLf)
        var1.AppendFormat("                   WHERE  ( Insu_Code IN ( {0} ) " & vbCrLf, _InsuCodesSet)
        For Each _insuCodeRange In _splittedInsuCodeRange
            Dim _insuCodeTmp As String() = Me.ParseRangeValue(_insuCodeRange)
            var1.AppendFormat("                             OR ( Insu_Code BETWEEN '{0}' AND '{1}' ) " & vbCrLf, _insuCodeTmp(0), _insuCodeTmp(1))
        Next
        var1.AppendFormat("                          )" & vbCrLf)
        var1.AppendFormat("                          AND ( '{0}' BETWEEN Effect_Date AND End_Date )) insu " & vbCrLf, OrderDate.ToShortDateString)
        var1.AppendFormat("         ON ( po.Order_Code = insu.Order_Code ) " & vbCrLf)
        var1.AppendFormat("WHERE  ( '{0}' BETWEEN Effect_Date AND End_Date ) " & vbCrLf, OrderDate.ToShortDateString)
        var1.AppendFormat("ORDER  BY Insu_Code, " & vbCrLf)
        var1.AppendFormat("          Order_Code, " & vbCrLf)
        var1.AppendFormat("          Effect_Date " & vbCrLf)

        clearCommandString()

        CommandStr = var1

        _ds = dynamicQuery(CommandStr.ToString)

        Return _ds
    End Function
#End Region

#Region "單位換算"

    ''' <summary>
    ''' 依總量單位換算總量值
    ''' </summary>
    ''' <param name="Order_Record_Tqty_Unit">來源單位代碼</param>
    ''' <param name="Order_Record_Tqty">來源數量</param>
    ''' <param name="Transform_Unit">要轉換的單位代碼</param>
    ''' <returns>回傳轉換單位後的數量</returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function Tqty_UnitTransform(ByVal Order_Record_Tqty_Unit As String, _
                                       ByVal Order_Record_Tqty As Decimal, _
                                       ByVal Transform_Unit As String) As Decimal

        '若單位一樣，則直接回傳原來的Tqty
        If Order_Record_Tqty_Unit.ToUpper = Transform_Unit.ToUpper Then Return Order_Record_Tqty

        Dim var1 As New System.Text.StringBuilder
        var1.AppendFormat("SELECT CAST(( A.Transfer_Factor_Charge * {0} / A.Transfer_Factor_Dosage ) AS DECIMAL(10, 4))AS Tqty " & vbCrLf, Order_Record_Tqty)
        var1.AppendFormat("FROM   (SELECT (SELECT TOP ( 1 ) ( CASE " & vbCrLf)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit1 THEN Transfer_Factor1 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit2 THEN transfer_factor2 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit3 THEN Transfer_Factor3 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit4 THEN Transfer_Factor4 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit5 THEN Transfer_Factor5 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                   END )) AS Transfer_Factor_Dosage, " & vbCrLf)
        var1.AppendFormat("               (SELECT TOP ( 1 ) ( CASE " & vbCrLf)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit1 THEN Transfer_Factor1 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit2 THEN transfer_factor2 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit3 THEN Transfer_Factor3 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit4 THEN Transfer_Factor4 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit5 THEN Transfer_Factor5 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     ELSE NULL " & vbCrLf)
        var1.AppendFormat("                                   END )) AS Transfer_Factor_Charge " & vbCrLf)
        var1.AppendFormat("        FROM   PUB_Unit " & vbCrLf)
        var1.AppendFormat("        WHERE  Unit_Code = '{0}') AS A " & vbCrLf, Order_Record_Tqty_Unit)

        'clearCommandString()
        'CommandStr = var1

        Dim _dtTqty As DataTable = dynamicQuery(var1.ToString).Tables(0)

        If _dtTqty.Rows.Count = 0 OrElse IsDBNull(_dtTqty.Rows(0)("Tqty")) Then
            Return Order_Record_Tqty
        Else
            Return CType(_dtTqty.Rows(0)("Tqty"), Decimal)
        End If
    End Function

    ''' <summary>
    ''' 依醫令之總量單位換算總量值
    ''' </summary>
    ''' <param name="Order_Code">醫令代碼</param>
    ''' <param name="Order_Record_Tqty_Unit">來源單位代碼</param>
    ''' <param name="Order_Record_Tqty">來源數量</param>
    ''' <param name="Transform_Unit">要轉換的單位代碼</param>
    ''' <returns>回傳轉換單位後的數量</returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Public Function Tqty_UnitTransform(ByVal Order_Code As String, _
                                       ByVal Order_Record_Tqty_Unit As String, _
                                       ByVal Order_Record_Tqty As Decimal, _
                                       ByVal Transform_Unit As String, _
                                       Optional ByRef IsSuccess As Boolean = True) As Decimal
        '若單位一樣，則直接回傳原來的Tqty
        If Order_Record_Tqty_Unit.ToUpper = Transform_Unit.ToUpper Then Return Order_Record_Tqty


        '========================================================
        Dim var18 As New System.Text.StringBuilder
        var18.Append("DECLARE @Order_Code NVARCHAR(40) ")
        var18.Append("DECLARE @Dosage DECIMAL(10, 4) ")
        var18.Append("DECLARE @Dosage_Unit NVARCHAR(20) ")
        var18.Append("DECLARE @Charge_Unit NVARCHAR(20) ")

        var18.AppendFormat("SET @Order_Code = '{0}' " & vbCrLf, Order_Code)
        var18.AppendFormat("SET @Dosage = {0} " & vbCrLf, Order_Record_Tqty)
        var18.AppendFormat("SET @Dosage_Unit = '{0}' " & vbCrLf, Order_Record_Tqty_Unit)
        var18.AppendFormat("SET @Charge_Unit = '{0}' " & vbCrLf, Transform_Unit)

        var18.Append(" " & vbCrLf)
        var18.Append("SELECT CAST(@Dosage * (SELECT ( CASE " & vbCrLf)
        var18.Append("                                  WHEN @Charge_Unit = Transfer_Factor_Unit1 THEN Transfer_Factor1 " & vbCrLf)
        var18.Append("                                  WHEN @Charge_Unit = Transfer_Factor_Unit2 THEN transfer_factor2 " & vbCrLf)
        var18.Append("                                  WHEN @Charge_Unit = Transfer_Factor_Unit3 THEN Transfer_Factor3 " & vbCrLf)
        var18.Append("                                  WHEN @Charge_Unit = Transfer_Factor_Unit4 THEN Transfer_Factor4 " & vbCrLf)
        var18.Append("                                  WHEN @Charge_Unit = Transfer_Factor_Unit5 THEN Transfer_Factor5 " & vbCrLf)
        var18.Append("                                  ELSE NULL " & vbCrLf)
        var18.Append("                                END )) / (SELECT ( CASE " & vbCrLf)
        var18.Append("                                                     WHEN @Dosage_Unit = Transfer_Factor_Unit1 THEN Transfer_Factor1 " & vbCrLf)
        var18.Append("                                                     WHEN @Dosage_Unit = Transfer_Factor_Unit2 THEN transfer_factor2 " & vbCrLf)
        var18.Append("                                                     WHEN @Dosage_Unit = Transfer_Factor_Unit3 THEN Transfer_Factor3 " & vbCrLf)
        var18.Append("                                                     WHEN @Dosage_Unit = Transfer_Factor_Unit4 THEN Transfer_Factor4 " & vbCrLf)
        var18.Append("                                                     WHEN @Dosage_Unit = Transfer_Factor_Unit5 THEN Transfer_Factor5 " & vbCrLf)
        var18.Append("                                                   END )) AS DECIMAL(10, 4)) AS Tqty " & vbCrLf)
        var18.Append("FROM   OPH_Pharmacy_Base A " & vbCrLf)
        var18.Append("WHERE  Order_Code = @Order_Code " & vbCrLf)
        var18.Append("       AND A.Dc = 'N' " & vbCrLf)

        Dim _dtTqty2 As DataTable = dynamicQueryNotPub(var18.ToString).Tables(0)

        If Not (_dtTqty2.Rows.Count = 0 OrElse IsDBNull(_dtTqty2.Rows(0)("Tqty"))) Then

            Return CType(_dtTqty2.Rows(0)("Tqty"), Decimal)
        End If

        '若在 pharmacy_base 中找不到單位可轉換，責到 Pub_Unit 去找

        '================================================

        Dim var1 As New System.Text.StringBuilder
        var1.AppendFormat("SELECT CAST(( A.Transfer_Factor_Charge * {0} / A.Transfer_Factor_Dosage ) AS DECIMAL(10, 4)) AS Tqty " & vbCrLf, Order_Record_Tqty)
        var1.AppendFormat("FROM   (SELECT (SELECT TOP ( 1 ) ( CASE " & vbCrLf)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit1 THEN Transfer_Factor1 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit2 THEN transfer_factor2 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit3 THEN Transfer_Factor3 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit4 THEN Transfer_Factor4 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit5 THEN Transfer_Factor5 " & vbCrLf, Order_Record_Tqty_Unit)
        var1.AppendFormat("                                   END )) AS Transfer_Factor_Dosage, " & vbCrLf)
        var1.AppendFormat("               (SELECT TOP ( 1 ) ( CASE " & vbCrLf)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit1 THEN Transfer_Factor1 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit2 THEN transfer_factor2 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit3 THEN Transfer_Factor3 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit4 THEN Transfer_Factor4 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     WHEN '{0}' = Transfer_Factor_Unit5 THEN Transfer_Factor5 " & vbCrLf, Transform_Unit)
        var1.AppendFormat("                                     ELSE NULL " & vbCrLf)
        var1.AppendFormat("                                   END )) AS Transfer_Factor_Charge " & vbCrLf)
        var1.AppendFormat("        FROM   PUB_Unit " & vbCrLf)
        var1.AppendFormat("        WHERE  Unit_Code = '{0}') AS A " & vbCrLf, Order_Record_Tqty_Unit)

        Dim _dtTqty As DataTable = dynamicQuery(var1.ToString).Tables(0)

        If Not (_dtTqty.Rows.Count = 0 OrElse IsDBNull(_dtTqty.Rows(0)("Tqty"))) Then

            IsSuccess = True

            Return CType(_dtTqty.Rows(0)("Tqty"), Decimal)
        Else

            IsSuccess = False

            Return Order_Record_Tqty
        End If

    End Function
#End Region

#Region "My Toolbox"

#Region "For GetCurrentOrderset"

    Private Function QueryAllOrdersOfOutpatientSn(ByVal OutpatientSn As String, ByVal SourceType As String, ByVal Location As String) As DataTable
        Dim _sqlString = Me.GetSqlStringForGetCurrentOrderSet(OutpatientSn, SourceType, Location)
        If _sqlString = String.Empty Then Return Nothing

        Return Me.dynamicQueryForEis(_sqlString).Tables(0)
    End Function

    Private Function GetSqlStringForGetCurrentOrderSet(ByVal OutpatientSn As String, ByVal SourceType As String, ByVal Location As String) As String

        SourceType = SourceType.ToUpper
        Location = Location.ToUpper

        'Dim _tableName As String = String.Empty
        Dim var1 As New System.Text.StringBuilder
        Select Case SourceType
            Case "O"
                '----------------------------
                ' 門診
                '----------------------------
                Select Case Location
                    Case "C"
                        '_tableName = "OMO_Order_Record"
                        var1.AppendFormat("SELECT * " & vbCrLf)
                        var1.AppendFormat("FROM   OMO_Order_Record " & vbCrLf)
                        var1.AppendFormat("WHERE  Outpatient_Sn = '{0}' " & vbCrLf, OutpatientSn)
                        var1.AppendFormat("       AND ( Dc = 'N' " & vbCrLf)
                        var1.AppendFormat("              OR Dc IS NULL ) " & vbCrLf)
                        var1.AppendFormat("       AND ( Cancel = 'N' " & vbCrLf)
                        var1.AppendFormat("              OR Cancel IS NULL ) " & vbCrLf)
                    Case "P"
                        '_tableName = "OPC_Charge_Detail"
                        var1.AppendFormat("SELECT * " & vbCrLf)
                        var1.AppendFormat("FROM   OPC_Charge_Detail " & vbCrLf)
                        var1.AppendFormat("WHERE  Outpatient_Sn = '{0}' " & vbCrLf, OutpatientSn)
                        var1.AppendFormat("       AND ( Cancel = 'N' " & vbCrLf)
                        var1.AppendFormat("              OR Cancel IS NULL ) " & vbCrLf)
                    Case "S"
                        '_tableName = "OHD_Order_Record"
                        var1.AppendFormat("SELECT *, " & vbCrLf)
                        var1.AppendFormat("       RTRIM(Medical_Sn) AS Outpatient_Sn " & vbCrLf)
                        var1.AppendFormat("FROM   OHD_Order_Record " & vbCrLf)
                        var1.AppendFormat("WHERE  Medical_Sn = '{0}' " & vbCrLf, OutpatientSn)
                        var1.AppendFormat("       AND ( Cancel = 'N' " & vbCrLf)
                        var1.AppendFormat("              OR Cancel IS NULL ) " & vbCrLf)
                End Select
            Case "E"
                '----------------------------
                ' 急診
                '----------------------------
                Select Case Location
                    Case "C"
                        '_tableName = "EMO_Order_Record"
                        var1.AppendFormat("SELECT * " & vbCrLf)
                        var1.AppendFormat("FROM   EMO_Order_Record " & vbCrLf)
                        var1.AppendFormat("WHERE  Outpatient_Sn = '{0}' " & vbCrLf, OutpatientSn)
                        var1.AppendFormat("       AND ( Dc = 'N' " & vbCrLf)
                        var1.AppendFormat("              OR Dc IS NULL ) " & vbCrLf)
                        var1.AppendFormat("       AND ( Cancel = 'N' " & vbCrLf)
                        var1.AppendFormat("              OR Cancel IS NULL ) " & vbCrLf)
                    Case "P"
                        '_tableName = "EMD_Charge_Detail"
                        var1.AppendFormat("SELECT * " & vbCrLf)
                        var1.AppendFormat("FROM   EMD_Charge_Detail " & vbCrLf)
                        var1.AppendFormat("WHERE  Outpatient_Sn = '{0}' " & vbCrLf, OutpatientSn)
                        var1.AppendFormat("       AND ( Cancel = 'N' " & vbCrLf)
                        var1.AppendFormat("              OR Cancel IS NULL ) " & vbCrLf)
                    Case "S"
                        '_tableName = "OHD_Order_Record"
                        var1.AppendFormat("SELECT *, " & vbCrLf)
                        var1.AppendFormat("       RTRIM(Medical_Sn) AS Outpatient_Sn " & vbCrLf)
                        var1.AppendFormat("FROM   OHD_Order_Record " & vbCrLf)
                        var1.AppendFormat("WHERE  Medical_Sn = '{0}' " & vbCrLf, OutpatientSn)
                        var1.AppendFormat("       AND ( Cancel = 'N' " & vbCrLf)
                        var1.AppendFormat("              OR Cancel IS NULL ) " & vbCrLf)
                End Select
            Case "I"
                '----------------------------
                ' 住院
                '----------------------------
                Select Case Location
                    Case "C"
                        '_tableName = "IMO_Order_Record"
                        var1.Append("SELECT X.Order_Code, " & vbCrLf)
                        var1.Append("       P.Pharmacy_12_Code, " & vbCrLf)
                        var1.Append("       X.Order_Date, " & vbCrLf)
                        var1.Append("       X.Body_Site_Code, " & vbCrLf)
                        var1.Append("       X.Side_Id                             AS [Body_Side_Code], " & vbCrLf)
                        var1.Append("       X.Dosage, " & vbCrLf)
                        var1.Append("       X.Dosage_Unit, " & vbCrLf)
                        var1.Append("       X.Frequency_Code, " & vbCrLf)
                        var1.Append("       CASE " & vbCrLf)
                        var1.Append("         WHEN Isnull(X.Medication_Type_Sign, '') = 'H' THEN X.Duration " & vbCrLf)
                        var1.Append("         ELSE 1 " & vbCrLf)
                        var1.Append("       END                                   AS [Days], " & vbCrLf)
                        var1.Append("       X.Tqty, " & vbCrLf)
                        var1.Append("       X.Tqty_Unit, " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                AS [Is_Chronic_Card], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                AS [Is_Cure], " & vbCrLf)
                        var1.Append("       1                                     AS [Medicine_Cnt], " & vbCrLf)
                        var1.Append("       X.Specimen_Id, " & vbCrLf)
                        var1.Append("       CASE " & vbCrLf)
                        var1.Append("         WHEN X.[Start_Date] IS NULL THEN LEFT(CONVERT(VARCHAR(30), X.Create_Time, 121), 16) " & vbCrLf)
                        var1.Append("         ELSE CONVERT(DATETIME, CONVERT(VARCHAR(30), X.[Start_Date], 121) + ' ' + LEFT(Replace(X.Start_Time, ':', '0'), 2) + ':' + RIGHT(Replace(X.Start_Time, ':', '0'), 2)) " & vbCrLf)
                        var1.Append("       END                                   AS [Order_Effect_Date], " & vbCrLf)
                        var1.Append("       CASE " & vbCrLf)
                        var1.Append("         WHEN X.End_Date IS NULL " & vbCrLf)
                        var1.Append("               OR X.End_Date = '' THEN " & vbCrLf)
                        var1.Append("           CASE " & vbCrLf)
                        var1.Append("             WHEN X.[Start_Date] IS NULL THEN LEFT(CONVERT(VARCHAR(30), Dateadd(day, Isnull(X.Duration, 1), X.Create_Time), 121), 16) " & vbCrLf)
                        var1.Append("             ELSE CONVERT(DATETIME, CONVERT(VARCHAR(30), Dateadd(day, Isnull(X.Duration, 1), X.[Start_Date]), 121) + ' ' + LEFT(Replace(X.Start_Time, ':', '0'), 2) + ':' + RIGHT(Replace(X.Start_Time, ':', '0'), 2)) " & vbCrLf)
                        var1.Append("           END " & vbCrLf)
                        var1.Append("         ELSE CONVERT(DATETIME, CONVERT(VARCHAR(30), X.End_Date, 121) + ' ' + LEFT(Replace(X.End_Time, ':', '0'), 2) + ':' + RIGHT(Replace(X.End_Time, ':', '0'), 2)) " & vbCrLf)
                        var1.Append("       END                                   AS [Order_End_Date], " & vbCrLf)
                        var1.Append("       X.Dr_Employee_Code                    AS [Order_Doctor_Code], " & vbCrLf)
                        var1.Append("       X.Usage_Code, " & vbCrLf)
                        var1.Append("       X.Consumpation_Unit                   AS [Consumption_Dept], " & vbCrLf)
                        var1.Append("       CASE " & vbCrLf)
                        var1.Append("         WHEN Isnull(X.Order_Type_Id, '') = 'G' THEN Isnull(Is_Material_Force, 'N') " & vbCrLf)
                        var1.Append("         ELSE Isnull(Force_Sign, 'N') " & vbCrLf)
                        var1.Append("       END                                   AS [Is_Force], " & vbCrLf)
                        var1.Append("       P.Class_Code, " & vbCrLf)
                        var1.Append("       Isnull(P.Order_Name, D.Order_En_Name) AS [Order_Name], " & vbCrLf)
                        var1.Append("       Isnull(X.Is_Self_Pay, 'N')            AS [Is_Self_Pay], " & vbCrLf)
                        var1.Append("       Isnull(X.Is_Preadmission, 'N')        AS [Is_Preadmission], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                AS [Is_Pre_Or_Examination,], " & vbCrLf)
                        var1.Append("       X.Dr_Employee_Code                    AS [Order_VS_Code], " & vbCrLf)
                        var1.Append("       X.Order_Record_No, " & vbCrLf)
                        var1.Append("       X.Drip " & vbCrLf)
                        var1.Append("FROM   IMO_Order_Record X " & vbCrLf)
                        var1.Append("       LEFT OUTER JOIN OPH_Pharmacy_Base P " & vbCrLf)
                        var1.Append("         ON X.Order_Code = P.Order_Code " & vbCrLf)
                        var1.Append("       LEFT OUTER JOIN PUB_Order D " & vbCrLf)
                        var1.Append("         ON X.Order_Code = D.Order_Code " & vbCrLf)
                        var1.Append("            AND D.Dc = 'N' " & vbCrLf)
                        var1.Append("WHERE  X.Case_No = '{0}' " & vbCrLf, OutpatientSn)
                        var1.Append("       AND ( X.Cancel = 'N' " & vbCrLf)
                        var1.Append("              OR X.Cancel IS NULL ) " & vbCrLf)
                        var1.Append("       AND X.Order_Code NOT IN (SELECT DISTINCT A.Order_Code " & vbCrLf)
                        var1.Append("                                FROM   IMO_Order_Record AS A " & vbCrLf)
                        var1.Append("                                       INNER JOIN PUB_Order AS B " & vbCrLf)
                        var1.Append("                                         ON A.Order_Code = B.Order_Code " & vbCrLf)
                        var1.Append("                                            AND B.Order_Type_Id = 'H' " & vbCrLf)
                        var1.Append("                                            AND ( B.Treatment_Type_Id = '3' " & vbCrLf)
                        var1.Append("                                                   OR B.Treatment_Type_Id = '4' ) " & vbCrLf)
                        var1.Append("                                WHERE  A.Case_No = '{0}' " & vbCrLf, OutpatientSn)
                        var1.Append("                                       AND ( A.Dc = 'N' " & vbCrLf)
                        var1.Append("                                              OR A.Dc IS NULL ) " & vbCrLf)
                        var1.Append("                                       AND ( A.Cancel = 'N' " & vbCrLf)
                        var1.Append("                                              OR A.Cancel IS NULL )) " & vbCrLf)
                        var1.Append("ORDER  BY X.Order_Record_No ")
                    Case "P"
                        '_tableName = "STA_Material_Detail"
                        var1.Append("SELECT X.Order_Code                                      AS [Order_Code], " & vbCrLf)
                        var1.Append("       X.Insu_Code                                       AS [Insu_Code], " & vbCrLf)
                        var1.Append("       P.Pharmacy_12_Code, " & vbCrLf)
                        var1.Append("       X.Account_Date                                    AS [Order_Date], " & vbCrLf)
                        var1.Append("       X.Body_Site_Code, " & vbCrLf)
                        var1.Append("       X.Side_Id                                         AS [Body_Side_Code], " & vbCrLf)
                        var1.Append("       X.Dosage, " & vbCrLf)
                        var1.Append("       X.Dosage_Unit, " & vbCrLf)
                        var1.Append("       X.Frequency_Code, " & vbCrLf)
                        var1.Append("       CASE " & vbCrLf)
                        var1.Append("         WHEN Isnull(X.Medication_Type_Sign, '') = 'H' THEN R.Duration " & vbCrLf)
                        var1.Append("         ELSE 1 " & vbCrLf)
                        var1.Append("       END                                               AS [Days], " & vbCrLf)
                        var1.Append("       X.Remain_Qty                                      AS [Tqty], " & vbCrLf)
                        var1.Append("       X.Material_Unit                                   AS [Tqty_Unit], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                            AS [Is_Chronic_Card], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                            AS [Is_Cure], " & vbCrLf)
                        var1.Append("       1                                                 AS [Medicine_Cnt], " & vbCrLf)
                        var1.Append("       R.Specimen_Id, " & vbCrLf)
                        var1.Append("       X.Account_Date                                    AS [Order_Effect_Date], " & vbCrLf)
                        var1.Append("       X.Account_Date                                    AS [Order_End_Date], " & vbCrLf)
                        var1.Append("       X.Dr_Employee_Code                                AS [Order_Doctor_Code], " & vbCrLf)
                        var1.Append("       X.Usage_Code, " & vbCrLf)
                        var1.Append("       X.Consumption_Unit                                AS [Consumption_Dept], " & vbCrLf)
                        var1.Append("       X.Force_Sign                                      AS [Is_Force], " & vbCrLf)
                        var1.Append("       P.Class_Code, " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                            AS [Is_Self_Pay], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                            AS [Is_Preadmission], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                            AS [Is_Pre_Or_Examination], " & vbCrLf)
                        var1.Append("       X.Dr_Employee_Code                                AS [Order_VS_Code], " & vbCrLf)
                        var1.Append("       Isnull(R.Order_Record_No, 990000 + X.Material_No) AS [Order_Record_No] " & vbCrLf)
                        var1.Append("FROM   STA_Material_Detail X " & vbCrLf)
                        var1.Append("       LEFT OUTER JOIN IMO_Order_Record R " & vbCrLf)
                        var1.Append("         ON X.Case_No = R.Case_No " & vbCrLf)
                        var1.Append("            AND X.Order_Record_No = R.Order_Record_No " & vbCrLf)
                        var1.Append("       LEFT OUTER JOIN OPH_Pharmacy_Base P " & vbCrLf)
                        var1.Append("         ON X.Order_Code = P.Order_Code " & vbCrLf)
                        var1.Append("WHERE  X.Case_No = '{0}' " & vbCrLf, OutpatientSn)
                        var1.Append("       AND ( X.Cancel = 'N' " & vbCrLf)
                        var1.Append("              OR X.Cancel IS NULL ) " & vbCrLf)
                        var1.Append("       AND X.Order_Code NOT IN (SELECT DISTINCT A.Order_Code " & vbCrLf)
                        var1.Append("                                FROM   IMO_Order_Record AS A " & vbCrLf)
                        var1.Append("                                       INNER JOIN PUB_Order AS B " & vbCrLf)
                        var1.Append("                                         ON A.Order_Code = B.Order_Code " & vbCrLf)
                        var1.Append("                                            AND B.Order_Type_Id = 'H' " & vbCrLf)
                        var1.Append("                                            AND ( B.Treatment_Type_Id = '3' " & vbCrLf)
                        var1.Append("                                                   OR B.Treatment_Type_Id = '4' ) " & vbCrLf)
                        var1.Append("                                WHERE  A.Case_No = '{0}' " & vbCrLf, OutpatientSn)
                        var1.Append("                                       AND ( A.Dc = 'N' " & vbCrLf)
                        var1.Append("                                              OR A.Dc IS NULL ) " & vbCrLf)
                        var1.Append("                                       AND ( A.Cancel = 'N' " & vbCrLf)
                        var1.Append("                                              OR A.Cancel IS NULL )) " & vbCrLf)
                        var1.Append("ORDER  BY X.Order_Record_No ")
                    Case "S"
                        '_tableName = "IHD_Dclr_Detail"
                        var1.Append("SELECT X.Order_Code                                                                                                                  AS [Order_Code], " & vbCrLf)
                        var1.Append("       X.Insu_Code                                                                                                                   AS [Insu_Code], " & vbCrLf)
                        var1.Append("       X.Execute_Date_S                                                                                                              AS [Order_Date], " & vbCrLf)
                        var1.Append("       X.Body_Site_Code, " & vbCrLf)
                        var1.Append("       X.Side_Id                                                                                                                     AS [Body_Side_Code], " & vbCrLf)
                        var1.Append("       X.Dosage, " & vbCrLf)
                        var1.Append("       X.Dosage_Unit, " & vbCrLf)
                        var1.Append("       X.Frequency_Code, " & vbCrLf)
                        var1.Append("       Datediff(day, X.Execute_Date_S, X.Execute_Date_E) + 1                                                                         AS [Days], " & vbCrLf)
                        var1.Append("       X.Apply_Qty                                                                                                                   AS [Tqty], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                                                                                                        AS [Is_Chronic_Card], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                                                                                                        AS [Is_Cure], " & vbCrLf)
                        var1.Append("       1                                                                                                                             AS [Medicine_Cnt], " & vbCrLf)
                        var1.Append("       CONVERT(DATETIME, CONVERT(VARCHAR(30), Execute_Date_S, 121) + ' ' + LEFT(Execute_Time_S, 2) + ':' + RIGHT(Execute_Time_S, 2)) AS [Order_Effect_Date], " & vbCrLf)
                        var1.Append("       CONVERT(DATETIME, CONVERT(VARCHAR(30), Execute_Date_E, 121) + ' ' + LEFT(Execute_Time_E, 2) + ':' + RIGHT(Execute_Time_E, 2)) AS [Order_End_Date], " & vbCrLf)
                        var1.Append("       X.Dr_Employee_Code                                                                                                            AS [Order_Doctor_Code], " & vbCrLf)
                        var1.Append("       X.Usage_Code, " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                                                                                                        AS [Is_Force], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                                                                                                        AS [Is_Self_Pay], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                                                                                                        AS [Is_Preadmission], " & vbCrLf)
                        var1.Append("       CONVERT(NCHAR(1), 'N')                                                                                                        AS [Is_Pre_Or_Examination], " & vbCrLf)
                        var1.Append("       X.Dr_Employee_Code                                                                                                            AS [Order_VS_Code], " & vbCrLf)
                        var1.Append("       X.Order_No                                                                                                                    AS [Order_Record_No] " & vbCrLf)
                        var1.Append("FROM   IHD_Dclr_Detail X " & vbCrLf)
                        var1.Append("WHERE  X.Case_No = '{0}' " & vbCrLf, OutpatientSn)
                        var1.Append("       AND ( X.Cancel = 'N' " & vbCrLf)
                        var1.Append("              OR X.Cancel IS NULL ) " & vbCrLf)
                        var1.Append("       AND X.Order_Code NOT IN (SELECT DISTINCT A.Order_Code " & vbCrLf)
                        var1.Append("                                FROM   IMO_Order_Record AS A " & vbCrLf)
                        var1.Append("                                       INNER JOIN PUB_Order AS B " & vbCrLf)
                        var1.Append("                                         ON A.Order_Code = B.Order_Code " & vbCrLf)
                        var1.Append("                                            AND B.Order_Type_Id = 'H' " & vbCrLf)
                        var1.Append("                                            AND ( B.Treatment_Type_Id = '3' " & vbCrLf)
                        var1.Append("                                                   OR B.Treatment_Type_Id = '4' ) " & vbCrLf)
                        var1.Append("                                WHERE  A.Case_No = '{0}' " & vbCrLf, OutpatientSn)
                        var1.Append("                                       AND ( A.Dc = 'N' " & vbCrLf)
                        var1.Append("                                              OR A.Dc IS NULL ) " & vbCrLf)
                        var1.Append("                                       AND ( A.Cancel = 'N' " & vbCrLf)
                        var1.Append("                                              OR A.Cancel IS NULL )) " & vbCrLf)
                        var1.Append("ORDER  BY X.Order_No ")
                End Select
        End Select

        Return var1.ToString
    End Function

#End Region

    ''' <summary>
    ''' Parse區域數值
    ''' </summary>
    ''' <param name="InputRangeValue"></param>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Private Function ParseRangeValue(ByVal InputRangeValue As String) As String()
        'Dim _regex As New System.Text.RegularExpressions.Regex("^\s*[\[]\s*\w+\s*[-]\s*\w+\s*[\]]\s*$")

        Dim _tmpValues As String = InputRangeValue.Replace(" ", "")

        _tmpValues = _tmpValues.Remove(_tmpValues.IndexOf("["), 1)
        _tmpValues = _tmpValues.Remove(_tmpValues.LastIndexOf("]"), 1)
        Dim _splitedValues As String() = _tmpValues.Split(New Char() {"-"}, StringSplitOptions.RemoveEmptyEntries)

        If _splitedValues.Count = 1 Then
            _splitedValues = New String() {_splitedValues(0), _splitedValues(0)}
        End If

        Return _splitedValues
    End Function

    ''' <summary>
    ''' Range之rqgular expression
    ''' </summary>
    ''' <remarks></remarks>
    Private m_regex As New System.Text.RegularExpressions.Regex("^\s*[\[]\s*\w+\s*[-]\s*\w+\s*[\]]\s*$")

    ''' <summary>
    ''' 判斷傳入字串是否符合Range之表示方式
    ''' </summary>
    ''' <param name="InputString"></param>
    ''' <returns></returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Private Function IsRangeMatch(ByVal InputString As String) As Boolean

        Return m_regex.IsMatch(InputString)
    End Function

    ''' <summary>
    ''' 判斷是否在Range中
    ''' </summary>
    ''' <param name="CodeX">Code</param>
    ''' <param name="Range">Range</param>
    ''' <returns>是否符合</returns>
    ''' <author>Ken</author>
    ''' <remarks></remarks>
    Private Function IsInRange(ByVal CodeX As String, ByVal Range As String) As Boolean

        Dim _codeX As String = CodeX.Trim
        Dim _codeRangeX As String = Range.Replace(" ", "")

        Dim _codeRangeTmp As String() = _codeRangeX.Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)

        Dim _codeRanges = _codeRangeTmp.Where(Function(r) Me.IsRangeMatch(r))
        Dim _codes = _codeRangeTmp.Except(_codeRanges)

        Dim _result As Boolean = False

        _result = _result OrElse _codes.Any(Function(r) r = CodeX)

        For Each _codeRange As String In _codeRanges
            Dim _range As String() = Me.ParseRangeValue(_codeRange)

            _result = _result OrElse (_range(0) <= CodeX AndAlso CodeX <= _range(1))
        Next

        Return _result
    End Function

    ''' <summary>
    ''' 健保碼轉成大碼
    ''' </summary>
    ''' <param name="InsuCode">健保碼集合</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function InsuCodeToOrderCode(ByVal InsuCode As String, Optional ByVal OrderDate As String = "") As String()

        Dim _orderDate As String = IIf(OrderDate = String.Empty, Now.ToShortDateString, OrderDate)

        Return Me.InsuCodeToOrderCode(New String() {InsuCode}, _orderDate)
    End Function

    ''' <summary>
    ''' 健保碼轉成大碼
    ''' </summary>
    ''' <param name="InputInsuCodes">欲轉換之健保碼</param>
    ''' <returns>轉換完之成大碼</returns>
    ''' <remarks></remarks>
    Private Function InsuCodeToOrderCode(ByVal InputInsuCodes As String(), ByVal OrderEffectDate As String) As String()

        Dim _insuCode As String = String.Join(",", InputInsuCodes)
        Dim _returnDs As DataSet = Me.Ext_InsuCode_To_OrderCodeDs(_insuCode, CDate(OrderEffectDate), True)

        Dim _returnDt As DataTable = _returnDs.Tables(0)

        Dim _OrderCodes = _returnDt.AsEnumerable.Select(Function(r) r("Order_Code").ToString.TrimEnd).ToArray

        Return _OrderCodes
    End Function

    ''' <summary>
    ''' 成大碼轉健保碼
    ''' </summary>
    ''' <param name="OrderCode">成大碼集合</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function OrderCodeToInsuCode(ByVal OrderCode As String, Optional ByVal OrderDate As String = "") As String()

        Dim _orderDate As String = IIf(OrderDate = String.Empty, Now.ToShortDateString, OrderDate)

        Return Me.OrderCodeToInsuCode(New String() {OrderCode}, _orderDate)
    End Function

    ''' <summary>
    ''' 成大碼轉健保碼
    ''' </summary>
    ''' <param name="InputOrderCodes">欲轉換之成大碼</param>
    ''' <returns>轉換完之健保碼</returns>
    ''' <remarks></remarks>
    Private Function OrderCodeToInsuCode(ByVal InputOrderCodes As String(), Optional ByVal OrderEffectDAte As String = "yyyy-mm-dd") As String()

        Dim _orderCode As String = String.Join(",", InputOrderCodes)

        Dim _returnDs As DataSet = Me.Ext_OrderCode_To_InsuCodeDs(_orderCode, CDate(OrderEffectDAte), True)
        Dim _returnDt As DataTable = _returnDs.Tables(0)

        Dim _InsuCodes = _returnDt.AsEnumerable.Select(Function(r) r("Insu_Code").ToString.TrimEnd).ToArray

        Return _InsuCodes
    End Function

    Public Function InsertOPH_Alert_Record(ByVal InputDs As DataSet) As Int32

        Dim _inputDt As DataTable = InputDs.Tables(0)


        Using trans As System.Transactions.TransactionScope = SQLConnFactory.getInstance.getRequiredTransactionScope()


            Dim _bo As OphAlertRecordBO = OphAlertRecordBO.GetInstance
            Dim conn As SqlConnection = _bo.getConnection

            Try

                conn.Open()

                Dim _cnt As Int32 = 0

                For Each _dr As DataRow In _inputDt.Rows
                    Dim _resultDt = _bo.queryByPK(_dr("Medical_Sn"), _dr("Item_Code"), _dr("Order_Code1"), _dr("Order_Sn"), conn).Tables(0)


                    If _resultDt.Rows.Count = 0 Then
                        Dim _newDs As New DataSet
                        Dim _newDt As DataTable = _inputDt.Clone
                        _newDt.ImportRow(_dr)
                        _newDs.Tables.Add(_newDt)

                        _cnt = _bo.insert(_newDs, conn)

                    End If
                Next

                trans.Complete()

            Catch ex As Exception
                If conn IsNot Nothing Then
                    conn.Close()
                    conn.Dispose()
                End If
            End Try

        End Using 'END Transaction.

    End Function

    ''' <summary>
    ''' 依成大12碼查詢Pharmacy_Name
    ''' </summary>
    ''' <param name="Pharmacy12Code">成大12碼</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function GetPharmacyName(ByVal Pharmacy12Code As String) As String
        Dim var1 As New System.Text.StringBuilder
        var1.AppendFormat("SELECT RTRIM(ISNULL(A.Pharmacy_Name, B.Order_EN_Name)) AS Pharmacy_Name " & vbCrLf)
        var1.AppendFormat("FROM   OPH_Pharmacy_Base A " & vbCrLf)
        var1.AppendFormat("       INNER JOIN PUB_Order B " & vbCrLf)
        var1.AppendFormat("         ON A.Order_Code = B.Order_Code " & vbCrLf)
        var1.AppendFormat("WHERE  A.Pharmacy_12_Code = '{0}' " & vbCrLf, Pharmacy12Code)
        var1.AppendFormat("       AND ( A.Dc = 'N' " & vbCrLf)
        var1.AppendFormat("              OR A.Dc IS NULL ) " & vbCrLf)
        var1.AppendFormat("       AND ( B.Dc = 'N' " & vbCrLf)
        var1.AppendFormat("              OR B.Dc IS NULL ) " & vbCrLf)

        Dim _pharmacyName As String = String.Empty

        Dim _ds As DataSet = dynamicQueryNotPub(var1.ToString)
        If _ds.Tables.Count > 0 AndAlso _ds.Tables(0).Rows.Count > 0 Then
            _pharmacyName = _ds.Tables(0).Rows(0)("Pharmacy_Name").ToString
        End If

        Return _pharmacyName
    End Function

    ''' <summary>
    ''' 以DataRow欄位組成HashTable所要用的Key
    ''' </summary>
    ''' <param name="Row"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function AssembleKeyForA05A15A07A17(ByVal Row As DataRow) As String

        Dim _isContainColSpecimenId As Boolean = Row.Table.Columns.Contains("Specimen_Id")
        Dim _isContainColBodySiteCode As Boolean = Row.Table.Columns.Contains("Body_Site_Code")

        Dim _key As String = CDate(Row("Order_Effect_Date")).ToString("yyyyMMdd") & ";" & If(_isContainColSpecimenId, Row("Specimen_Id").ToString.Trim.ToUpper, String.Empty) & ";" & If(_isContainColBodySiteCode, Row("Body_Site_Code").ToString.Trim.ToUpper, String.Empty)

        Return _key
    End Function

    ''' <summary>
    ''' 依照PUB_Order_Examination的設定取得Nhi_Body_Site_Code
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function GetNhiBodySiteCodeByOrderCode(ByVal OrderCode As String) As String

        Dim var1 As New System.Text.StringBuilder
        var1.AppendFormat("SELECT ISNULL(RTRIM(Nhi_Body_Site_Code), '') AS Nhi_Body_Site_Code " & vbCrLf)
        var1.AppendFormat("FROM   PUB_Order_Examination " & vbCrLf)
        var1.AppendFormat("WHERE  Order_Code = '{0}' ", OrderCode.Replace("'", "''"))

        Dim _ds As DataSet = dynamicQueryNotPub(var1.ToString)

        If _ds Is Nothing OrElse _ds.Tables.Count = 0 Then Return String.Empty

        Dim _dt As DataTable = _ds.Tables(0)

        If _dt.Rows.Count = 0 Then Return String.Empty

        Return _dt.Rows(0)("Nhi_Body_Site_Code")

    End Function

#End Region

#Region "計算點滴給藥濃度及速率"

    ''' <summary>
    ''' 計算點滴給藥濃度及速率
    ''' </summary>
    ''' <param name="DilutionOrderCode">稀釋液成大碼</param>
    ''' <param name="DilutionDosage">稀釋液用量</param>
    ''' <param name="DilutionDosageUnit">稀釋液用量單位</param>
    ''' <param name="MedicineOrderCode">藥品(注入稀釋液中)成大碼</param>
    ''' <param name="MedicineDosage">藥品用量</param>
    ''' <param name="MedicineDosageUnit">藥品用量單位</param>
    ''' <param name="Drip">滴速的值</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function CalculateDripConcentration(ByVal DilutionOrderCode As String, ByVal DilutionDosage As Decimal, ByVal DilutionDosageUnit As String, ByVal MedicineOrderCode As String, ByVal MedicineDosage As Decimal, ByVal MedicineDosageUnit As String, ByVal Drip As Decimal) As String
        Try
            Return Me.CalculateConcertration(DilutionOrderCode, DilutionDosage, DilutionDosageUnit, MedicineOrderCode, MedicineDosage, MedicineDosageUnit) & ";mg/mL;" & Me.CalculateDripSpeed(DilutionOrderCode, DilutionDosage, DilutionDosageUnit, Drip) & ";min"
        Catch ex As Exception
            log.dbErrorMsg(ex.Message & " ***** CalculateDripConcentration *****", ex)
            Throw ex
        End Try
    End Function

    Private Function CalculateConcertration(ByVal DilutionOrderCode As String, ByVal DilutionDosage As Decimal, ByVal DilutionDosageUnit As String, ByVal MedicineOrderCode As String, ByVal MedicineDosage As Decimal, ByVal MedicineDosageUnit As String) As String

        'calculate concertration.
        Dim _newMedicineDosage As Decimal = 0
        Dim _newDilutionDosage As Decimal = 0

        Try
            If Not Me.ReCalculateDosage(MedicineOrderCode, MedicineDosage, MedicineDosageUnit, "mg", _newMedicineDosage) Then
                Return "0"
            End If

            If Not Me.ReCalculateDosage(DilutionOrderCode, DilutionDosage, DilutionDosageUnit, "mL", _newDilutionDosage) Then
                Return "0"
            End If

            If _newDilutionDosage = 0 OrElse _newMedicineDosage = 0 Then Return "0"

            Return MathUtil.Round((_newMedicineDosage / _newDilutionDosage), 1).ToString

        Catch ex As Exception
            log.dbErrorMsg(ex.Message & " ***** CalculateConcertration *****", ex)
            Throw ex
        End Try

    End Function

    Private Function CalculateDripSpeed(ByVal DilutionOrderCode As String, ByVal DilutionDosage As Decimal, ByVal DilutionDosageUnit As String, ByVal Drip As Decimal) As String

        'calculate drip speed.
        Dim _newDosageOfmL As Decimal = 0

        Try
            If Me.ReCalculateDosage(DilutionOrderCode, DilutionDosage, DilutionDosageUnit, "mL", _newDosageOfmL) AndAlso Drip <> 0 Then
                Return MathUtil.Round((_newDosageOfmL / Drip) * 60, 0).ToString
            Else
                Return "0"
            End If
        Catch ex As Exception
            log.dbErrorMsg(ex.Message & " ***** CalculateDripSpeed *****", ex)
            Throw ex
        End Try

    End Function

    ''' <summary>
    ''' ReCalculate dosage by different dosage unit.
    ''' </summary>
    ''' <param name="OrderCode">order code</param>
    ''' <param name="OriginalDosage">original dosage</param>
    ''' <param name="OriginalDosageUnit">original dosage unit</param>
    ''' <param name="NewDosageUnit">new dosage unit</param>
    ''' <param name="NewDosage">new dosage</param>
    ''' <returns>success or fault.</returns>
    ''' <remarks></remarks>
    Private Function ReCalculateDosage(ByVal OrderCode As String, ByVal OriginalDosage As Decimal, ByVal OriginalDosageUnit As String, ByVal NewDosageUnit As String, ByRef NewDosage As Decimal) As Boolean

        Dim _newDosageOfmL As Decimal = 0

        If OriginalDosageUnit.Trim.ToUpper = NewDosageUnit.Trim.ToUpper Then

            NewDosage = OriginalDosage

            Return True
        End If

        Dim _isSuccess As Boolean = True
        _newDosageOfmL = Me.Tqty_UnitTransform(OrderCode, OriginalDosageUnit, OriginalDosage, NewDosageUnit, _isSuccess)

        If Not _isSuccess Then

            Dim _dtComposition = Me.GetCompositio_Content1(OrderCode)

            If _dtComposition.Rows.Count = 0 OrElse IsDBNull(_dtComposition.Rows(0)("Compositio_Content1")) OrElse IsDBNull(_dtComposition.Rows(0)("Compositio_Unit_Code1")) Then
                _isSuccess = False
            Else
                Dim _drComposition As DataRow = _dtComposition.Rows(0)
                _newDosageOfmL = Me.Tqty_UnitTransform(OrderCode, _drComposition("Compositio_Unit_Code1"), _drComposition("Compositio_Content1"), NewDosageUnit, _isSuccess)
            End If
        End If

        'set new dosage.
        NewDosage = _newDosageOfmL

        Return _isSuccess
    End Function

    Private Function GetCompositio_Content1(ByVal OrderCode As String) As DataTable
        Dim var1 As New System.Text.StringBuilder
        var1.AppendFormat("SELECT RTRIM(Compositio_Content1)   AS Compositio_Content1, " & vbCrLf)
        var1.AppendFormat("       RTRIM(Compositio_Unit_Code1) AS Compositio_Unit_Code1 " & vbCrLf)
        var1.AppendFormat("FROM   OPH_Pharmacy_Base " & vbCrLf)
        var1.AppendFormat("WHERE  Order_Code = '{0}' " & vbCrLf, OrderCode.Replace("'", "''"))
        var1.AppendFormat("       AND ( Dc = 'N' " & vbCrLf)
        var1.AppendFormat("              OR Dc IS NULL ) " & vbCrLf)

        Dim _dt As DataTable = dynamicQueryNotPub(var1.ToString).Tables(0)

        Return _dt
    End Function

#End Region

#End Region

#Region "Rule Engine API by mark"
#Region " H1, H2,H32"

    ''' <summary>
    ''' 每次量檢核
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H21_ChkFreqTimes() As Boolean
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "Order_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then



                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Order_Record", "Frequency_Code")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")


                If 1 = 1 Then


                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim
                    Dim TriggerValueData As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim ValueX As Decimal = CDec(pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData"))
                    Dim Operator_Code As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim

                    Dim OrderInsuCode As String = ""
                    If TriggerItemCode = "A00004" Then
                        OrderInsuCode = "Order_Code"
                    ElseIf TriggerItemCode = "A00031" Then
                        OrderInsuCode = "Pharmacy_12_Code"
                    Else
                        OrderInsuCode = "Insu_Code"
                    End If
                    Dim OrderRecordRow As DataRow = pubreapi.Tables("Order_Record").Select(OrderInsuCode & " = '" & TriggerValueData & "' ")(0)
                    Dim frequency_Code As String = OrderRecordRow.Item("Frequency_Code").ToString
                    Dim times As Integer = 0
                    Dim checkds As DataSet = dynamicQueryNotPub("Select count(*) From   OPH_Pharmacy_Frequency_Take where Frequency_Code ='" & frequency_Code & "'")
                    If checkds.Tables(0).Rows.Count > 0 Then
                        times = CInt(checkds.Tables(0).Rows(0).Item(0).ToString)
                    Else
                        times = 0
                        Return True
                    End If
                    '開始判斷
                    'pub_syscode type_id=804的
                    '
                    '
                    '
                    If Operator_Code.Trim.Equals("01") Then
                        If ValueX < times Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If

                    ElseIf Operator_Code.Trim.Equals("02") Then
                        If ValueX = times Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If

                    ElseIf Operator_Code.Trim.Equals("03") Then
                        If ValueX > times Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If

                    ElseIf Operator_Code.Trim.Equals("04") Then
                        If ValueX <= times Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If

                    ElseIf Operator_Code.Trim.Equals("05") Then
                        If ValueX >= times Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If

                    ElseIf Operator_Code.Trim.Equals("06") Then
                        If ValueX <> times Then
                            rtnData = True
                        Else
                            rtnData = False
                        End If


                    End If

                    Return True
                Else
                    rtnData = False
                    Return True
                End If
            Else
                rtnData = False
                Return False
            End If
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H21_ChkFreqTimes", False)
            Return False
        End Try
    End Function


    ''' <summary>
    ''' 1.37 慢箋檢核
    ''' 
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H01_ChkRefillPrescription() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	檢查OPH_Open_Restrict 
        '處理邏輯	如果Operation_code=04（等於）則撈出的資料要有才能pass 、 rtnData= ‘TRUE’
        '          
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim Order_Code As String = pubreapi.Tables("Order_Record").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("Order_Record").Rows(0).Item("TriggerItemCode").ToString.Trim


                    Dim Dr_Tables As DataSet
                    If TriggerItemCode.Equals("A00004") Then
                        Dr_Tables = dynamicQueryNotPub("select count(*) from  OPH_Open_Restrict as OOR inner join OPH_pharmacy_base as OPB on OPB.Pharmacy_12_code= OOR.Pharmacy_12_code and OPB.DC='N' where OOR.Chart_no='" + Chart_No + "' and OPB.Order_code='" + Order_Code + "'")
                    Else
                        Dr_Tables = dynamicQueryNotPub("select count(*) from  OPH_Open_Restrict as OOR  where OOR.Chart_no='" + Chart_No + "' and OOR.Pharmarcy_12_Code='" + Order_Code + "'")
                    End If

                    '檢查有沒有資料，如果沒有
                    'rtndata回傳 false 
                    If Dr_Tables.Tables(0).Rows.Count > 0 Then
                        Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                        If count > 0 Then
                            '如果大於零，代表有這個病患被記錄。則回傳 FALSE 使其檢核失敗
                            rtnData = True
                            Return True
                        Else
                            rtnData = False
                            Return True
                        End If


                    Else
                        rtnData = False
                        Return True

                    End If



                    CreateTXTLog("H01_ChkRefillPrescription", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("H01_ChkRefillPrescription", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H01_ChkRefillPrescription", False)
            Return False
        End Try
    End Function
    ''' <summary>
    ''' 限病人等於
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H02_ChkDoubtDrugAddict() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	檢查OPH_Open_Restrict 
        '處理邏輯	如果Operation_code=04（等於）則撈出的資料要有才能pass 、 rtnData= ‘TRUE’
        '          
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim Order_Code As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim

                    '==========
                    Dim _mainIdentityId As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Main_Identity_Id").ToString.Trim
                    Dim _dtOrderRecord As DataTable = pubreapi.Tables("Order_Record")
                    Dim _dtOrderRecordE = _dtOrderRecord.AsEnumerable

                    Dim _pharmacy12CodeL As List(Of String) = _dtOrderRecordE.Where(Function(r) r("Order_Code").ToString.Trim = Order_Code).Select(Function(r) r("Pharmacy_12_Code").ToString.Trim).ToList

                    If _mainIdentityId = "2" AndAlso (Order_Code = "861827" OrElse Order_Code.Contains("THA2IMM01") OrElse _pharmacy12CodeL.Contains("THA2IMM01")) Then
                        rtnData = True
                        Return True
                    End If
                    '==========

                    Dim Dr_Tables As DataSet
                    If TriggerItemCode.Equals("A00004") Then



                        Dim querystr As String = "select count(*) from  OPH_Open_Restrict as OOR inner join OPH_pharmacy_base as OPB on OPB.Pharmacy_12_code= OOR.Pharmacy_12_code where OOR.Chart_no='" + Chart_No + "' and OPB.Order_code='" + Order_Code + "' AND  OOR.ITEM_CODE='H00002' "


                        Dr_Tables = dynamicQueryNotPub(querystr)
                    Else

                        Dim querystr As String = "select count(*) from  OPH_Open_Restrict as OOR  where OOR.Chart_no='" + Chart_No + "' and OOR.Pharmacy_12_Code='" + Order_Code + "' AND  OOR.ITEM_CODE='H00002' "


                        Dr_Tables = dynamicQueryNotPub(querystr)

                    End If


                    '檢查有沒有資料，如果沒有
                    'rtndata回傳 false 
                    If OperatorCode.Trim.Equals("02") Then


                        If Dr_Tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表有這個病患。就回傳 true
                                rtnData = True
                                Return True
                            Else
                                rtnData = False
                                Return True
                            End If


                        Else
                            rtnData = False
                            Return True

                        End If
                    Else


                        If Dr_Tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表有這個病患。就回傳 false
                                '2011/03/31 
                                '不等於剛好相反()
                                '但是因為外面沒有用已經存的operator_code去建
                                '所以<>True--->  =False來設定
                                rtnData = False
                                Return True
                            Else
                                rtnData = True
                                Return True
                            End If


                        Else
                            rtnData = True
                            Return True

                        End If


                    End If

                    CreateTXTLog("H02_ChkDoubtDrugAddict", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("H02_ChkDoubtDrugAddict", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H02_ChkDoubtDrugAddict", False)
            Return False
        End Try
    End Function


    ''' <summary>
    ''' 限病人不等於
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H58_ChkDoubtDrugAddict() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	檢查OPH_Open_Restrict 
        '處理邏輯	如果Operation_code=04（等於）則撈出的資料要有才能pass 、 rtnData= ‘TRUE’
        '          
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim Order_Code As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerItemCode").ToString.Trim



                    Dim Dr_Tables As DataSet
                    If TriggerItemCode.Equals("A00004") Then



                        Dim querystr As String = "select count(*) from  OPH_Open_Restrict as OOR inner join OPH_pharmacy_base as OPB on OPB.Pharmacy_12_code= OOR.Pharmacy_12_code where OOR.Chart_no='" + Chart_No + "' and OPB.Order_code='" + Order_Code + "' AND  OOR.ITEM_CODE='H00058' "


                        Dr_Tables = dynamicQueryNotPub(querystr)
                    Else

                        Dim querystr As String = "select count(*) from  OPH_Open_Restrict as OOR  where OOR.Chart_no='" + Chart_No + "' and OOR.Pharmacy_12_Code='" + Order_Code + "' AND  OOR.ITEM_CODE='H00058' "


                        Dr_Tables = dynamicQueryNotPub(querystr)

                    End If


                    '檢查有沒有資料，如果沒有
                    'rtndata回傳 false 
                    If 1 = 2 Then


                        If Dr_Tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表有這個病患。就回傳 true
                                rtnData = True
                                Return True
                            Else
                                rtnData = False
                                Return True
                            End If


                        Else
                            rtnData = False
                            Return True

                        End If
                    Else


                        If Dr_Tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表有這個病患。就回傳 false
                                '2011/03/31 
                                '不等於剛好相反()
                                '但是因為外面沒有用已經存的operator_code去建
                                '所以<>True--->  =False來設定
                                rtnData = False
                                Return True
                            Else
                                rtnData = True
                                Return True
                            End If


                        Else
                            rtnData = True
                            Return True

                        End If


                    End If

                    CreateTXTLog("H58_ChkDoubtDrugAddict", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("H58_ChkDoubtDrugAddict", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H58_ChkDoubtDrugAddict", False)
            Return False
        End Try
    End Function



    ''' <summary>
    ''' 疑是成癮
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H32_ChkDoubtDrugAddict() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	檢查OPH_Open_Restrict 
        '處理邏輯	如果Operation_code=04（等於）則撈出的資料要沒有才能pass 、 rtnData= ‘FALSE’
        '          
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim Order_Code As String = pubreapi.Tables("PUB_rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("PUB_rule").Rows(0).Item("TriggerItemCode").ToString.Trim

                    Dim Dr_Tables As DataSet

                    If TriggerItemCode.Equals("A00004") Then

                        Dr_Tables = dynamicQueryNotPub("select count(*) from  OPH_Open_Restrict as OOR inner join OPH_pharmacy_base as OPB on OPB.Pharmacy_12_code= OOR.Pharmacy_12_code where OOR.Chart_no='" + Chart_No + "' and OPB.Order_code='" + Order_Code + "'")
                    Else
                        Dr_Tables = dynamicQueryNotPub("select count(*) from  OPH_Open_Restrict as OOR  where OOR.Chart_no='" + Chart_No + "' and OOR.Pharmacy_12_Code='" + Order_Code + "'")
                    End If



                    '檢查有沒有資料，如果沒有
                    'rtndata回傳 false 
                    If Dr_Tables.Tables(0).Rows.Count > 0 Then
                        Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                        If count > 0 Then
                            '如果大於零，代表病患有疑似成癮。就回傳 false
                            '使其不符合value_data
                            rtnData = False
                            Return True
                        Else
                            rtnData = True
                            Return True
                        End If


                    Else
                        rtnData = True
                        Return True

                    End If



                    CreateTXTLog("H32_ChkDoubtDrugAddict", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("H32_ChkDoubtDrugAddict", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H32_ChkDoubtDrugAddict", False)
            Return False
        End Try
    End Function





    ''' <summary>
    ''' 過敏查詢
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H55_ChkPatAllergy() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	檢查OPH_Open_Restrict 
        '處理邏輯	如果Operation_code=04（等於）則撈出的資料要沒有才能pass 、 rtnData= ‘FALSE’
        '          
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Pharmacy_12_Code")
                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim





                    Dim order_code As String = "'1'"

                    For Each kk As DataRow In pubreapi.Tables("Order_Record").Rows
                        'order_code = order_code + ",'" + kk.Item("Pharmacy_12_Code").ToString + "','" + kk.Item("Order_Code").ToString + "'"
                        If kk.Item("Pharmacy_12_Code").ToString.Trim.Length > 0 Then
                            order_code = order_code + ",'" + kk.Item("Pharmacy_12_Code").ToString.Trim + "'"
                        End If
                        If kk.Item("Order_Code").ToString.Trim.Length > 0 Then
                            order_code = order_code + ",'" + kk.Item("Order_Code").ToString.Trim + "'"
                        End If
                    Next
                    Dim return_st As New DataSet

                    Dim t1 As DataTable = Syscom.Comm.TableFactory.OphInteractionDataTableFactory.getDataTable
                    return_st.Tables.Add(New DataTable)
                    For i = 0 To t1.Columns.Count - 1
                        return_st.Tables(0).Columns.Add(t1.Columns(i).ColumnName)
                    Next







                    Dim Dr_Tables As DataSet = dynamicQueryNotPub("select isnull(OPB.Pharmacy_12_Code,PPA.Pharmacy_12_code) as Pharmacy_12_Code,  isnull(OPB.Pharmacy_Name,PPA.Pharmacy_12_code+'此料號') +'有過敏記錄，不允許開立!!',PPA.limit_Strength from PUB_Patient_Allergy as PPA   inner join OPH_Pharmacy_Base as OPB on (OPB.Pharmacy_12_Code = PPA.Pharmacy_12_code or OPB.Order_Code = PPA.Allergy_Code or OPB.Pharmacy_12_Code = PPA.Allergy_Code or OPB.Order_Code = PPA.Pharmacy_12_Code) where PPA.Cancel='N'AND  PPA.Chart_No='" + Chart_No + "' and  (PPA.Allergy_Code in (" & order_code & ") or  PPA.Pharmacy_12_code in (" & order_code & ") )")




                    '檢查有沒有資料，如果沒有
                    'rtndata回傳 false 
                    If Dr_Tables.Tables(0).Rows.Count > 0 Then
                        For Each DataRow As DataRow In Dr_Tables.Tables(0).Rows
                            Dim r1 As DataRow = return_st.Tables(0).NewRow
                            r1.Item("Pharmacy_12_CodeA") = DataRow.Item("Pharmacy_12_Code").ToString
                            r1.Item("Pharmacy_12_CodeB") = DataRow.Item("Pharmacy_12_Code").ToString
                            r1.Item("Restriction_Id") = DataRow.Item("limit_Strength").ToString
                            r1.Item("Is_Online_Remind") = ""
                            r1.Item("Remind_Words") = DataRow.Item(1).ToString
                            r1.Item("Effect") = DataRow.Item(1).ToString

                            return_st.Tables(0).Rows.Add(r1)
                        Next




                        Dim count As Integer = Dr_Tables.Tables(0).Rows.Count
                        If count > 0 Then
                            '如果大於零，代表病患有過敏。就回傳 false
                            '使其不符合value_data
                            rtnData = False
                            rtnDS = return_st
                            Return True
                        Else
                            rtnData = True
                            Return True
                        End If


                    Else
                        rtnData = True
                        Return True

                    End If



                    CreateTXTLog("H55_ChkPatAllergy", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("H55_ChkPatAllergy", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H55_ChkPatAllergy", False)
            Return False
        End Try
    End Function
    ''' <summary>
    ''' 管一的
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H58_ChkDoubtDrugNo1() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	檢查OPH_Open_Restrict 
        '處理邏輯	如果Operation_code=04（等於）則撈出的資料要有才能pass 、 rtnData= ‘TRUE’
        '          
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueUnit")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim Order_Code As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim ValueUnit As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueUnit").ToString.Trim
                    Dim ValueDataStr As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("ValueData").ToString.Trim
                    Dim TrigeerItemCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("TriggerValueData").ToString.Trim

                    Dim Dr_Tables As DataSet
                    If TrigeerItemCode.Equals("A00004") Then
                        Dr_Tables = dynamicQueryNotPub("select count(*) from  OPH_Open_Restrict as OOR inner join OPH_pharmacy_base as OPB on OPB.Pharmacy_12_code= OOR.Pharmacy_12_code where OOR.Chart_no='" + Chart_No + "' and OPB.Order_code='" + Order_Code + "' AND OOR.Item_Code='H00058' ")
                    Else
                        Dr_Tables = dynamicQueryNotPub("select count(*) from  OPH_Open_Restrict as OOR  where OOR.Chart_no='" + Chart_No + "' and OOR.Pharmacy_12_Code='" + Order_Code + "' AND OOR.Item_Code='H00058' ")
                    End If




                    '檢查有沒有資料，如果沒有
                    'rtndata回傳 false 
                    If OperatorCode.Trim.Equals("02") Then


                        If Dr_Tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表有這個病患。就回傳 true
                                rtnData = True
                                Return True
                            Else
                                rtnData = False
                                Return True
                            End If


                        Else
                            rtnData = False
                            Return True

                        End If
                    Else
                        ' 不等於剛好相反

                        If Dr_Tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表有這個病患。就回傳 false
                                '2011/03/31 
                                '不等於剛好相反()
                                '但是因為外面沒有用已經存的operator_code去建
                                '所以<>True--->  =False來設定
                                '目前因為沒有去修改
                                '所以配合我自己去改-.-
                                rtnData = False
                                Return True
                            Else
                                rtnData = True
                                Return True
                            End If


                        Else
                            rtnData = True
                            Return True

                        End If


                    End If

                    CreateTXTLog("H58_ChkDoubtDrugNo1", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("H58_ChkDoubtDrugNo1", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H58_ChkDoubtDrugNo1", False)
            Return False
        End Try
    End Function


    ''' <summary>
    ''' 管二的
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Function H59_ChkDoubtDrugNo2() As Boolean
        '-----------------------------------------------------------------------
        '參數說明	檢查OPH_Open_Restrict 
        '處理邏輯	如果Operation_code=04（等於）則撈出的資料要有才能pass 、 rtnData= ‘TRUE’
        '          
        '        回傳值(True) : 無任何執行錯誤, false則為更新錯誤
        '-----------------------------------------------------------------------
        Try
            cleanReturnInfo()

            Dim DataTableName() As String = {"Medical_Record", "PUB_Rule"}
            If isContainsDataTable(DataTableName) Then

                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "OperatorCode")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerValueData")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "ValueData")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_End_Date")
                AddTableAndColumnInto(CheckTable, "PUB_Rule", "TriggerItemCode")
                If checkAllContainColumnIn(CheckTable) Then

                    Dim Chart_No As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.Trim
                    Dim TriggerOrder_Code As String = pubreapi.Tables("Order_Record").Rows(0).Item("TriggerValueData").ToString.Trim
                    Dim OperatorCode As String = pubreapi.Tables("PUB_Rule").Rows(0).Item("OperatorCode").ToString.Trim
                    Dim TriggerItemCode As String = pubreapi.Tables("Order_Record").Rows(0).Item("TriggerItemCode").ToString.Trim




                    Dim Valuedate As String = ""
                    Dim temprow As DataRow() = pubreapi.Tables("Order_Record").Select("Order_code='" & TriggerOrder_Code & "'")
                    If temprow.Length > 0 Then
                        Valuedate = temprow(0).Item("Order_End_Date")
                    Else
                        Valuedate = pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date").ToString.Trim

                    End If


                    Dim Dr_Tables As DataSet
                    If TriggerItemCode.Equals("A00004") Then
                        Dr_Tables = dynamicQueryNotPub("select count(*) from  OPH_Open_Restrict as OOR inner join OPH_pharmacy_base as OPB on OPB.Pharmacy_12_code= OOR.Pharmacy_12_code where OOR.Chart_no='" + Chart_No + "' and OPB.Order_code='" + TriggerOrder_Code + "' and  OOR.Assume_Effect_date>='" & Valuedate & "' AND OOR.ITEM_CODE='H00059'")

                    Else

                        Dr_Tables = dynamicQueryNotPub("select count(*) from  OPH_Open_Restrict as OOR  where OOR.Chart_no='" + Chart_No + "' and OOR.Pharmacy_12_code='" + TriggerOrder_Code + "' and  OOR.Assume_Effect_date>='" & Valuedate & "' AND OOR.ITEM_CODE='H00059'")
                    End If




                    '檢查有沒有資料，如果沒有
                    'rtndata回傳 false 
                    If OperatorCode.Trim.Equals("02") Then


                        If Dr_Tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表有這個病患。就回傳 true
                                rtnData = True
                                Return True
                            Else
                                rtnData = False
                                Return True
                            End If


                        Else
                            rtnData = False
                            Return True

                        End If
                    Else
                        ' 不等於剛好相反
                        '2011/03/31 
                        '不等於剛好相反()
                        '但是因為外面沒有用已經存的operator_code去建
                        '所以<>True--->  =False來設定
                        '原因是因為外面直接用=去建…只好這樣做-.-
                        If Dr_Tables.Tables(0).Rows.Count > 0 Then
                            Dim count As Integer = CInt(Dr_Tables.Tables(0).Rows(0).Item(0).ToString)
                            If count > 0 Then
                                '如果大於零，代表有這個病患。就回傳 false
                                rtnData = False
                                Return True
                            Else
                                rtnData = True
                                Return True
                            End If


                        Else
                            rtnData = True
                            Return True

                        End If


                    End If

                    CreateTXTLog("H59_ChkDoubtDrugNo2()", True)
                    Return True
                End If
            End If

            rtnData = False
            CreateTXTLog("H59_ChkDoubtDrugNo2", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("H59_ChkDoubtDrugNo2", False)
            Return False
        End Try
    End Function


#End Region
#End Region

#Region "Rule Engine API Added by Rudolf"

#Region "E20, E21, E22"
    ''' <summary>
    ''' 1.75 E20_ChkHOCA1Case() (居家A1登錄個案檢核)
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Rudolf</author>
    ''' <remarks></remarks>
    Public Function E20_ChkHOCA1Case() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT COUNT(Chart_No) AS Cnt " & vbCrLf)
                    var1.AppendFormat("FROM   HOC_Patient HP " & vbCrLf)
                    var1.AppendFormat("INNER JOIN HOC_Pt_Apply HPA on HP.Hoc_Sn = HPA.Hoc_Sn " & vbCrLf)
                    var1.AppendFormat("WHERE HP.Case_Type_Id = 'A1' " & vbCrLf)
                    var1.AppendFormat("       AND  HP.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND ( '{0}' BETWEEN HPA.Nhi_Start_Date AND HPA.Nhi_End_Date ) " & vbCrLf, _orderDate)

                    clearCommandString()
                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    If _dtResult.Rows.Count = 0 OrElse _dtResult.Rows(0)("Cnt") = 0 Then
                        rtnData = False
                    Else
                        rtnData = True
                    End If

                    CreateTXTLog("E20_ChkHOCA1Case", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("E20_ChkHOCA1Case", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("E20_ChkHOCA1Case", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.76 E21_ChkHOCA2Case() (居家A2登錄個案檢核)
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Rudolf</author>
    ''' <remarks></remarks>
    Public Function E21_ChkHOCA2Case() As Boolean
        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty

        Try
            Dim DataTableName() As String = {"Medical_Record"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _orderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _chartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd

                    Dim var1 As New System.Text.StringBuilder
                    var1.AppendFormat("SELECT COUNT(Chart_No) AS Cnt " & vbCrLf)
                    var1.AppendFormat("FROM   HOC_Patient HP " & vbCrLf)
                    var1.AppendFormat("INNER JOIN HOC_Pt_Apply HPA on HP.Hoc_Sn = HPA.Hoc_Sn " & vbCrLf)
                    var1.AppendFormat("WHERE HP.Case_Type_Id = 'A2H' " & vbCrLf)
                    var1.AppendFormat("       AND  HP.Chart_No = '{0}' " & vbCrLf, _chartNo)
                    var1.AppendFormat("       AND ( '{0}' BETWEEN HPA.Nhi_Start_Date AND HPA.Nhi_End_Date ) " & vbCrLf, _orderDate)

                    clearCommandString()
                    CommandStr = var1
                    Dim resultDS As DataSet = dynamicQuery(CommandStr.ToString)
                    Dim _dtResult As DataTable = resultDS.Tables(0)

                    If _dtResult.Rows.Count = 0 OrElse _dtResult.Rows(0)("Cnt") = 0 Then
                        rtnData = False
                    Else
                        rtnData = True
                    End If

                    CreateTXTLog("E21_ChkHOCA2Case", True)
                    Return True
                End If
            End If
            '======================================
            rtnData = False
            CreateTXTLog("E21_ChkHOCA2Case", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("E21_ChkHOCA2Case", False)
            Return False
        End Try
    End Function

    ''' <summary>
    ''' 1.77 E22_ChkHOCOrderTypeGNum() (當次居家衛材醫令合計數量檢核)
    ''' </summary>
    ''' <returns></returns>
    ''' <author>Rudolf</author>
    ''' <remarks></remarks>
    Public Function E22_ChkHOCOrderTypeGNum() As Boolean
        '1.	依據當次醫令集合中符合居家衛材醫令中的總量 (Tqty) 加總(=TotalAmt，找不到符合醫令為0) 。
        'rtnData = TotalAmt，
        'rtnDataUnit=’’。

        cleanReturnInfo()

        Dim TotalAmt As Integer = 0
        Dim SpecialTypeG() As String = {"C02514164", "C02514180", _
                                        "C09133700", "C09133750", "C09133803", "C09116567", "C09116575", "C09116583", "C09113011", "C09113003", _
                                        "C00123143", "C00123169", "C00123185", "C00123204", "C00123220", "C00123246"}

        Dim DataTableName() As String = {"Order_Record"}
        If isContainsDataTable(DataTableName) Then
            Dim CheckTable As DataTable = getCheckTable()
            AddTableAndColumnInto(CheckTable, "Order_Record", "Order_Code")

            If checkAllContainColumnIn(CheckTable) Then

                Dim Order_CodeSet As New Hashtable
                For i As Integer = 0 To (pubreapi.Tables("Order_Record").Rows.Count - 1)
                    'Order_CodeSet(i) = CType(pubreapi.Tables("Order_Record").Rows(0).Item("Order_Code"), String).Trim
                    Dim key As String = CType(pubreapi.Tables("Order_Record").Rows(i).Item("Order_Code"), String).Trim
                    If Not Order_CodeSet.ContainsKey(key) Then
                        Order_CodeSet.Add(key, key)
                    End If
                Next

                For i As Integer = 0 To SpecialTypeG.Count - 1
                    If Order_CodeSet.ContainsKey(SpecialTypeG(i)) Then
                        TotalAmt = TotalAmt + 1
                    End If
                Next

                rtnData = TotalAmt

                CreateTXTLog("E22_ChkHOCOrderTypeGNum", True)

                Return True
            Else

            End If
        End If

        rtnData = ""

        CreateTXTLog("E22_ChkHOCOrderTypeGNum", False)

        Return False
    End Function

#End Region

#End Region

#Region "###################### 2012/06/04 IHDCheckDclrDiagnoseIrregular檢核申報診斷資料異常#################"


    Public Function K19_ChkInpatinetDisease() As Boolean

        cleanReturnInfo()

        Me.rtnDataUnit = String.Empty
        Try
            Dim DataTableName() As String = {"Medical_Record", "Patient", "Diagnosis"}
            If isContainsDataTable(DataTableName) Then
                Dim CheckTable As DataTable = getCheckTable()
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Chart_No")
                AddTableAndColumnInto(CheckTable, "Medical_Record", "Order_Date")
                AddTableAndColumnInto(CheckTable, "Patient", "Age_Year")
                AddTableAndColumnInto(CheckTable, "Patient", "Age_Month")
                AddTableAndColumnInto(CheckTable, "Patient", "Age_Day")
                AddTableAndColumnInto(CheckTable, "Patient", "Age_YMD")
                AddTableAndColumnInto(CheckTable, "Patient", "Sex_Id")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Code")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Icd_Sort_Value")
                AddTableAndColumnInto(CheckTable, "Diagnosis", "Diagnosis_Type_Id")

                If checkAllContainColumnIn(CheckTable) Then
                    Dim _MyChartNo As String = pubreapi.Tables("Medical_Record").Rows(0).Item("Chart_No").ToString.TrimEnd
                    Dim _MyOrderDate As String = CDate(pubreapi.Tables("Medical_Record").Rows(0).Item("Order_Date")).ToShortDateString
                    Dim _MyAgeYMD As String = pubreapi.Tables("Patient").Rows(0).Item("Age_YMD").ToString.TrimEnd
                    Dim _MySexId As String = pubreapi.Tables("Patient").Rows(0).Item("Sex_Id").ToString.TrimEnd
                    Dim _MyAgeYear As Integer = pubreapi.Tables("Patient").Rows(0).Item("Age_Year")
                    Dim _MyAgeMonth As Integer = pubreapi.Tables("Patient").Rows(0).Item("Age_Month")
                    Dim _MyAgeDay As Integer = pubreapi.Tables("Patient").Rows(0).Item("Age_Day")

                    Dim _MyDiagnoseCount As Integer = 0
                    _MyDiagnoseCount = pubreapi.Tables("Diagnosis").Rows.Count

                    If _MyDiagnoseCount = 0 Then
                        rtnData = False
                        CreateTXTLog("K19_ChkInpatinetDisease", True)
                        Return True
                    End If

                    Dim _MyDiagnoseList As IDictionary = New Dictionary(Of String, String)
                    For Each _DiagnoseRow As DataRow In pubreapi.Tables("Diagnosis").Rows
                        Dim _MyDiagnosisTypeId As String = _DiagnoseRow("Diagnosis_Type_Id").ToString.Trim
                        Dim _MyIcdCode As String = _DiagnoseRow("Icd_Code").ToString.Trim

                        If Not _MyDiagnoseList.Contains(_MyDiagnosisTypeId) Then
                            _MyDiagnoseList.Add(_MyDiagnosisTypeId, "'" & _MyIcdCode & "'")
                        Else
                            _MyDiagnoseList(_MyDiagnosisTypeId) = _MyDiagnoseList(_MyDiagnosisTypeId) & ",'" & _MyIcdCode & "'"
                        End If
                    Next

                    '1.出院般診斷 2.手術診斷 3.意外診斷 4.腫瘤診斷
                    If _MyDiagnoseList.Count = 0 Then
                        rtnData = False
                        CreateTXTLog("K19_ChkInpatinetDisease", True)
                        Return True
                    End If

                    Dim CmdStr As String = ""
                    Dim _TableNameList As New List(Of String) '(_MyDiagnoseList.Count - 1) As String
                    Dim _TablesIndex As Integer = 0
                    For Each _MyDiagnosisTypeId As String In _MyDiagnoseList.Keys
                        '年齡
                        CmdStr += QueryPUBDiseaseStr(0, _MyOrderDate, _MyDiagnoseList(_MyDiagnosisTypeId), _MyDiagnosisTypeId, _MyAgeYear, _MyAgeMonth, _MyAgeDay, "", "Age_" & _MyDiagnosisTypeId)
                        CmdStr += ";"
                        _TableNameList.Add("Age_" & _MyDiagnosisTypeId & "_" & _TablesIndex.ToString)
                        '_TablesIndex += 1
                        '性別
                        CmdStr += QueryPUBDiseaseStr(0, _MyOrderDate, _MyDiagnoseList(_MyDiagnosisTypeId), _MyDiagnosisTypeId, _MyAgeYear, _MyAgeMonth, _MyAgeDay, _MySexId, "SexId_" & _MyDiagnosisTypeId)
                        CmdStr += ";"
                        _TableNameList.Add("SexId_" & _MyDiagnosisTypeId & "_" & _TablesIndex.ToString)
                        _TablesIndex += 1
                    Next

                    Dim _rtnDs As New DataSet
                    Dim _rtnDt As New DataTable
                    _rtnDt.TableName = "rtnTable"
                    _rtnDt.Columns.Add("rtnValueData", GetType(String))

                    Dim _TableNames(_TableNameList.Count - 1) As String
                    For index As Integer = 0 To _TableNameList.Count - 1
                        _TableNames(index) = _TableNameList(index)
                    Next

                    Using _MyDs As DataSet = MuiltyTableSelect(CmdStr, _TableNames)
                        If DataSetUtil.IsContainsData(_MyDs) Then
                            For Each _MyTable As DataTable In _MyDs.Tables

                                Dim _rtnValueData As String = ""
                                Dim _MyTableNameTemp() As String = _MyTable.TableName.Split("_")

                                Select Case _MyTableNameTemp(1)

                                    Case "1"
                                        _rtnValueData = "出院一般診斷 "
                                    Case "2"
                                        _rtnValueData = "手術診斷 "
                                    Case "3"
                                        _rtnValueData = "意外診斷 "
                                    Case "4"
                                        _rtnValueData = "腫瘤診斷 "
                                End Select

                                For i As Integer = 0 To _MyTable.Rows.Count - 1
                                    If i > 0 Then _rtnValueData += ","
                                    _rtnValueData += _MyTable.Rows(i).Item("Icd_Code").ToString.Trim
                                Next

                                Select Case _MyTableNameTemp(0)

                                    Case "Age"
                                        _rtnValueData += " --不符合病患年齡之診斷"

                                    Case "SexId"
                                        _rtnValueData += " --不符合病患性別之診斷"
                                End Select

                                Dim MyRtnNewRow As DataRow = _rtnDt.NewRow
                                MyRtnNewRow("rtnValueData") = _rtnValueData
                                _rtnDt.Rows.Add(MyRtnNewRow)

                            Next
                        Else
                            rtnData = False
                            CreateTXTLog("K19_ChkInpatinetDisease", True)
                            Return True
                        End If
                    End Using

                    _rtnDs.Tables.Add(_rtnDt)
                    Me.rtnDS = _rtnDs

                End If

            End If

            rtnData = False
            CreateTXTLog("K19_ChkInpatinetDisease", True)
            Return True
        Catch ex As Exception
            log.dbErrorMsg(ex.StackTrace, ex)
            rtnData = False
            CreateTXTLog("K19_ChkInpatinetDisease", False)
            Return False
        End Try

    End Function

    ''' <summary>
    ''' 程式說明：組合查詢PUB_Disease的SQL語法(By Age or Sexid)
    ''' 開發人員：Charles
    ''' 開發日期：2012/06/04
    ''' </summary>
    ''' <param name="_AgeOrSexid_Flag">0：Cond By Age，1:Cond By Sexid</param>
    ''' <param name="_OrderDate">就醫日</param>
    ''' <param name="_IcdCode">診斷碼</param>
    ''' <param name="_DiseaseTypeId">診斷類型</param>
    ''' <param name="_AgeYear">總年數</param>
    ''' <param name="_AgeMonth">總月數</param>
    ''' <param name="_AgeDay">總日數</param>
    ''' <param name="_SexId">性別</param>
    ''' <param name="_TableName">資料表名稱</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function QueryPUBDiseaseStr(ByVal _AgeOrSexid_Flag As Integer, ByVal _OrderDate As String, ByVal _IcdCode As String, ByVal _DiseaseTypeId As String, ByVal _AgeYear As Integer, ByVal _AgeMonth As Integer, ByVal _AgeDay As Integer, ByVal _SexId As String, ByVal _TableName As String) As String
        Dim RtnStr As String = ""
        Try
            Dim CmdStr As New StringBuilder

            CmdStr.Append(" ").AppendFormat("Select   Icd_Code  " & vbCrLf)
            CmdStr.Append(" ").AppendFormat("from PUB_Disease as " & _TableName & vbCrLf)
            CmdStr.Append(" ").AppendFormat(" where  '{0}' between Effect_Date and End_Date " & vbCrLf, _OrderDate)
            CmdStr.Append(" ").AppendFormat(" and  Icd_Code  in ({0})" & vbCrLf, _IcdCode)
            CmdStr.Append(" ").AppendFormat(" and  Disease_Type_Id = '{0}' " & vbCrLf, _DiseaseTypeId)

            Select Case _AgeOrSexid_Flag

                Case 1

                    CmdStr.Append(" ").AppendFormat("and  ISNULL(Limit_Age,'') > ''  " & vbCrLf)
                    CmdStr.Append(" ").AppendFormat("and ( " & vbCrLf)
                    CmdStr.Append(" ").AppendFormat("  CASE " & vbCrLf)
                    CmdStr.Append(" ").AppendFormat("    WHEN {0} Between Age_Start_Year AND Age_End_Year THEN 1" & vbCrLf, _AgeYear)
                    CmdStr.Append(" ").AppendFormat("    WHEN {0} Between Age_Start_Month AND Age_End_Month THEN 1 " & vbCrLf, _AgeMonth)
                    CmdStr.Append(" ").AppendFormat("    WHEN {0} Between Age_Start_Day AND Age_End_Day THEN 1 " & vbCrLf, _AgeDay)
                    CmdStr.Append(" ").AppendFormat("    ELSE 0 " & vbCrLf)
                    CmdStr.Append(" ").AppendFormat("  End " & vbCrLf)
                    CmdStr.Append(" ").AppendFormat("    	) = 1 " & vbCrLf)
                Case 2
                    CmdStr.Append(" ").AppendFormat("and ISNULL(Limit_Sex_Id,'') > ''  " & vbCrLf)
                    CmdStr.Append(" ").AppendFormat("and  Limit_Sex_Id <> {0} " & vbCrLf, _SexId)

            End Select


            RtnStr = CmdStr.ToString
        Catch ex As Exception
            Throw ex
        End Try
        Return RtnStr
    End Function



#End Region

    ''' <summary>
    ''' 取得SQL連線資訊
    ''' </summary>
    ''' <returns>sql connection</returns>
    ''' <author>Ken</author>
    ''' <date>2009-07-08</date>
    ''' <remarks></remarks>
    Private Function GetSqlConnection() As SqlConnection

        Return SQLConnFactory.getInstance.getPubDBSqlConn
    End Function

    ''' <summary>
    ''' 取得SQL連線資訊
    ''' </summary>
    ''' <returns>sql connection</returns>
    ''' <author>Ken</author>
    ''' <date>2009-07-08</date>
    ''' <remarks></remarks>
    Private Function GetNotPubSqlConnection() As SqlConnection

        Return SQLConnFactory.getInstance.getOpdDBSqlConn
    End Function

    ''' <summary>
    ''' 取得PCS連線
    ''' </summary>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function GetPcsSqlConnection() As SqlConnection

        Return SQLConnFactory.getInstance.getPcsDBSqlConn
    End Function

    ''' <summary>
    ''' 計算藥品總量
    ''' </summary>
    ''' <param name="orderCode">Order Code</param>
    ''' <param name="dosage">劑量</param>
    ''' <param name="dosageUnit">劑量單位</param>
    ''' <param name="frequency">頻率</param>
    ''' <param name="days">天數</param>
    ''' <returns>
    ''' Correct: 執行結果 (True or False)
    ''' Tqty: 總量
    ''' Tqty_Unit: 總量單位
    ''' ErrorMessage: 錯誤訊息
    ''' </returns>
    ''' <date>2009-07-23</date>
    ''' <tables>
    ''' OPH_Pharmacy_Base
    ''' OPH_Pharmacy_Frequency
    ''' </tables>
    ''' <remarks></remarks>
    Public Function CalculateTqty(ByVal orderCode As String, _
                                  ByVal dosage As Decimal, _
                                  ByVal dosageUnit As String, _
                                  ByVal frequency As String, _
                                  ByVal days As Decimal, _
                                  Optional ByVal BeginDate As String = "", _
                                  Optional ByVal EndDate As String = "") As DataSet

        Dim _returnDt As New DataTable
        _returnDt.TableName = "ReturnValue"
        _returnDt.Columns.Add("Correct", GetType(Boolean))
        _returnDt.Columns.Add("Tqty", GetType(Decimal))
        _returnDt.Columns.Add("Tqty_Unit", GetType(String))
        _returnDt.Columns.Add("ErrorMessage", GetType(String))
        Dim _returnDs As New DataSet
        _returnDs.Tables.Add(_returnDt)
        '=================================================================================

        Dim var0 As New System.Text.StringBuilder
        var0.Append("SELECT RTRIM(Pharmacy_12_Code) AS Pharmacy_12_Code, " & vbCrLf)
        var0.Append("       RTRIM(Order_Code)       AS Order_Code, " & vbCrLf)
        var0.Append("       RTRIM(Charge_Unit)      AS Charge_Unit, " & vbCrLf)
        var0.Append("       RTRIM(Is_Total_Qty)     AS Is_Total_Qty, " & vbCrLf)
        var0.Append("       ISNULL(Package_Qty, 0)  AS Package_Qty " & vbCrLf)
        var0.Append("FROM   OPH_Pharmacy_Base " & vbCrLf)
        var0.AppendFormat("WHERE  Order_Code = '{0}' " & vbCrLf, orderCode.Replace("'", "''"))
        var0.Append("       AND Dc <> 'Y' " & vbCrLf)
        '=================================================================================

        Dim var1 As New System.Text.StringBuilder
        var1.Append("DECLARE  @Order_Code NVARCHAR(20) " & vbCrLf)
        var1.Append("DECLARE  @Dosage_Unit NVARCHAR(8) " & vbCrLf)
        var1.Append("DECLARE  @Frequency NVARCHAR(10) " & vbCrLf)

        var1.AppendFormat("SET @Order_Code = '{0}' " & vbCrLf, orderCode.Replace("'", "''"))
        var1.AppendFormat("SET @Dosage_Unit = '{0}' " & vbCrLf, dosageUnit.Replace("'", "''"))
        var1.AppendFormat("SET @Frequency = '{0}' " & vbCrLf, frequency.Replace("'", "''"))

        var1.Append("SELECT @Order_Code                                             AS Order_Code, " & vbCrLf)
        var1.Append("       Charge_Unit, " & vbCrLf)
        var1.Append("       (SELECT TOP ( 1 ) ( CASE " & vbCrLf)
        var1.Append("                             WHEN @Dosage_Unit = Transfer_Factor_Unit1 THEN Transfer_Factor1 " & vbCrLf)
        var1.Append("                             WHEN @Dosage_Unit = Transfer_Factor_Unit2 THEN transfer_factor2 " & vbCrLf)
        var1.Append("                             WHEN @Dosage_Unit = Transfer_Factor_Unit3 THEN Transfer_Factor3 " & vbCrLf)
        var1.Append("                             WHEN @Dosage_Unit = Transfer_Factor_Unit4 THEN Transfer_Factor4 " & vbCrLf)
        var1.Append("                             WHEN @Dosage_Unit = Transfer_Factor_Unit5 THEN Transfer_Factor5 " & vbCrLf)
        var1.Append("                           END )) AS Transfer_Factor_Dosage, " & vbCrLf)
        var1.Append("       (SELECT TOP ( 1 ) ( CASE " & vbCrLf)
        var1.Append("                             WHEN Charge_Unit = Transfer_Factor_Unit1 THEN Transfer_Factor1 " & vbCrLf)
        var1.Append("                             WHEN Charge_Unit = Transfer_Factor_Unit2 THEN transfer_factor2 " & vbCrLf)
        var1.Append("                             WHEN Charge_Unit = Transfer_Factor_Unit3 THEN Transfer_Factor3 " & vbCrLf)
        var1.Append("                             WHEN Charge_Unit = Transfer_Factor_Unit4 THEN Transfer_Factor4 " & vbCrLf)
        var1.Append("                             WHEN Charge_Unit = Transfer_Factor_Unit5 THEN Transfer_Factor5 " & vbCrLf)
        var1.Append("                             ELSE NULL " & vbCrLf)
        var1.Append("                           END ))                              AS Transfer_Factor_Charge, " & vbCrLf)
        var1.Append("       OPH_Pharmacy_Frequency.Cycle_By_Day, " & vbCrLf)
        var1.Append("       OPH_Pharmacy_Frequency_Take.Times, " & vbCrLf)
        var1.Append("       OPH_Pharmacy_Base.Package_Qty, " & vbCrLf)
        var1.Append("       RTRIM(OPH_Pharmacy_Base.Is_Dosage_Accumulation)         AS Is_Dosage_Accumulation, " & vbCrLf)
        var1.Append("       RTRIM(ISNULL(OPH_Pharmacy_Frequency.Week_Id_Group, '')) AS Week_Id_Group, " & vbCrLf)
        var1.Append("       RTRIM(ISNULL(OPH_Pharmacy_Base.Accumulation_Id, ''))    AS Accumulation_Id " & vbCrLf)
        var1.Append("FROM   OPH_Pharmacy_Base " & vbCrLf)
        var1.Append("       INNER JOIN OPH_Pharmacy_Frequency " & vbCrLf)
        var1.Append("         ON OPH_Pharmacy_Base.Order_Code = @Order_Code " & vbCrLf)
        var1.Append("            AND OPH_Pharmacy_Base.Dc <> 'Y' " & vbCrLf)
        var1.Append("            AND @Frequency = OPH_Pharmacy_Frequency.Frequency_Code " & vbCrLf)
        var1.Append("       INNER JOIN OPH_Pharmacy_Frequency_Take " & vbCrLf)
        var1.Append("         ON OPH_Pharmacy_Frequency.Frequency_Code = OPH_Pharmacy_Frequency_Take.Frequency_Code " & vbCrLf)
        var1.Append("WHERE  OPH_Pharmacy_Base.Charge_Unit IS NOT NULL " & vbCrLf)
        var1.Append("       AND Times = (SELECT MAX(Times) " & vbCrLf)
        var1.Append("                    FROM   OPH_Pharmacy_Frequency_Take " & vbCrLf)
        var1.Append("                    WHERE  OPH_Pharmacy_Frequency_Take.Frequency_Code = OPH_Pharmacy_Frequency.Frequency_Code) " & vbCrLf)
        '=================================================================================
        '化療要算累計量料號
        Dim var2 As New System.Text.StringBuilder
        var2.Append("SELECT RTRIM(ISNULL(Config_Value, '')) AS Config_Value " & vbCrLf)
        var2.Append("FROM   PUB_Config " & vbCrLf)
        var2.Append("WHERE  Config_Name = 'PHY_Chemo_Accum' " & vbCrLf)
        '=================================================================================

        Dim _ds0 As New DataSet
        Dim _ds As New DataSet
        Dim _ds2 As New DataSet

        _ds0 = dynamicQueryNotPub(var0.ToString)
        _ds = dynamicQueryNotPub(var1.ToString)
        _ds2 = dynamicQuery(var2.ToString)

        'Try
        '    Using _sqlConnection As SqlConnection = GetSqlConnection()
        '        Dim _command0 As New SqlCommand(var0.ToString, _sqlConnection)
        '        _command0.CommandType = CommandType.Text
        '        _command0.Parameters.AddWithValue("@Order_Code", orderCode)
        '        Dim _dataAdapter0 As SqlDataAdapter = New SqlDataAdapter(_command0)
        '        _dataAdapter0.Fill(_ds0, "Package_Qty")

        '        Dim _dataAdapter As SqlDataAdapter = New SqlDataAdapter(var1.ToString, _sqlConnection)
        '        _dataAdapter.Fill(_ds, "Parameters")

        '        Dim _dataAdapter2 As SqlDataAdapter = New SqlDataAdapter(var2.ToString, _sqlConnection)
        '        _dataAdapter2.Fill(_ds2, "PHY_Chemo_Accum")
        '    End Using
        'Catch ex As Exception
        '    Throw ex
        'End Try

        Dim _dt0 As DataTable = _ds0.Tables(0)
        Dim _dt As DataTable = _ds.Tables(0)
        Dim _dt2 As DataTable = _ds2.Tables(0)

        '========== 有錯誤的狀態 ===================================================
        If _dt0.Rows.Count = 0 OrElse _dt.Rows.Count = 0 Then
            Dim _returnDr As DataRow = _returnDt.NewRow
            'If _dt0.Rows.Count > 0 AndAlso _dt0.Rows(0)("Package_Qty") <> 0 Then

            '    _returnDr.Item("Correct") = False
            '    _returnDr.Item("ErrorMessage") = "計算失敗, 使用Package_Qty的值"
            '    _returnDr.Item("Tqty") = _dt0.Rows(0)("Package_Qty")
            '    _returnDr.Item("Tqty_Unit") = String.Empty
            'Else
            '    _returnDr.Item("Correct") = False
            '    _returnDr.Item("ErrorMessage") = "計算失敗,丟回1"
            '    _returnDr.Item("Tqty") = 1
            '    _returnDr.Item("Tqty_Unit") = String.Empty
            'End If
            _returnDr.Item("Correct") = False
            _returnDr.Item("ErrorMessage") = "計算失敗,丟回1"
            _returnDr.Item("Tqty") = 1
            _returnDr.Item("Tqty_Unit") = String.Empty
            _returnDt.Rows.Add(_returnDr)
            Return _returnDs
        End If
        '============================================================================

        Dim _dr0 As DataRow = _dt0.Rows(0)
        Dim _dr As DataRow = _dt.Rows(0)

        Dim _chargeUnit As String = _dr0("Charge_Unit").ToString
        Dim _isTotalQty As Boolean = IIf(_dr0("Is_Total_Qty").ToString = "Y", True, False)
        Dim _packageQty As Decimal = _dr0("Package_Qty")

        Dim _transferFactorDosage As Decimal = 0
        Dim _transferFactorCharge As Decimal = 0
        Dim _cycleByDay As Decimal = 0
        Dim _isDosageAccumulation As String = _dr("Is_Dosage_Accumulation").ToString
        Dim _weekIdGroup As String = _dr("Week_Id_Group").ToString.Replace(" ", String.Empty)
        Dim _accumulationId As String = _dr("Accumulation_Id").ToString

        '========== 有錯誤的狀態 ===================================================
        If (_dr.Item("Transfer_Factor_Dosage") Is DBNull.Value OrElse _dr.Item("Transfer_Factor_Dosage") = 0) OrElse _
           (_dr.Item("Transfer_Factor_Charge") Is DBNull.Value) OrElse _
           (_dr.Item("Times") Is DBNull.Value) Then

            Dim _returnDr As DataRow = _returnDt.NewRow
            _returnDr.Item("Correct") = False
            _returnDr.Item("ErrorMessage") = "計算失敗"
            'If _packageQty <> 0 Then
            '    _returnDr.Item("Tqty") = _packageQty
            'Else
            '    _returnDr.Item("Tqty") = 1
            'End If
            _returnDr.Item("Tqty") = 1
            _returnDr.Item("Tqty_Unit") = _chargeUnit
            _returnDt.Rows.Add(_returnDr)
            Return _returnDs
        End If
        '============================================================================

        '========== 切化療要算累計量料號 ==========
        Dim _phyChemoAccum As String = String.Empty
        If _dt2.Rows.Count > 0 Then
            _phyChemoAccum = _dt2.Rows(0)("Config_Value").ToString.TrimEnd
        End If
        Dim _chemoAccumOrders As String() = Me.SpliteString(_phyChemoAccum)
        '=============================================

        Dim _times As Int32 = _dr("Times")
        Dim _dosageOfDay As Decimal = dosage * _times '每日量

        If _isDosageAccumulation = "Y" And (_accumulationId = "1" OrElse _accumulationId = "2") Then
            'dosage = Math.Ceiling(dosage)
            Select Case _accumulationId
                Case "1" '每次量無條件進位
                    _dosageOfDay = Math.Ceiling(dosage) * _times
                Case "2" '每日量無條件進位
                    _dosageOfDay = Math.Ceiling(dosage * _times)
            End Select
        Else
            _dosageOfDay = dosage * _times
        End If

        Dim _newDays As Decimal = 0

        If _weekIdGroup = String.Empty Then
            '用Cycle_By_Day計算
            If (_dr.Item("Cycle_By_Day") Is DBNull.Value OrElse _dr.Item("Cycle_By_Day") = 0) Then
                '無法計算

                _newDays = Math.Ceiling(days / 1)
            Else
                '計算
                _newDays = Math.Ceiling(days / CDec(_dr.Item("Cycle_By_Day")))
            End If
        Else
            '用 Week_Id_Group計算
            Dim _beginDate As Date = Nothing
            Dim _endDate As Date = Nothing
            If _weekIdGroup <> String.Empty AndAlso Date.TryParse(BeginDate, _beginDate) AndAlso Date.TryParse(EndDate, _endDate) Then
                _newDays = ParseWeekIdGroup(_beginDate.Date, _endDate.Date, _weekIdGroup)
            End If
        End If

        '========== 有錯誤的狀態 ===================================================
        If (_newDays = 0) Then

            Dim _returnDr As DataRow = _returnDt.NewRow
            _returnDr.Item("Correct") = False
            _returnDr.Item("ErrorMessage") = "計算失敗"
            'If _packageQty <> 0 Then
            '    _returnDr.Item("Tqty") = _packageQty
            'Else
            '    _returnDr.Item("Tqty") = 1
            'End If
            _returnDr.Item("Tqty") = 1
            _returnDr.Item("Tqty_Unit") = _chargeUnit
            _returnDt.Rows.Add(_returnDr)
            Return _returnDs
        End If
        '============================================================================

        Dim _Tqty As Decimal = (_dosageOfDay * _newDays * _dr.Item("Transfer_Factor_Charge")) / (_dr.Item("Transfer_Factor_Dosage"))

        'MArked on 2011-05-11
        'If _packageQty <> 0 Then
        '    'package_qty
        '    Dim _x As Int32 = _Tqty \ _packageQty
        '    Dim _y As Decimal = _Tqty Mod _packageQty

        '    If _y > 0 Then
        '        _Tqty = (_x + 1) * _packageQty
        '    End If
        'End If

        ''Marked on 2011-03-02
        'If Not _chemoAccumOrders.Contains(orderCode.Trim) Then
        '    '要進位
        '    _Tqty = Math.Ceiling(_Tqty)
        'End If

        Dim _returnRow As DataRow = _returnDt.NewRow
        _returnRow.Item("Correct") = True

        _returnRow.Item("Tqty") = _Tqty

        'If _isTotalQty Then
        '    _returnRow.Item("Tqty") = _Tqty
        'Else
        '    If _packageQty = 0 Then
        '        _returnRow.Item("Tqty") = 1
        '    Else
        '        _returnRow.Item("Tqty") = _packageQty
        '    End If
        'End If

        _returnRow.Item("Tqty_Unit") = _chargeUnit
        _returnDt.Rows.Add(_returnRow)

        Return _returnDs
    End Function

    ''' <summary>
    ''' 取得日數
    ''' </summary>
    ''' <param name="BeginDate">處方起始日</param>
    ''' <param name="EndDate">處方結束日</param>
    ''' <param name="WeekIdGroup">Week_Id_Group</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function ParseWeekIdGroup(ByVal BeginDate As Date, ByVal EndDate As Date, ByVal WeekIdGroup As String) As Int32

        Dim _weekIdGroup = WeekIdGroup.Replace(" ", String.Empty).Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)
        Dim _dateList As New List(Of Date)

        Dim _currentDate As Date = BeginDate
        Do Until _currentDate > EndDate
            _dateList.Add(_currentDate)

            _currentDate = _currentDate.AddDays(1)
        Loop

        Dim _days = _dateList.Where(Function(r) _weekIdGroup.Contains(Me.GetWeekDay(r))).Count

        Return _days
    End Function

    ''' <summary>
    ''' 轉換成Day Of Week
    ''' </summary>
    ''' <param name="d">欲轉換的日期</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function GetWeekDay(ByVal d As Date) As String
        Dim _dayOfWeek As Int32 = CInt(d.DayOfWeek)
        Return IIf(_dayOfWeek = 0, 7, _dayOfWeek).ToString
    End Function

    ''' <summary>
    ''' 分割以 ',' 所隔開的字串
    ''' </summary>
    ''' <param name="inputString">欲分割之字串</param>
    ''' <returns>分割完後之字串陣列</returns>
    ''' <remarks></remarks>
    Private Function SpliteString(ByVal inputString As String) As String()

        Return inputString.Replace(" ", "").Split(New Char() {","}, StringSplitOptions.RemoveEmptyEntries)
    End Function

End Class


